{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\src\\\\Components\\\\Writers\\\\index.js\";\nimport React, { Fragment } from \"react\";\nimport { Link, Route } from \"react-router-dom\";\nimport Writer from \"./Writer\";\nexport default (function (_ref) {\n  var url = _ref.match.url,\n      writers = _ref.writers;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, writers.map(function (_ref2) {\n    var id = _ref2.id,\n        name = _ref2.name;\n    return React.createElement(\"li\", {\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"\".concat(url, \"/\").concat(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, name));\n  })), React.createElement(Route, {\n    exact: true,\n    path: url,\n    render: function render() {\n      return React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"Please select a writer from above.\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"\".concat(url, \"/:writerId\"),\n    render: function render(props) {\n      var writer = writers.find(function (_ref3) {\n        var id = _ref3.id;\n        return id === props.match.params.writerId;\n      });\n\n      if (!writer) {\n        return React.createElement(NotFound, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Writer, Object.assign({}, props, writer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }));\n});","map":{"version":3,"sources":["C:\\Users\\kanto\\OneDrive\\Desktop\\blog\\src\\Components\\Writers\\index.js"],"names":["React","Fragment","Link","Route","Writer","url","match","writers","map","id","name","props","writer","find","params","writerId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,kBAA5B;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,gBAAe;AAAA,MAAYC,GAAZ,QAAGC,KAAH,CAAYD,GAAZ;AAAA,MAAmBE,OAAnB,QAAmBA,OAAnB;AAAA,SACb,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OAAO,CAACC,GAAR,CAAY;AAAA,QAAGC,EAAH,SAAGA,EAAH;AAAA,QAAOC,IAAP,SAAOA,IAAP;AAAA,WACX;AAAI,MAAA,GAAG,EAAED,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,YAAKJ,GAAL,cAAYI,EAAZ,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BC,IAA3B,CADF,CADW;AAAA,GAAZ,CADH,CADF,EASE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAEL,GAFR;AAGE,IAAA,MAAM,EAAE;AAAA,aAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAAN;AAAA,KAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAcE,oBAAC,KAAD;AACE,IAAA,IAAI,YAAKA,GAAL,eADN;AAEE,IAAA,MAAM,EAAE,gBAAAM,KAAK,EAAI;AACf,UAAMC,MAAM,GAAGL,OAAO,CAACM,IAAR,CACb;AAAA,YAAGJ,EAAH,SAAGA,EAAH;AAAA,eAAYA,EAAE,KAAKE,KAAK,CAACL,KAAN,CAAYQ,MAAZ,CAAmBC,QAAtC;AAAA,OADa,CAAf;;AAIA,UAAI,CAACH,MAAL,EAAa;AACX,eAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,aAAO,oBAAC,MAAD,oBAAYD,KAAZ,EAAuBC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD,KAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CADa;AAAA,CAAf","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport { Link, Route } from \"react-router-dom\";\r\n\r\nimport Writer from \"./Writer\";\r\n\r\nexport default ({ match: { url }, writers }) => (\r\n  <Fragment>\r\n    <ul>\r\n      {writers.map(({ id, name }) => (\r\n        <li key={id}>\r\n          <Link to={`${url}/${id}`}>{name}</Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n\r\n    <Route\r\n      exact\r\n      path={url}\r\n      render={() => <h3>Please select a writer from above.</h3>}\r\n    />\r\n    <Route\r\n      path={`${url}/:writerId`}\r\n      render={props => {\r\n        const writer = writers.find(\r\n          ({ id }) => id === props.match.params.writerId\r\n        );\r\n\r\n        if (!writer) {\r\n          return <NotFound />;\r\n        }\r\n\r\n        return <Writer {...props} {...writer} />;\r\n      }}\r\n    />\r\n  </Fragment>\r\n);\r\n"]},"metadata":{},"sourceType":"module"}