{"ast":null,"code":"import { auth, googleProvider } from \"../Firebase\";\nimport { useCookies } from \"react-cookie\";\nexport var GET_USER = \"get_user\";\nexport var USER_STATUS = \"user_status\";\nexport function getUser() {\n  return function (dispatch) {\n    dispatch({\n      type: USER_STATUS,\n      payload: true\n    });\n    auth.onAuthStateChanged(function (user) {\n      dispatch({\n        type: GET_USER,\n        payload: user\n      });\n      dispatch({\n        type: USER_STATUS,\n        payload: false\n      });\n    });\n  };\n}\nexport function login(email, password) {\n  console.log(email); // Cookies.set(\"username\", username, \"/\");\n  // useCookies(\"username\", username, { path: \"/\" });\n\n  return function (dispatch) {\n    auth.signInWithEmailAndPassword(email, password);\n  };\n}\nexport function logout() {\n  return function (dispatch) {\n    return auth.signOut();\n  };\n}\nexport function createAccount(email, password, username) {\n  return function (dispatch) {\n    auth.createUserWithEmailAndPassword(email, password).then(function (user) {\n      dispatch({\n        type: \"success\"\n      });\n      auth.ref(\"users/\".concat(user.uid)).set({\n        name: username\n      });\n      console.log(\"uid:\", user.uid);\n    });\n  };\n}","map":{"version":3,"sources":["C:\\Users\\kanto\\OneDrive\\Desktop\\blog\\src\\Actions\\UserActions.jsx"],"names":["auth","googleProvider","useCookies","GET_USER","USER_STATUS","getUser","dispatch","type","payload","onAuthStateChanged","user","login","email","password","console","log","signInWithEmailAndPassword","logout","signOut","createAccount","username","createUserWithEmailAndPassword","then","ref","uid","set","name"],"mappings":"AAAA,SAASA,IAAT,EAAeC,cAAf,QAAqC,aAArC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAO,IAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,IAAMC,WAAW,GAAG,aAApB;AAEP,OAAO,SAASC,OAAT,GAAmB;AACxB,SAAO,UAAAC,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEH,WADC;AAEPI,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAIAR,IAAAA,IAAI,CAACS,kBAAL,CAAwB,UAAAC,IAAI,EAAI;AAC9BJ,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEJ,QADC;AAEPK,QAAAA,OAAO,EAAEE;AAFF,OAAD,CAAR;AAIAJ,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEH,WADC;AAEPI,QAAAA,OAAO,EAAE;AAFF,OAAD,CAAR;AAID,KATD;AAUD,GAfD;AAgBD;AAED,OAAO,SAASG,KAAT,CAAeC,KAAf,EAAsBC,QAAtB,EAAgC;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EADqC,CAErC;AACA;;AACA,SAAO,UAAAN,QAAQ,EAAI;AACjBN,IAAAA,IAAI,CAACgB,0BAAL,CAAgCJ,KAAhC,EAAuCC,QAAvC;AACD,GAFD;AAGD;AAED,OAAO,SAASI,MAAT,GAAkB;AACvB,SAAO,UAAAX,QAAQ;AAAA,WAAIN,IAAI,CAACkB,OAAL,EAAJ;AAAA,GAAf;AACD;AAED,OAAO,SAASC,aAAT,CAAuBP,KAAvB,EAA8BC,QAA9B,EAAwCO,QAAxC,EAAkD;AACvD,SAAO,UAAAd,QAAQ,EAAI;AACjBN,IAAAA,IAAI,CAACqB,8BAAL,CAAoCT,KAApC,EAA2CC,QAA3C,EAAqDS,IAArD,CAA0D,UAASZ,IAAT,EAAe;AACvEJ,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACAP,MAAAA,IAAI,CAACuB,GAAL,iBAAkBb,IAAI,CAACc,GAAvB,GAA8BC,GAA9B,CAAkC;AAAEC,QAAAA,IAAI,EAAEN;AAAR,OAAlC;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBL,IAAI,CAACc,GAAzB;AACD,KAJD;AAKD,GAND;AAOD","sourcesContent":["import { auth, googleProvider } from \"../Firebase\";\r\nimport { useCookies } from \"react-cookie\";\r\nexport const GET_USER = \"get_user\";\r\nexport const USER_STATUS = \"user_status\";\r\n\r\nexport function getUser() {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: USER_STATUS,\r\n      payload: true\r\n    });\r\n    auth.onAuthStateChanged(user => {\r\n      dispatch({\r\n        type: GET_USER,\r\n        payload: user\r\n      });\r\n      dispatch({\r\n        type: USER_STATUS,\r\n        payload: false\r\n      });\r\n    });\r\n  };\r\n}\r\n\r\nexport function login(email, password) {\r\n  console.log(email);\r\n  // Cookies.set(\"username\", username, \"/\");\r\n  // useCookies(\"username\", username, { path: \"/\" });\r\n  return dispatch => {\r\n    auth.signInWithEmailAndPassword(email, password);\r\n  };\r\n}\r\n\r\nexport function logout() {\r\n  return dispatch => auth.signOut();\r\n}\r\n\r\nexport function createAccount(email, password, username) {\r\n  return dispatch => {\r\n    auth.createUserWithEmailAndPassword(email, password).then(function(user) {\r\n      dispatch({ type: \"success\" });\r\n      auth.ref(`users/${user.uid}`).set({ name: username });\r\n      console.log(\"uid:\", user.uid);\r\n    });\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}