{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\src\\\\Container\\\\ListPosts.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getPosts, savePost, deletePost } from '../Actions/PostActions';\nimport { reduxForm, reset } from 'redux-form';\nimport _ from 'lodash';\nimport Link from \"react-router-dom/es/Link\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport renderHTML from 'react-render-html';\nimport compose from 'recompose/compose';\nimport withWidth from '@material-ui/core/withWidth';\nimport \"../Layout/Navbar.css\";\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    title: {\n      left: 20,\n      fontSize: 20,\n      fontFamily: \" 'Josefin Sans', sans-serif;\"\n    },\n    col: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      marginLeft: 40,\n      overflow: 'hidden',\n      flexDirection: \"row\",\n      md: \"auto\",\n      spacing: 0,\n      actionPosition: \"right\",\n      item: \"true\"\n    },\n    card: {\n      maxWidth: 600\n    },\n    media: {\n      verticalAlign: \"middle\",\n      height: 200,\n      marginTop: 15\n    },\n    overlay: {\n      position: 'absolute',\n      top: '160px',\n      color: 'black',\n      backgroundColor: 'rgba(176, 181, 177, 0.45)',\n      width: 600\n    },\n    container: {\n      display: 'flex'\n    },\n    paper: {\n      padding: theme.spacing.unit * 2,\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n      flex: '1 0 auto',\n      margin: theme.spacing.unit\n    }\n  };\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.getPosts();\n    }\n  }, {\n    key: \"renderPosts\",\n    value: function renderPosts() {\n      var classes = this.props.classes;\n      return _.map(this.props.posts, function (post, key) {\n        return React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: classes.col,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/\".concat(key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(Card, {\n          className: classes.card,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(CardActionArea, {\n          className: classes.actionarea,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(CardMedia, {\n          className: classes.media,\n          height: \"100\",\n          width: \"300\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"post-naslovna\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, renderHTML(post.naslovna)), React.createElement(CardContent, {\n          className: classes.overlay,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: classes.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, post.title, \"   \"))))))));\n      });\n    }\n  }, {\n    key: \"renderField\",\n    value: function renderField(field) {\n      return React.createElement(\"input\", Object.assign({\n        type: \"text\",\n        placeholder: \"Enter a \".concat(field.label, \"...\")\n      }, field.input, {\n        className: field.class,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(values) {\n      this.props.savePost(values).then(this.props.dispatch(reset('NewPost')));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-10 right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, this.renderPosts()))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar form = reduxForm({\n  form: 'NewPost'\n})(App);\nform = connect(function (state, ownProps) {\n  return {\n    posts: state.posts\n  };\n}, {\n  savePost: savePost,\n  getPosts: getPosts,\n  deletePost: deletePost\n})(form);\nform.propTypes = {\n  classes: PropTypes.object.isRequired,\n  width: PropTypes.string.isRequired\n};\nexport default compose(withStyles(styles), withWidth())(form);\n/*   <button className=\"btn btn-danger float-right\" onClick={() => this.props.deletePost(key)}>Delete</button>*/\n\n/* <Link to= {`/${key}`}> </Link> */","map":{"version":3,"sources":["C:\\Users\\kanto\\OneDrive\\Desktop\\blog\\src\\Container\\ListPosts.jsx"],"names":["React","Component","connect","getPosts","savePost","deletePost","reduxForm","reset","_","Link","PropTypes","withStyles","Card","CardActionArea","CardContent","CardMedia","renderHTML","compose","withWidth","styles","theme","root","flexGrow","title","left","fontSize","fontFamily","col","display","flexWrap","marginLeft","overflow","flexDirection","md","spacing","actionPosition","item","card","maxWidth","media","verticalAlign","height","marginTop","overlay","position","top","color","backgroundColor","width","container","paper","padding","unit","textAlign","palette","text","secondary","flex","margin","App","props","classes","map","posts","post","key","actionarea","naslovna","field","label","input","class","values","then","dispatch","renderPosts","form","state","ownProps","propTypes","object","isRequired","string"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getPosts, savePost, deletePost } from '../Actions/PostActions';\nimport {  reduxForm, reset } from 'redux-form';  \nimport _ from 'lodash';  \nimport Link from \"react-router-dom/es/Link\"; \nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles'; \nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea'; \nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia'\nimport renderHTML from 'react-render-html';  \nimport compose from 'recompose/compose';  \nimport withWidth from '@material-ui/core/withWidth';\nimport \"../Layout/Navbar.css\" \n \nconst styles = theme => ({\n    root: {\n       \n        flexGrow: 1,\n      }, \n     title: {\n       left: 20,\n         fontSize: 20,\n         fontFamily: \" 'Josefin Sans', sans-serif;\",\n         \n     },\n     col: {\n      display: 'flex',\n      flexWrap: 'wrap',\n       marginLeft: 40,\n      overflow: 'hidden',\n      flexDirection: \"row\",\n      md: \"auto\",\n      spacing: 0,\n      actionPosition: \"right\",\n      item: \"true\"\n     },\n     card: {\n       maxWidth: 600,\n      \n     },\n     media: {\n       verticalAlign: \"middle\",\n       height: 200, \n       marginTop: 15\n     },\n     overlay: {\n      position: 'absolute',\n      top: '160px', \n      color: 'black',\n      backgroundColor: 'rgba(176, 181, 177, 0.45)',\n      width: 600  \n   }, \n  container: {\n    display: 'flex',\n  },\n  paper: {\n    padding: theme.spacing.unit * 2,\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    flex: '1 0 auto',\n    margin: theme.spacing.unit,\n  },\n     \n     \n})\nclass App extends Component {\n \n\n  componentWillMount() {\n    this.props.getPosts();\n     \n  } \n  renderPosts() {    \n    const { classes } = this.props; \n    return _.map(this.props.posts, (post, key) => { \n    return (  \n        \n     <div className=\"row\">\n     <div className={classes.col}> \n        \n      <Link to= {`/${key}`}> \n        < Card  className={classes.card }> \n          <CardActionArea className={classes.actionarea}>\n            <CardMedia \n               \n              className={classes.media}\n              height=\"100\"\n              width=\"300\" \n            >\n              <span className=\"post-naslovna\" >{renderHTML(post.naslovna)}</span> \n              <CardContent className={classes.overlay}>\n                      {<span className={classes.title}>{post.title}   </span>}\n                    </CardContent> \n             </CardMedia>\n                    \n                </CardActionArea>\n                </Card>\n        </Link>\n         </div>  \n         </div>\n      );\n    });\n  }\n\n  renderField(field) {\n    return (\n      <input type=\"text\" placeholder={`Enter a ${field.label}...`} {...field.input} className={field.class}/>\n    );\n  }\n  onSubmit(values) {\n    this.props.savePost(values).then(this.props.dispatch(reset('NewPost')));\n  }\n\n  render() { \n    const { classes } = this.props;\n    return (\n      <div className={classes.root}> \n        \n    \n       <div className=\"container\"> \n        <div className=\"row\">\n       \n        <div className=\"col-10 right\">\n         {this.renderPosts()} \n        </div> \n         \n        </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nlet form = reduxForm({\n  form: 'NewPost'\n})(App);\n\nform = connect((state, ownProps) => ({\n    posts: state.posts,\n  \n  }), { savePost, getPosts, deletePost  }\n)(form);\n form.propTypes = {\n     classes: PropTypes.object.isRequired,\n     width: PropTypes.string.isRequired\n }\nexport default compose(withStyles(styles), withWidth())(form);\n \n\n  /*   <button className=\"btn btn-danger float-right\" onClick={() => this.props.deletePost(key)}>Delete</button>*/\n  /* <Link to= {`/${key}`}> </Link> */"]},"metadata":{},"sourceType":"module"}