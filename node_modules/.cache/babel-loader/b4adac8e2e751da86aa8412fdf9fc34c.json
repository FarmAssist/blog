{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\src\\\\Container\\\\CreateAccount.jsx\";\nimport React, { Component } from \"react\";\nimport InputField from \"../Components/InputField\";\nimport FooterFormButton from \"../Components/FooterFormButton\";\nimport SimpleBox from \"../Components/SimpleBox\";\nimport { createAccount } from \"../Actions/UserActions\";\nimport { connect } from \"react-redux\";\nimport ErrorAlert from \"../Components/ErrorAlert\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\n\nvar styles = function styles(theme) {\n  return {\n    tit: {\n      textDecoration: \"none\"\n    },\n    title: {\n      fontSize: 20,\n      fontFamily: \"'Montserrat', sans-serif\"\n    },\n    textField: {\n      marginLeft: 30,\n      width: 300,\n      padding: 5\n    },\n    pos: {\n      marginBottom: 12\n    },\n    reg: {\n      marginLeft: 35\n    },\n    cssLabel: {\n      \"&$cssFocused\": {\n        color: \"#003300\",\n        fontSize: 20\n      }\n    },\n    cssFocused: {},\n    cssUnderline: {\n      \"&:after\": {\n        borderBottomColor: \"#003300\"\n      }\n    },\n    cssOutlinedInput: {\n      \"&$cssFocused $notchedOutline\": {\n        borderColor: \"#003300\"\n      }\n    },\n    notchedOutline: {},\n    bootstrapRoot: {\n      \"label + &\": {\n        marginTop: theme.spacing.unit * 3\n      }\n    },\n    bootstrapInput: {\n      borderRadius: 6,\n      backgroundColor: \"#003300\",\n      border: \"1px solid #003300\",\n      fontSize: 16,\n      width: \"600px\",\n      padding: \"10px 12px\",\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n      // Use the system font instead of the default Roboto font.\n      fontFamily: [\"-apple-system\", \"BlinkMacSystemFont\", '\"Segoe UI\"', \"Roboto\", '\"Helvetica Neue\"', \"Arial\", \"sans-serif\", '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(\",\"),\n      \"&:focus\": {\n        borderRadius: 6,\n        borderColor: \"#003300\",\n        boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\"\n      }\n    },\n    bootstrapFormLabel: {\n      fontSize: 20\n    },\n    dense: {\n      marginTop: 25\n    },\n    input: {\n      marginLeft: 5,\n      fontSize: 20\n    },\n    paper: {\n      position: \"absolute\",\n      width: theme.spacing.unit * 50,\n      backgroundColor: \"white\",\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing.unit * 4,\n      outline: \"none\"\n    },\n    form: {\n      marginLeft: \"-5% !important\"\n    }\n  };\n};\n\nvar CreateAccount =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateAccount, _Component);\n\n  function CreateAccount(props) {\n    var _this;\n\n    _classCallCheck(this, CreateAccount);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateAccount).call(this, props));\n    _this.state = {\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      error: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(CreateAccount, [{\n    key: \"isValid\",\n    value: function isValid() {\n      var _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password,\n          confirmPassword = _this$state.confirmPassword;\n\n      if (email === \"\" || password === \"\" || confirmPassword === \"\") {\n        this.setState({\n          error: \"Ispunite sva polja\"\n        });\n        return false;\n      }\n\n      if (password !== confirmPassword) {\n        this.setState({\n          error: \"Obje lozinke moraju biti iste.\"\n        });\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"submitAccount\",\n    value: function submitAccount(event) {\n      var _this2 = this;\n\n      event.preventDefault();\n\n      if (!this.isValid()) {\n        return;\n      }\n\n      this.props.createAccount(this.state.email, this.state.password).then(function () {\n        _this2.props.history.replace(\"/\");\n      }).catch(function (err) {\n        _this2.setState({\n          error: err.message\n        });\n      });\n    }\n  }, {\n    key: \"renderBody\",\n    value: function renderBody() {\n      var _this3 = this;\n\n      var errStyle = {\n        borderColor: \"red\"\n      };\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: function onSubmit(event) {\n          return _this3.submitAccount(event);\n        },\n        className: classes.form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"email\",\n        type: \"text\",\n        label: \"Email\",\n        inputAction: function inputAction(event) {\n          return _this3.setState({\n            email: event.target.value\n          });\n        },\n        style: this.state.error ? errStyle : null,\n        className: classes.textField,\n        variant: \"outlined\",\n        InputLabelProps: {\n          classes: {\n            root: classes.cssLabel,\n            focused: classes.cssFocused\n          }\n        },\n        InputProps: {\n          classes: {\n            root: classes.cssOutlinedInput,\n            focused: classes.cssFocused,\n            notchedOutline: classes.notchedOutline,\n            input: classes.input\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"password\",\n        type: \"password\",\n        label: \"Lozinka\",\n        className: classes.textField,\n        inputAction: function inputAction(event) {\n          return _this3.setState({\n            password: event.target.value\n          });\n        },\n        style: this.state.error ? errStyle : null,\n        variant: \"outlined\",\n        InputLabelProps: {\n          classes: {\n            root: classes.cssLabel,\n            focused: classes.cssFocused\n          }\n        },\n        InputProps: {\n          classes: {\n            root: classes.cssOutlinedInput,\n            focused: classes.cssFocused,\n            notchedOutline: classes.notchedOutline,\n            input: classes.input\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"confirm-password\",\n        type: \"password\",\n        label: \"Potvrdi lozinku\",\n        inputAction: function inputAction(event) {\n          return _this3.setState({\n            confirmPassword: event.target.value\n          });\n        },\n        style: this.state.error ? errStyle : null,\n        className: classes.textField,\n        variant: \"outlined\",\n        InputLabelProps: {\n          classes: {\n            root: classes.cssLabel,\n            focused: classes.cssFocused\n          }\n        },\n        InputProps: {\n          classes: {\n            root: classes.cssOutlinedInput,\n            focused: classes.cssFocused,\n            notchedOutline: classes.notchedOutline,\n            input: classes.input\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }), this.state.error && React.createElement(ErrorAlert, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, this.state.error), React.createElement(FooterFormButton, Object.assign({\n        submitLabel: \"Registracija\"\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(SimpleBox, {\n        body: this.renderBody(),\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, \"Kreiraj korisni\\u010Dki ra\\u010Dun\", \" \");\n    }\n  }]);\n\n  return CreateAccount;\n}(Component);\n\nCreateAccount.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default connect(null, {\n  createAccount: createAccount\n})(withStyles(styles)(CreateAccount));","map":{"version":3,"sources":["C:\\Users\\kanto\\OneDrive\\Desktop\\blog\\src\\Container\\CreateAccount.jsx"],"names":["React","Component","InputField","FooterFormButton","SimpleBox","createAccount","connect","ErrorAlert","PropTypes","withStyles","Card","CardContent","Button","Typography","TextField","styles","theme","tit","textDecoration","title","fontSize","fontFamily","textField","marginLeft","width","padding","pos","marginBottom","reg","cssLabel","color","cssFocused","cssUnderline","borderBottomColor","cssOutlinedInput","borderColor","notchedOutline","bootstrapRoot","marginTop","spacing","unit","bootstrapInput","borderRadius","backgroundColor","border","transition","transitions","create","join","boxShadow","bootstrapFormLabel","dense","input","paper","position","shadows","outline","form","CreateAccount","props","state","email","password","confirmPassword","error","setState","event","preventDefault","isValid","then","history","replace","catch","err","message","errStyle","classes","submitAccount","target","value","root","focused","renderBody","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport InputField from \"../Components/InputField\";\r\nimport FooterFormButton from \"../Components/FooterFormButton\";\r\nimport SimpleBox from \"../Components/SimpleBox\";\r\nimport { createAccount } from \"../Actions/UserActions\";\r\nimport { connect } from \"react-redux\";\r\nimport ErrorAlert from \"../Components/ErrorAlert\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nconst styles = theme => ({\r\n  tit: {\r\n    textDecoration: \"none\"\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontFamily: \"'Montserrat', sans-serif\"\r\n  },\r\n  textField: {\r\n    marginLeft: 30,\r\n    width: 300,\r\n    padding: 5\r\n  },\r\n  pos: {\r\n    marginBottom: 12\r\n  },\r\n  reg: {\r\n    marginLeft: 35\r\n  },\r\n  cssLabel: {\r\n    \"&$cssFocused\": {\r\n      color: \"#003300\",\r\n      fontSize: 20\r\n    }\r\n  },\r\n  cssFocused: {},\r\n  cssUnderline: {\r\n    \"&:after\": {\r\n      borderBottomColor: \"#003300\"\r\n    }\r\n  },\r\n  cssOutlinedInput: {\r\n    \"&$cssFocused $notchedOutline\": {\r\n      borderColor: \"#003300\"\r\n    }\r\n  },\r\n  notchedOutline: {},\r\n  bootstrapRoot: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing.unit * 3\r\n    }\r\n  },\r\n  bootstrapInput: {\r\n    borderRadius: 6,\r\n    backgroundColor: \"#003300\",\r\n    border: \"1px solid #003300\",\r\n    fontSize: 16,\r\n    width: \"600px\",\r\n    padding: \"10px 12px\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"'\r\n    ].join(\",\"),\r\n    \"&:focus\": {\r\n      borderRadius: 6,\r\n      borderColor: \"#003300\",\r\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\"\r\n    }\r\n  },\r\n  bootstrapFormLabel: {\r\n    fontSize: 20\r\n  },\r\n  dense: {\r\n    marginTop: 25\r\n  },\r\n  input: {\r\n    marginLeft: 5,\r\n    fontSize: 20\r\n  },\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: theme.spacing.unit * 50,\r\n    backgroundColor: \"white\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing.unit * 4,\r\n    outline: \"none\"\r\n  },\r\n  form: {\r\n    marginLeft: \"-5% !important\"\r\n  }\r\n});\r\n\r\nclass CreateAccount extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      error: \"\"\r\n    };\r\n  }\r\n\r\n  isValid() {\r\n    const { email, password, confirmPassword } = this.state;\r\n\r\n    if (email === \"\" || password === \"\" || confirmPassword === \"\") {\r\n      this.setState({\r\n        error: \"Ispunite sva polja\"\r\n      });\r\n      return false;\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      this.setState({\r\n        error: \"Obje lozinke moraju biti iste.\"\r\n      });\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  submitAccount(event) {\r\n    event.preventDefault();\r\n    if (!this.isValid()) {\r\n      return;\r\n    }\r\n    this.props\r\n      .createAccount(this.state.email, this.state.password)\r\n      .then(() => {\r\n        this.props.history.replace(\"/\");\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          error: err.message\r\n        });\r\n      });\r\n  }\r\n\r\n  renderBody() {\r\n    const errStyle = {\r\n      borderColor: \"red\"\r\n    };\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={event => this.submitAccount(event)}\r\n          className={classes.form}\r\n        >\r\n          <TextField\r\n            id=\"email\"\r\n            type=\"text\"\r\n            label=\"Email\"\r\n            inputAction={event => this.setState({ email: event.target.value })}\r\n            style={this.state.error ? errStyle : null}\r\n            className={classes.textField}\r\n            variant=\"outlined\"\r\n            InputLabelProps={{\r\n              classes: {\r\n                root: classes.cssLabel,\r\n                focused: classes.cssFocused\r\n              }\r\n            }}\r\n            InputProps={{\r\n              classes: {\r\n                root: classes.cssOutlinedInput,\r\n                focused: classes.cssFocused,\r\n                notchedOutline: classes.notchedOutline,\r\n                input: classes.input\r\n              }\r\n            }}\r\n          />{\" \"}\r\n          <br />\r\n          <TextField\r\n            id=\"password\"\r\n            type=\"password\"\r\n            label=\"Lozinka\"\r\n            className={classes.textField}\r\n            inputAction={event =>\r\n              this.setState({ password: event.target.value })\r\n            }\r\n            style={this.state.error ? errStyle : null}\r\n            variant=\"outlined\"\r\n            InputLabelProps={{\r\n              classes: {\r\n                root: classes.cssLabel,\r\n                focused: classes.cssFocused\r\n              }\r\n            }}\r\n            InputProps={{\r\n              classes: {\r\n                root: classes.cssOutlinedInput,\r\n                focused: classes.cssFocused,\r\n                notchedOutline: classes.notchedOutline,\r\n                input: classes.input\r\n              }\r\n            }}\r\n          />{\" \"}\r\n          <br />\r\n          <TextField\r\n            id=\"confirm-password\"\r\n            type=\"password\"\r\n            label=\"Potvrdi lozinku\"\r\n            inputAction={event =>\r\n              this.setState({ confirmPassword: event.target.value })\r\n            }\r\n            style={this.state.error ? errStyle : null}\r\n            className={classes.textField}\r\n            variant=\"outlined\"\r\n            InputLabelProps={{\r\n              classes: {\r\n                root: classes.cssLabel,\r\n                focused: classes.cssFocused\r\n              }\r\n            }}\r\n            InputProps={{\r\n              classes: {\r\n                root: classes.cssOutlinedInput,\r\n                focused: classes.cssFocused,\r\n                notchedOutline: classes.notchedOutline,\r\n                input: classes.input\r\n              }\r\n            }}\r\n          />{\" \"}\r\n          <br />\r\n          {this.state.error && <ErrorAlert>{this.state.error}</ErrorAlert>}\r\n          <FooterFormButton submitLabel=\"Registracija\" {...this.props} />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <SimpleBox body={this.renderBody()} className=\"title\">\r\n        Kreiraj korisnički račun{\" \"}\r\n      </SimpleBox>\r\n    );\r\n  }\r\n}\r\nCreateAccount.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { createAccount }\r\n)(withStyles(styles)(CreateAccount));\r\n"]},"metadata":{},"sourceType":"module"}