{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\src\\\\Container\\\\ListPosts.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getPosts, savePost, deletePost } from \"../Actions/PostActions\";\nimport { reduxForm, reset } from \"redux-form\";\nimport _ from \"lodash\";\nimport { getUser, logout } from \"../Actions/UserActions\";\nimport Link from \"react-router-dom/es/Link\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport renderHTML from \"react-render-html\";\nimport compose from \"recompose/compose\";\nimport withWidth from \"@material-ui/core/withWidth\";\nimport \"../Layout/Navbar.css\";\nimport SignedInLinks from \"../Dashboard/SignedInLinks\";\nimport Navbar from \"../Layout/Navbar\";\nimport MenuBar from \"../Layout/MenuBar\";\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    title: {\n      left: 20,\n      fontSize: 20,\n      fontFamily: \" 'Josefin Sans', sans-serif;\"\n    },\n    col: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      marginLeft: 40,\n      overflow: \"hidden\",\n      flexDirection: \"row\",\n      md: \"auto\",\n      spacing: 0,\n      actionPosition: \"right\",\n      item: \"true\"\n    },\n    card: {\n      maxWidth: 600,\n      backgroundColor: \"#e0e0e0\",\n      marginTop: -10\n    },\n    media: {\n      verticalAlign: \"middle\",\n      height: 200,\n      top: 5\n    },\n    overlay: {\n      position: \"absolute\",\n      top: \"160px\",\n      color: \"black\",\n      backgroundColor: \"rgba(176, 181, 177, 0.45)\",\n      width: 600\n    },\n    container: {\n      display: \"flex\"\n    }\n  };\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.getPosts();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.user.loading === false && nextProps.user.email === undefined) {\n        this.props.history.replace(\"/Login\");\n      }\n    }\n  }, {\n    key: \"renderPosts\",\n    value: function renderPosts() {\n      var classes = this.props.classes;\n      return _.map(this.props.posts, function (post, key) {\n        return React.createElement(Link, {\n          to: \"/\".concat(key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"tile\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(CardMedia, {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, renderHTML(post.naslovna)), React.createElement(\"div\", {\n          className: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, post.title), React.createElement(\"p\", {\n          className: \"animate-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"sazetak\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, renderHTML(post.sazetak))), React.createElement(\"p\", {\n          className: \"animate-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"signature\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, \"Napisao : \", renderHTML(post.signature)))))), \" \");\n      });\n    }\n  }, {\n    key: \"renderField\",\n    value: function renderField(field) {\n      return React.createElement(\"input\", Object.assign({\n        type: \"text\",\n        placeholder: \"Enter a \".concat(field.label, \"...\")\n      }, field.input, {\n        className: field.class,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(values) {\n      this.props.savePost(values).then(this.props.dispatch(reset(\"NewPost\")));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(MenuBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, this.renderPosts())), React.createElement(\"div\", {\n        className: \"side\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(SignedInLinks, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar form = reduxForm({\n  form: \"NewPost\"\n})(App);\nform = connect(function (state, ownProps) {\n  return {\n    posts: state.posts,\n    user: state.user\n  };\n}, {\n  savePost: savePost,\n  getPosts: getPosts,\n  deletePost: deletePost,\n  getUser: getUser,\n  logout: logout\n})(form);\nform.propTypes = {\n  classes: PropTypes.object.isRequired,\n  width: PropTypes.string.isRequired\n};\nexport default compose(withStyles(styles), withWidth())(form);\n/*  <Card className={classes.card}>\n              <CardActionArea className={classes.actionarea}>\n                <CardMedia className={classes.media} height=\"100\" width=\"300\">\n                  <span>{renderHTML(post.naslovna)}</span>\n\n                  <CardContent className={classes.overlay}>\n                    {<span className={classes.title}>{post.title} </span>}\n                  </CardContent>\n                </CardMedia>\n              </CardActionArea>\n            </Card>\n            */\n\n/*\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getPosts, savePost, deletePost } from \"../Actions/PostActions\";\nimport { reduxForm, reset } from \"redux-form\";\nimport _ from \"lodash\";\nimport Link from \"react-router-dom/es/Link\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport renderHTML from \"react-render-html\";\nimport compose from \"recompose/compose\";\nimport withWidth from \"@material-ui/core/withWidth\";\nimport \"../Layout/Navbar.css\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  title: {\n    left: 20,\n    fontSize: 20,\n    fontFamily: \" 'Josefin Sans', sans-serif;\"\n  },\n  col: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    marginLeft: 40,\n    overflow: \"hidden\",\n    flexDirection: \"row\",\n    md: \"auto\",\n    spacing: 0,\n    actionPosition: \"right\",\n    item: \"true\"\n  },\n  card: {\n    maxWidth: 600\n  },\n  media: {\n    verticalAlign: \"middle\",\n    height: 200,\n    marginTop: 15\n  },\n  overlay: {\n    position: \"absolute\",\n    top: \"160px\",\n    color: \"black\",\n    backgroundColor: \"rgba(176, 181, 177, 0.45)\",\n    width: 600\n  },\n  container: {\n    display: \"flex\"\n  },\n  paper: {\n    padding: theme.spacing.unit * 2,\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n    flex: \"1 0 auto\",\n    margin: theme.spacing.unit\n  }\n});\nclass App extends Component {\n  componentWillMount() {\n    this.props.getPosts();\n  }\n  renderPosts() {\n    const { classes } = this.props;\n    return _.map(this.props.posts, (post, key) => {\n      return (\n        <div className=\"row\">\n          <div className={classes.col}>\n            <Link to={`/${key}`}>\n              <Card className={classes.card}>\n                <CardActionArea className={classes.actionarea}>\n                  <CardMedia className={classes.media} height=\"100\" width=\"300\">\n                    <span className=\"post-naslovna\">\n                      {renderHTML(post.naslovna)}\n                    </span>\n                    <CardContent className={classes.overlay}>\n                      {<span className={classes.title}>{post.title} </span>}\n                    </CardContent>\n                  </CardMedia>\n                </CardActionArea>\n              </Card>\n            </Link>\n          </div>\n        </div>\n      );\n    });\n  }\n\n  renderField(field) {\n    return (\n      <input\n        type=\"text\"\n        placeholder={`Enter a ${field.label}...`}\n        {...field.input}\n        className={field.class}\n      />\n    );\n  }\n  onSubmit(values) {\n    this.props.savePost(values).then(this.props.dispatch(reset(\"NewPost\")));\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <div className=\"navbar\">\n          <button\n            className=\"btn btn-danger\"\n            onClick={() => {\n              this.props.logout();\n            }}\n          >\n            Sign out\n          </button>\n        </div>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-10 right\">{this.renderPosts()}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nlet form = reduxForm({\n  form: \"NewPost\"\n})(App);\n\nform = connect(\n  (state, ownProps) => ({\n    posts: state.posts\n  }),\n  { savePost, getPosts, deletePost }\n)(form);\nform.propTypes = {\n  classes: PropTypes.object.isRequired,\n  width: PropTypes.string.isRequired\n};\nexport default compose(\n  withStyles(styles),\n  withWidth()\n)(form);\n\n/*   <button className=\"btn btn-danger float-right\" onClick={() => this.props.deletePost(key)}>Delete</button>*/\n\n/* <Link to= {`/${key}`}> </Link> */","map":{"version":3,"sources":["C:\\Users\\kanto\\OneDrive\\Desktop\\blog\\src\\Container\\ListPosts.jsx"],"names":["React","Component","connect","getPosts","savePost","deletePost","reduxForm","reset","_","getUser","logout","Link","PropTypes","withStyles","CardMedia","renderHTML","compose","withWidth","SignedInLinks","Navbar","MenuBar","styles","theme","root","flexGrow","title","left","fontSize","fontFamily","col","display","flexWrap","marginLeft","overflow","flexDirection","md","spacing","actionPosition","item","card","maxWidth","backgroundColor","marginTop","media","verticalAlign","height","top","overlay","position","color","width","container","App","props","nextProps","user","loading","email","undefined","history","replace","classes","map","posts","post","key","naslovna","sazetak","signature","field","label","input","class","values","then","dispatch","renderPosts","form","state","ownProps","propTypes","object","isRequired","string"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getPosts, savePost, deletePost } from \"../Actions/PostActions\";\nimport { reduxForm, reset } from \"redux-form\";\nimport _ from \"lodash\";\nimport { getUser, logout } from \"../Actions/UserActions\";\nimport Link from \"react-router-dom/es/Link\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport renderHTML from \"react-render-html\";\nimport compose from \"recompose/compose\";\nimport withWidth from \"@material-ui/core/withWidth\";\nimport \"../Layout/Navbar.css\";\nimport SignedInLinks from \"../Dashboard/SignedInLinks\";\nimport Navbar from \"../Layout/Navbar\";\nimport MenuBar from \"../Layout/MenuBar\";\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  title: {\n    left: 20,\n    fontSize: 20,\n    fontFamily: \" 'Josefin Sans', sans-serif;\"\n  },\n  col: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    marginLeft: 40,\n    overflow: \"hidden\",\n    flexDirection: \"row\",\n    md: \"auto\",\n    spacing: 0,\n    actionPosition: \"right\",\n    item: \"true\"\n  },\n  card: {\n    maxWidth: 600,\n    backgroundColor: \"#e0e0e0\",\n    marginTop: -10\n  },\n  media: {\n    verticalAlign: \"middle\",\n    height: 200,\n    top: 5\n  },\n  overlay: {\n    position: \"absolute\",\n    top: \"160px\",\n    color: \"black\",\n    backgroundColor: \"rgba(176, 181, 177, 0.45)\",\n    width: 600\n  },\n  container: {\n    display: \"flex\"\n  }\n});\nclass App extends Component {\n  componentWillMount() {\n    this.props.getPosts();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      nextProps.user.loading === false &&\n      nextProps.user.email === undefined\n    ) {\n      this.props.history.replace(\"/Login\");\n    }\n  }\n\n  renderPosts() {\n    const { classes } = this.props;\n    return _.map(this.props.posts, (post, key) => {\n      return (\n        <Link to={`/${key}`}>\n          <div className=\"tile\">\n            <CardMedia key={key}>\n              <span>{renderHTML(post.naslovna)}</span>\n\n              <div className=\"text\">\n                <h1>{post.title}</h1>\n\n                <p className=\"animate-text\">\n                  <span className=\"sazetak\">{renderHTML(post.sazetak)}</span>\n                </p>\n                <p className=\"animate-text\">\n                  <span className=\"signature\">\n                    Napisao : {renderHTML(post.signature)}\n                  </span>\n                </p>\n              </div>\n            </CardMedia>\n          </div>{\" \"}\n        </Link>\n      );\n    });\n  }\n\n  renderField(field) {\n    return (\n      <input\n        type=\"text\"\n        placeholder={`Enter a ${field.label}...`}\n        {...field.input}\n        className={field.class}\n      />\n    );\n  }\n  onSubmit(values) {\n    this.props.savePost(values).then(this.props.dispatch(reset(\"NewPost\")));\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar />\n        <MenuBar />\n        <div className=\"container\">\n          <div className=\"main\">{this.renderPosts()}</div>\n        </div>\n        <div className=\"side\">\n          <SignedInLinks />\n        </div>\n      </div>\n    );\n  }\n}\n\nlet form = reduxForm({\n  form: \"NewPost\"\n})(App);\n\nform = connect(\n  (state, ownProps) => ({\n    posts: state.posts,\n    user: state.user\n  }),\n  { savePost, getPosts, deletePost, getUser, logout }\n)(form);\nform.propTypes = {\n  classes: PropTypes.object.isRequired,\n  width: PropTypes.string.isRequired\n};\nexport default compose(\n  withStyles(styles),\n  withWidth()\n)(form);\n/*  <Card className={classes.card}>\n              <CardActionArea className={classes.actionarea}>\n                <CardMedia className={classes.media} height=\"100\" width=\"300\">\n                  <span>{renderHTML(post.naslovna)}</span>\n\n                  <CardContent className={classes.overlay}>\n                    {<span className={classes.title}>{post.title} </span>}\n                  </CardContent>\n                </CardMedia>\n              </CardActionArea>\n            </Card>\n            */\n\n/*\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getPosts, savePost, deletePost } from \"../Actions/PostActions\";\nimport { reduxForm, reset } from \"redux-form\";\nimport _ from \"lodash\";\nimport Link from \"react-router-dom/es/Link\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport renderHTML from \"react-render-html\";\nimport compose from \"recompose/compose\";\nimport withWidth from \"@material-ui/core/withWidth\";\nimport \"../Layout/Navbar.css\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  title: {\n    left: 20,\n    fontSize: 20,\n    fontFamily: \" 'Josefin Sans', sans-serif;\"\n  },\n  col: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    marginLeft: 40,\n    overflow: \"hidden\",\n    flexDirection: \"row\",\n    md: \"auto\",\n    spacing: 0,\n    actionPosition: \"right\",\n    item: \"true\"\n  },\n  card: {\n    maxWidth: 600\n  },\n  media: {\n    verticalAlign: \"middle\",\n    height: 200,\n    marginTop: 15\n  },\n  overlay: {\n    position: \"absolute\",\n    top: \"160px\",\n    color: \"black\",\n    backgroundColor: \"rgba(176, 181, 177, 0.45)\",\n    width: 600\n  },\n  container: {\n    display: \"flex\"\n  },\n  paper: {\n    padding: theme.spacing.unit * 2,\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n    flex: \"1 0 auto\",\n    margin: theme.spacing.unit\n  }\n});\nclass App extends Component {\n  componentWillMount() {\n    this.props.getPosts();\n  }\n  renderPosts() {\n    const { classes } = this.props;\n    return _.map(this.props.posts, (post, key) => {\n      return (\n        <div className=\"row\">\n          <div className={classes.col}>\n            <Link to={`/${key}`}>\n              <Card className={classes.card}>\n                <CardActionArea className={classes.actionarea}>\n                  <CardMedia className={classes.media} height=\"100\" width=\"300\">\n                    <span className=\"post-naslovna\">\n                      {renderHTML(post.naslovna)}\n                    </span>\n                    <CardContent className={classes.overlay}>\n                      {<span className={classes.title}>{post.title} </span>}\n                    </CardContent>\n                  </CardMedia>\n                </CardActionArea>\n              </Card>\n            </Link>\n          </div>\n        </div>\n      );\n    });\n  }\n\n  renderField(field) {\n    return (\n      <input\n        type=\"text\"\n        placeholder={`Enter a ${field.label}...`}\n        {...field.input}\n        className={field.class}\n      />\n    );\n  }\n  onSubmit(values) {\n    this.props.savePost(values).then(this.props.dispatch(reset(\"NewPost\")));\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <div className=\"navbar\">\n          <button\n            className=\"btn btn-danger\"\n            onClick={() => {\n              this.props.logout();\n            }}\n          >\n            Sign out\n          </button>\n        </div>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-10 right\">{this.renderPosts()}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nlet form = reduxForm({\n  form: \"NewPost\"\n})(App);\n\nform = connect(\n  (state, ownProps) => ({\n    posts: state.posts\n  }),\n  { savePost, getPosts, deletePost }\n)(form);\nform.propTypes = {\n  classes: PropTypes.object.isRequired,\n  width: PropTypes.string.isRequired\n};\nexport default compose(\n  withStyles(styles),\n  withWidth()\n)(form);\n\n/*   <button className=\"btn btn-danger float-right\" onClick={() => this.props.deletePost(key)}>Delete</button>*/\n/* <Link to= {`/${key}`}> </Link> */\n"]},"metadata":{},"sourceType":"module"}