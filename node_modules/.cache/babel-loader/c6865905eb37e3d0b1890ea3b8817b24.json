{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { database } from \"../Firebase\";\nexport var FETCH_POSTS = \"fetch_posts\";\nexport var POST_STATUS = \"post_status\";\nexport function getPosts() {\n  return function (dispatch) {\n    dispatch({\n      type: POST_STATUS,\n      payload: true\n    });\n    database.on(\"value\", function (snapshot) {\n      dispatch({\n        type: FETCH_POSTS,\n        payload: snapshot.val()\n      });\n      dispatch({\n        type: POST_STATUS,\n        payload: false\n      });\n    }, function () {\n      dispatch({\n        type: POST_STATUS,\n        payload: -1\n      });\n    });\n  };\n}\nexport function savePost(post, uid) {\n  return function (dispatch) {\n    return database.push(_objectSpread({}, post, {\n      uid: uid\n    }));\n  };\n}\nexport function deletePost(id) {\n  return function (dispatch) {\n    return database.child(id).remove();\n  };\n}\nexport function saveComment(comment, id, uid, commentUser) {\n  return function (dispatch) {\n    return database.child(id).child(\"comments\").push({\n      username: comment.username,\n      content: comment.content,\n      commentUser: commentUser,\n      uid: uid\n    });\n  };\n}\nexport function deleteComment(postId, commentId) {\n  return function (dispatch) {\n    return database.child(postId).child(\"comments\").child(commentId).remove();\n  };\n}","map":{"version":3,"sources":["C:\\Users\\kanto\\OneDrive\\Desktop\\blog\\src\\Actions\\PostActions.jsx"],"names":["database","FETCH_POSTS","POST_STATUS","getPosts","dispatch","type","payload","on","snapshot","val","savePost","post","uid","push","deletePost","id","child","remove","saveComment","comment","commentUser","username","content","deleteComment","postId","commentId"],"mappings":";AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,OAAO,IAAMC,WAAW,GAAG,aAApB;AACP,OAAO,IAAMC,WAAW,GAAG,aAApB;AAEP,OAAO,SAASC,QAAT,GAAoB;AACzB,SAAO,UAAAC,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEH,WADC;AAEPI,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAIAN,IAAAA,QAAQ,CAACO,EAAT,CACE,OADF,EAEE,UAAAC,QAAQ,EAAI;AACVJ,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEJ,WADC;AAEPK,QAAAA,OAAO,EAAEE,QAAQ,CAACC,GAAT;AAFF,OAAD,CAAR;AAIAL,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEH,WADC;AAEPI,QAAAA,OAAO,EAAE;AAFF,OAAD,CAAR;AAID,KAXH,EAYE,YAAM;AACJF,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEH,WADC;AAEPI,QAAAA,OAAO,EAAE,CAAC;AAFH,OAAD,CAAR;AAID,KAjBH;AAmBD,GAxBD;AAyBD;AAED,OAAO,SAASI,QAAT,CAAkBC,IAAlB,EAAwBC,GAAxB,EAA6B;AAClC,SAAO,UAAAR,QAAQ;AAAA,WAAIJ,QAAQ,CAACa,IAAT,mBAAmBF,IAAnB;AAAyBC,MAAAA,GAAG,EAAHA;AAAzB,OAAJ;AAAA,GAAf;AACD;AAED,OAAO,SAASE,UAAT,CAAoBC,EAApB,EAAwB;AAC7B,SAAO,UAAAX,QAAQ;AAAA,WAAIJ,QAAQ,CAACgB,KAAT,CAAeD,EAAf,EAAmBE,MAAnB,EAAJ;AAAA,GAAf;AACD;AAED,OAAO,SAASC,WAAT,CAAqBC,OAArB,EAA8BJ,EAA9B,EAAkCH,GAAlC,EAAuCQ,WAAvC,EAAoD;AACzD,SAAO,UAAAhB,QAAQ;AAAA,WACbJ,QAAQ,CACLgB,KADH,CACSD,EADT,EAEGC,KAFH,CAES,UAFT,EAGGH,IAHH,CAGQ;AACJQ,MAAAA,QAAQ,EAAEF,OAAO,CAACE,QADd;AAEJC,MAAAA,OAAO,EAAEH,OAAO,CAACG,OAFb;AAGJF,MAAAA,WAAW,EAAXA,WAHI;AAIJR,MAAAA,GAAG,EAAHA;AAJI,KAHR,CADa;AAAA,GAAf;AAUD;AACD,OAAO,SAASW,aAAT,CAAuBC,MAAvB,EAA+BC,SAA/B,EAA0C;AAC/C,SAAO,UAAArB,QAAQ;AAAA,WACbJ,QAAQ,CACLgB,KADH,CACSQ,MADT,EAEGR,KAFH,CAES,UAFT,EAGGA,KAHH,CAGSS,SAHT,EAIGR,MAJH,EADa;AAAA,GAAf;AAMD","sourcesContent":["import { database } from \"../Firebase\";\nexport const FETCH_POSTS = \"fetch_posts\";\nexport const POST_STATUS = \"post_status\";\n\nexport function getPosts() {\n  return dispatch => {\n    dispatch({\n      type: POST_STATUS,\n      payload: true\n    });\n    database.on(\n      \"value\",\n      snapshot => {\n        dispatch({\n          type: FETCH_POSTS,\n          payload: snapshot.val()\n        });\n        dispatch({\n          type: POST_STATUS,\n          payload: false\n        });\n      },\n      () => {\n        dispatch({\n          type: POST_STATUS,\n          payload: -1\n        });\n      }\n    );\n  };\n}\n\nexport function savePost(post, uid) {\n  return dispatch => database.push({ ...post, uid });\n}\n\nexport function deletePost(id) {\n  return dispatch => database.child(id).remove();\n}\n\nexport function saveComment(comment, id, uid, commentUser) {\n  return dispatch =>\n    database\n      .child(id)\n      .child(\"comments\")\n      .push({\n        username: comment.username,\n        content: comment.content,\n        commentUser,\n        uid\n      });\n}\nexport function deleteComment(postId, commentId) {\n  return dispatch =>\n    database\n      .child(postId)\n      .child(\"comments\")\n      .child(commentId)\n      .remove();\n}\n"]},"metadata":{},"sourceType":"module"}