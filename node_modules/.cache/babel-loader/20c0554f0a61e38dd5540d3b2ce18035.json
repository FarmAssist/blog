{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\src\\\\Container\\\\ListPosts.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getPosts, savePost, deletePost } from \"../Actions/PostActions\";\nimport { Field, reduxForm, reset } from \"redux-form\";\nimport _ from \"lodash\";\nimport PostCard from \"../Components/PostCard\";\nimport { getUser, logout } from \"../Actions/UserActions\";\nimport Link from \"react-router-dom/es/Link\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport renderHTML from \"react-render-html\";\nimport compose from \"recompose/compose\";\nimport withWidth from \"@material-ui/core/withWidth\";\nimport \"../Layout/Navbar.css\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n\n    /* componentWillMount() {\n      this.props.getPosts();\n      this.props.getUser();\n      if (\n        this.props.user.loading === false &&\n        this.props.user.email === undefined\n      ) {\n        this.props.history.replace(\"/Login\");\n      }\n    }\n     componentWillReceiveProps(nextProps) {\n      if (\n        nextProps.user.loading === false &&\n        nextProps.user.email === undefined\n      ) {\n        this.props.history.replace(\"/Login\");\n      }\n    }*/\n    value: function componentWillMount() {\n      this.props.getPosts();\n    }\n  }, {\n    key: \"renderPosts\",\n    value: function renderPosts() {\n      var _this = this;\n\n      var classes = this.props.classes;\n      return _.map(this.props.posts, function (post, key) {\n        return React.createElement(\"div\", {\n          className: classes.col,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/\".concat(key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(Card, {\n          className: classes.card,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(CardActionArea, {\n          className: classes.actionarea,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(CardMedia, {\n          className: classes.media,\n          height: \"100\",\n          width: \"300\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"post-naslovna\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, renderHTML(post.naslovna)), React.createElement(CardContent, {\n          className: classes.overlay,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: classes.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, post.title, \" \")))))), React.createElement(PostCard, {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          className: \"card-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, post.title), React.createElement(\"p\", {\n          className: \"card-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, post.body), React.createElement(\"button\", {\n          className: \"btn btn-danger float-right\",\n          onClick: function onClick() {\n            return _this.props.deletePost(key);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, \"Delete\")), \" \");\n      });\n    }\n  }, {\n    key: \"renderField\",\n    value: function renderField(field) {\n      return React.createElement(\"input\", Object.assign({\n        type: \"text\",\n        placeholder: \"Enter a \".concat(field.label, \"...\")\n      }, field.input, {\n        className: field.class,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(values) {\n      this.props.savePost(values).then(this.props.dispatch(reset(\"NewPost\")));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"navbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-danger\",\n        onClick: function onClick() {\n          _this2.props.logout();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Sign out\")), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, this.renderPosts())));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar form = reduxForm({\n  form: \"NewPost\"\n})(App);\nform = connect(function (state, ownProps) {\n  return {\n    posts: state.posts\n  };\n}, {\n  savePost: savePost,\n  getPosts: getPosts,\n  deletePost: deletePost\n})(form);\nexport default form;\n/*\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getPosts, savePost, deletePost } from \"../Actions/PostActions\";\nimport { reduxForm, reset } from \"redux-form\";\nimport _ from \"lodash\";\nimport Link from \"react-router-dom/es/Link\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport renderHTML from \"react-render-html\";\nimport compose from \"recompose/compose\";\nimport withWidth from \"@material-ui/core/withWidth\";\nimport \"../Layout/Navbar.css\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  title: {\n    left: 20,\n    fontSize: 20,\n    fontFamily: \" 'Josefin Sans', sans-serif;\"\n  },\n  col: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    marginLeft: 40,\n    overflow: \"hidden\",\n    flexDirection: \"row\",\n    md: \"auto\",\n    spacing: 0,\n    actionPosition: \"right\",\n    item: \"true\"\n  },\n  card: {\n    maxWidth: 600\n  },\n  media: {\n    verticalAlign: \"middle\",\n    height: 200,\n    marginTop: 15\n  },\n  overlay: {\n    position: \"absolute\",\n    top: \"160px\",\n    color: \"black\",\n    backgroundColor: \"rgba(176, 181, 177, 0.45)\",\n    width: 600\n  },\n  container: {\n    display: \"flex\"\n  },\n  paper: {\n    padding: theme.spacing.unit * 2,\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n    flex: \"1 0 auto\",\n    margin: theme.spacing.unit\n  }\n});\nclass App extends Component {\n  componentWillMount() {\n    this.props.getPosts();\n  }\n  renderPosts() {\n    const { classes } = this.props;\n    return _.map(this.props.posts, (post, key) => {\n      return (\n        <div className=\"row\">\n          <div className={classes.col}>\n            <Link to={`/${key}`}>\n              <Card className={classes.card}>\n                <CardActionArea className={classes.actionarea}>\n                  <CardMedia className={classes.media} height=\"100\" width=\"300\">\n                    <span className=\"post-naslovna\">\n                      {renderHTML(post.naslovna)}\n                    </span>\n                    <CardContent className={classes.overlay}>\n                      {<span className={classes.title}>{post.title} </span>}\n                    </CardContent>\n                  </CardMedia>\n                </CardActionArea>\n              </Card>\n            </Link>\n          </div>\n        </div>\n      );\n    });\n  }\n\n  renderField(field) {\n    return (\n      <input\n        type=\"text\"\n        placeholder={`Enter a ${field.label}...`}\n        {...field.input}\n        className={field.class}\n      />\n    );\n  }\n  onSubmit(values) {\n    this.props.savePost(values).then(this.props.dispatch(reset(\"NewPost\")));\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <div className=\"navbar\">\n          <button\n            className=\"btn btn-danger\"\n            onClick={() => {\n              this.props.logout();\n            }}\n          >\n            Sign out\n          </button>\n        </div>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-10 right\">{this.renderPosts()}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nlet form = reduxForm({\n  form: \"NewPost\"\n})(App);\n\nform = connect(\n  (state, ownProps) => ({\n    posts: state.posts\n  }),\n  { savePost, getPosts, deletePost }\n)(form);\nform.propTypes = {\n  classes: PropTypes.object.isRequired,\n  width: PropTypes.string.isRequired\n};\nexport default compose(\n  withStyles(styles),\n  withWidth()\n)(form);\n\n/*   <button className=\"btn btn-danger float-right\" onClick={() => this.props.deletePost(key)}>Delete</button>*/\n\n/* <Link to= {`/${key}`}> </Link> */","map":{"version":3,"sources":["C:\\Users\\kanto\\OneDrive\\Desktop\\blog\\src\\Container\\ListPosts.jsx"],"names":["React","Component","connect","getPosts","savePost","deletePost","Field","reduxForm","reset","_","PostCard","getUser","logout","Link","PropTypes","withStyles","Card","CardActionArea","CardContent","CardMedia","renderHTML","compose","withWidth","App","props","classes","map","posts","post","key","col","card","actionarea","media","naslovna","overlay","title","body","field","label","input","class","values","then","dispatch","renderPosts","form","state","ownProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getPosts, savePost, deletePost } from \"../Actions/PostActions\";\nimport { Field, reduxForm, reset } from \"redux-form\";\nimport _ from \"lodash\";\nimport PostCard from \"../Components/PostCard\";\nimport { getUser, logout } from \"../Actions/UserActions\";\nimport Link from \"react-router-dom/es/Link\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport renderHTML from \"react-render-html\";\nimport compose from \"recompose/compose\";\nimport withWidth from \"@material-ui/core/withWidth\";\nimport \"../Layout/Navbar.css\";\n\nclass App extends Component {\n  /* componentWillMount() {\n    this.props.getPosts();\n    this.props.getUser();\n    if (\n      this.props.user.loading === false &&\n      this.props.user.email === undefined\n    ) {\n      this.props.history.replace(\"/Login\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      nextProps.user.loading === false &&\n      nextProps.user.email === undefined\n    ) {\n      this.props.history.replace(\"/Login\");\n    }\n  }*/\n\n  componentWillMount() {\n    this.props.getPosts();\n  }\n\n  renderPosts() {\n    const { classes } = this.props;\n    return _.map(this.props.posts, (post, key) => {\n      return (\n        <div className={classes.col}>\n          <Link to={`/${key}`}>\n            <Card className={classes.card}>\n              <CardActionArea className={classes.actionarea}>\n                <CardMedia className={classes.media} height=\"100\" width=\"300\">\n                  <span className=\"post-naslovna\">\n                    {renderHTML(post.naslovna)}\n                  </span>\n                  <CardContent className={classes.overlay}>\n                    {<span className={classes.title}>{post.title} </span>}\n                  </CardContent>\n                </CardMedia>\n              </CardActionArea>\n            </Card>\n          </Link>\n          <PostCard key={key}>\n            <h3 className=\"card-title\">{post.title}</h3>\n            <p className=\"card-text\">{post.body}</p>\n            <button\n              className=\"btn btn-danger float-right\"\n              onClick={() => this.props.deletePost(key)}\n            >\n              Delete\n            </button>\n          </PostCard>{\" \"}\n        </div>\n      );\n    });\n  }\n\n  renderField(field) {\n    return (\n      <input\n        type=\"text\"\n        placeholder={`Enter a ${field.label}...`}\n        {...field.input}\n        className={field.class}\n      />\n    );\n  }\n  onSubmit(values) {\n    this.props.savePost(values).then(this.props.dispatch(reset(\"NewPost\")));\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"navbar\">\n          <button\n            className=\"btn btn-danger\"\n            onClick={() => {\n              this.props.logout();\n            }}\n          >\n            Sign out\n          </button>\n        </div>\n\n        <div className=\"container\">\n          <div className=\"main\">{this.renderPosts()}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nlet form = reduxForm({\n  form: \"NewPost\"\n})(App);\n\nform = connect(\n  (state, ownProps) => ({\n    posts: state.posts\n  }),\n  { savePost, getPosts, deletePost }\n)(form);\n\nexport default form;\n/*\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getPosts, savePost, deletePost } from \"../Actions/PostActions\";\nimport { reduxForm, reset } from \"redux-form\";\nimport _ from \"lodash\";\nimport Link from \"react-router-dom/es/Link\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport renderHTML from \"react-render-html\";\nimport compose from \"recompose/compose\";\nimport withWidth from \"@material-ui/core/withWidth\";\nimport \"../Layout/Navbar.css\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  title: {\n    left: 20,\n    fontSize: 20,\n    fontFamily: \" 'Josefin Sans', sans-serif;\"\n  },\n  col: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    marginLeft: 40,\n    overflow: \"hidden\",\n    flexDirection: \"row\",\n    md: \"auto\",\n    spacing: 0,\n    actionPosition: \"right\",\n    item: \"true\"\n  },\n  card: {\n    maxWidth: 600\n  },\n  media: {\n    verticalAlign: \"middle\",\n    height: 200,\n    marginTop: 15\n  },\n  overlay: {\n    position: \"absolute\",\n    top: \"160px\",\n    color: \"black\",\n    backgroundColor: \"rgba(176, 181, 177, 0.45)\",\n    width: 600\n  },\n  container: {\n    display: \"flex\"\n  },\n  paper: {\n    padding: theme.spacing.unit * 2,\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n    flex: \"1 0 auto\",\n    margin: theme.spacing.unit\n  }\n});\nclass App extends Component {\n  componentWillMount() {\n    this.props.getPosts();\n  }\n  renderPosts() {\n    const { classes } = this.props;\n    return _.map(this.props.posts, (post, key) => {\n      return (\n        <div className=\"row\">\n          <div className={classes.col}>\n            <Link to={`/${key}`}>\n              <Card className={classes.card}>\n                <CardActionArea className={classes.actionarea}>\n                  <CardMedia className={classes.media} height=\"100\" width=\"300\">\n                    <span className=\"post-naslovna\">\n                      {renderHTML(post.naslovna)}\n                    </span>\n                    <CardContent className={classes.overlay}>\n                      {<span className={classes.title}>{post.title} </span>}\n                    </CardContent>\n                  </CardMedia>\n                </CardActionArea>\n              </Card>\n            </Link>\n          </div>\n        </div>\n      );\n    });\n  }\n\n  renderField(field) {\n    return (\n      <input\n        type=\"text\"\n        placeholder={`Enter a ${field.label}...`}\n        {...field.input}\n        className={field.class}\n      />\n    );\n  }\n  onSubmit(values) {\n    this.props.savePost(values).then(this.props.dispatch(reset(\"NewPost\")));\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <div className=\"navbar\">\n          <button\n            className=\"btn btn-danger\"\n            onClick={() => {\n              this.props.logout();\n            }}\n          >\n            Sign out\n          </button>\n        </div>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-10 right\">{this.renderPosts()}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nlet form = reduxForm({\n  form: \"NewPost\"\n})(App);\n\nform = connect(\n  (state, ownProps) => ({\n    posts: state.posts\n  }),\n  { savePost, getPosts, deletePost }\n)(form);\nform.propTypes = {\n  classes: PropTypes.object.isRequired,\n  width: PropTypes.string.isRequired\n};\nexport default compose(\n  withStyles(styles),\n  withWidth()\n)(form);\n\n/*   <button className=\"btn btn-danger float-right\" onClick={() => this.props.deletePost(key)}>Delete</button>*/\n/* <Link to= {`/${key}`}> </Link> */\n"]},"metadata":{},"sourceType":"module"}