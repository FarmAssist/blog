{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\src\\\\Container\\\\ListPosts.jsx\";\n\n/*import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getPosts, savePost, deletePost } from \"../Actions/PostActions\";\nimport { Field, reduxForm, reset } from \"redux-form\";\nimport _ from \"lodash\";\nimport PostCard from \"../Components/PostCard\";\nimport { getUser, logout } from \"../Actions/UserActions\";\nimport { Link } from \"react-router-dom\";\nimport { required } from \"../Helpers/ReduxFormValidation\";\nimport Navbar from \"../Layout/Navbar\";\nimport SignedInLinks from \"../Dashboard/SignedInLinks\";\nimport Button from \"@material-ui/core/Button\";\nimport Modal from \"@material-ui/core/Modal\";\nimport CreateProject from \"./CreateProject\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport renderHTML from \"react-render-html\";\nimport compose from \"recompose/compose\";\nimport * as firebase from \"firebase\";\nimport withWidth from \"@material-ui/core/withWidth\";\nimport PropTypes from \"prop-types\";\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  title: {\n    left: 20,\n    fontSize: 20,\n    fontFamily: \" 'Josefin Sans', sans-serif;\"\n  },\n  col: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    marginLeft: 40,\n    overflow: \"hidden\",\n    flexDirection: \"row\",\n    md: \"auto\",\n    spacing: 0,\n    actionPosition: \"right\",\n    item: \"true\"\n  },\n  card: {\n    maxWidth: 600,\n    backgroundColor: \"#e0e0e0\",\n    marginTop: -10\n  },\n  media: {\n    verticalAlign: \"middle\",\n    height: 200,\n    top: 5\n  },\n  overlay: {\n    position: \"absolute\",\n    top: \"160px\",\n    color: \"black\",\n    backgroundColor: \"rgba(176, 181, 177, 0.45)\",\n    width: 600\n  },\n  container: {\n    display: \"flex\"\n  },\n  paper: {\n    position: \"relative\",\n    width: \"50%\",\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing.unit * 4,\n    outline: \"none\"\n  },\n  modalStyle1: {\n    overflow: \"scroll\",\n    height: \"100%\",\n    display: \"block\"\n  }\n});\nclass App extends Component {\n  /*renderPosts() {\n    console.log(this.props.user.uid);\n    console.log(this.props.user.email);\n\n    return _.map(this.props.posts, (post, key) => {\n      var newTime = post.time,\n        formatTime = new Date(newTime).toLocaleString();\n      return (\n        <Link to={`/${key}`}>\n          <div className=\"tile\">\n            <CardMedia>\n              <span>{renderHTML(post.naslovna)}</span>\n\n              <div className=\"text\">\n                <h1>{post.title}</h1>\n\n                <p className=\"animate-text\">\n                  <span className=\"sazetak\"> {post.sazetak}</span>\n                </p>\n                <p className=\"animate-text\">\n                  <span>Autor: {post.signature}</span> <br />\n                  <span>Kreirano: {formatTime}</span>\n                </p>\n              </div>\n            </CardMedia>\n          </div>{\" \"}\n        </Link>\n      );\n    });\n  }*/\n\n/*renderPosts() {\n    return _.map(this.props.posts, (post, key) => {\n      var newTime = post.time,\n        formatTime = new Date(newTime).toLocaleString();\n      return (\n        <div className=\"tile\">\n          {\" \"}\n          <CardMedia>\n            <Link to={`/${key}`}>\n              <div className=\"text\">\n                <h1>{post.title}</h1>{\" \"}\n                <p className=\"animate-text\">\n                  <span className=\"sazetak\"> {post.sazetak}</span>\n                </p>\n                <p className=\"animate-text\">\n                  <span>Autor: {post.signature}</span> <br />\n                  <span>Kreirano: {formatTime}</span>\n                </p>\n              </div>\n            </Link>\n            <p className=\"card-text\">{post.body}</p>\n            {post.uid === this.props.user.uid && (\n              <button\n                className=\"btn btn-danger float-right\"\n                onClick={() => this.props.deletePost(key)}\n              >\n                Delete\n              </button>\n            )}\n          </CardMedia>\n        </div>\n      );\n    });\n  }\n\n  renderField(field) {\n    const errStyle = {\n      borderColor: \"red\"\n    };\n    return (\n      <input\n        type=\"text\"\n        placeholder={`Enter a ${field.label}...`}\n        {...field.input}\n        className={field.class}\n        style={field.meta.touched && field.meta.error ? errStyle : null}\n      />\n    );\n  }\n\n  onSubmit(values) {\n    this.props\n      .savePost(values, this.props.user.uid)\n      .then(this.props.dispatch(reset(\"NewPost\")));\n  }\n\n  render() {\n    const { handleSubmit } = this.props;\n    return (\n      <div>\n        <div className=\"navbar\">\n          <button\n            className=\"btn btn-danger\"\n            onClick={() => {\n              this.props.logout();\n            }}\n          >\n            Sign out\n          </button>\n        </div>\n\n        <div className=\"container\">\n          <div className=\"main\">{this.renderPosts()}</div>\n          <div className=\"navbar fixed-bottom\">\n            <form\n              onSubmit={handleSubmit(this.onSubmit.bind(this))}\n              className=\"footerForm\"\n            >\n              <Field\n                name=\"title\"\n                component={this.renderField}\n                label=\"Title\"\n                class=\"footer-title\"\n                validate={required}\n              />\n              <Field\n                name=\"body\"\n                component={this.renderField}\n                label=\"Body\"\n                class=\"footer-body\"\n              />\n              <button type=\"submit\" className=\"btn footer-button\">\n                Post\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nlet form = reduxForm({\n  form: \"NewPost\"\n})(App);\n\nform = connect(\n  (state, ownProps) => ({\n    posts: state.posts,\n    user: state.user\n  }),\n  { savePost, getPosts, deletePost, getUser, logout }\n)(form);\n\nexport default form;*/\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getPosts, savePost, deletePost } from \"../Actions/PostActions\";\nimport { Field, reduxForm, reset } from \"redux-form\";\nimport _ from \"lodash\";\nimport { getUser, logout } from \"../Actions/UserActions\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { required } from \"../Helpers/ReduxFormValidation\";\nimport Navbar from \"../Layout/Navbar\";\nimport CreateProject from \"./CreateProject\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport renderHTML from \"react-render-html\";\nimport compose from \"recompose/compose\";\nimport * as firebase from \"firebase\";\nimport withWidth from \"@material-ui/core/withWidth\";\nimport PropTypes from \"prop-types\";\nimport QuizHome from \"../Quiz/QuizHome\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { database } from \"../Firebase\";\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    rootMenu: {\n      backgroundColor: \"grey\",\n      borderRadius: \"0\",\n      boxShadow: \"none\"\n    },\n    title: {\n      left: 20,\n      fontSize: 20,\n      fontFamily: \" 'Josefin Sans', sans-serif;\"\n    },\n    col: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      marginLeft: 40,\n      overflow: \"hidden\",\n      flexDirection: \"row\",\n      md: \"auto\",\n      spacing: 0,\n      actionPosition: \"right\",\n      item: \"true\"\n    },\n    card: {\n      maxWidth: 600,\n      backgroundColor: \"#e0e0e0\",\n      marginTop: -10\n    },\n    media: {\n      verticalAlign: \"middle\",\n      height: 200,\n      top: 5\n    },\n    overlay: {\n      position: \"absolute\",\n      top: \"160px\",\n      color: \"black\",\n      backgroundColor: \"rgba(176, 181, 177, 0.45)\",\n      width: 600\n    },\n    container: {\n      display: \"flex\"\n    },\n    paper: {\n      position: \"relative\",\n      width: \"50%\",\n      backgroundColor: \"white\",\n      borderRadius: \"0\"\n    },\n    modalStyle1: {\n      overflow: \"scroll\",\n      height: \"100%\",\n      display: \"block\"\n    },\n    customWidth: {\n      maxWidth: 500\n    }\n  };\n};\n\nvar longText = \" Najnoviji \\u010Dlanci :) \";\nvar longText2 = \"Nisi siguran koja vrsta fotoaparata je za tebe? Odigraj kviz! \";\nvar longText3 = \" Ima\\u0161 ideju za \\u010Dlanak? Voli\\u0161 recenzirati fotoaparate? Zna\\u0161 par trikova za fotkanje? Podijeli ih s nama! \";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      open: false,\n      current: 0,\n      message: localStorage.getItem(\"message\") || \"\"\n    };\n\n    _this.onChange = function (event) {\n      var message = event.target.value;\n      localStorage.getItem(\"message\", message);\n\n      _this.setState({\n        message: message\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"toggle\",\n    value: function toggle(index) {\n      this.setState({\n        current: index\n      });\n    }\n  }, {\n    key: \"getTime\",\n    value: function getTime() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, \"hello\");\n    }\n  }, {\n    key: \"renderUser\",\n    value: function renderUser() {\n      console.log(this.props.username);\n    }\n  }, {\n    key: \"renderPosts\",\n    value: function renderPosts() {\n      return _.map(this.props.posts, function (post, key) {\n        var newTime = post.time,\n            formatTime = new Date(newTime).toLocaleString();\n        return React.createElement(Link, {\n          to: \"/\".concat(key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 343\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"tile\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 344\n          },\n          __self: this\n        }, React.createElement(CardMedia, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 345\n          },\n          __self: this\n        }, renderHTML(post.naslovna), React.createElement(\"div\", {\n          className: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 347\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 348\n          },\n          __self: this\n        }, post.title), React.createElement(\"p\", {\n          className: \"animate-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 350\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"sazetak\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 351\n          },\n          __self: this\n        }, \" \", post.sazetak)), React.createElement(\"p\", {\n          className: \"animate-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 353\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 354\n          },\n          __self: this\n        }, \"Autor: \", post.signature), \" \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 354\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 355\n          },\n          __self: this\n        }, \"Kreirano: \", formatTime))))), \" \");\n      });\n    }\n  }, {\n    key: \"renderField\",\n    value: function renderField(field) {\n      var errStyle = {\n        borderColor: \"red\"\n      };\n      return React.createElement(\"input\", Object.assign({\n        type: \"text\",\n        placeholder: \"Enter a \".concat(field.label, \"...\")\n      }, field.input, {\n        className: field.class,\n        style: field.meta.touched && field.meta.error ? errStyle : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"adduserid\",\n    value: function adduserid() {\n      var user = firebase.auth().currentUser;\n      var userid = user.uid;\n      console.log(userid);\n    }\n  }, {\n    key: \"getUsername\",\n    value: function getUsername() {\n      var mail = this.props.user.email;\n      var username = mail.substring(0, mail.indexOf(\"@\"));\n      localStorage.setItem(\"username\", username);\n      return username;\n    }\n  }, {\n    key: \"searchDSLR\",\n    value: function searchDSLR() {\n      var returnArr = [];\n      database.orderByChild(\"category\").equalTo(\"DSLR\").on(\"child_added\", function (childSnapshot) {\n        var item = childSnapshot.val();\n        item.key = childSnapshot.key;\n        returnArr.push(item);\n        console.log(returnArr);\n      });\n      console.log(returnArr);\n      var newTime = post.time,\n          formatTime = new Date(newTime).toLocaleString();\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }, returnArr.map(function (arr) {\n        return React.createElement(Link, {\n          to: \"/\".concat(arr.key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 416\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"tile\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 417\n          },\n          __self: this\n        }, React.createElement(CardMedia, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 418\n          },\n          __self: this\n        }, renderHTML(arr.naslovna), React.createElement(\"div\", {\n          className: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 420\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 421\n          },\n          __self: this\n        }, arr.title), React.createElement(\"p\", {\n          className: \"animate-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 423\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"sazetak\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 424\n          },\n          __self: this\n        }, \" \", arr.sazetak)), React.createElement(\"p\", {\n          className: \"animate-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 426\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 427\n          },\n          __self: this\n        }, \"Autor: \", arr.signature), \" \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 427\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 428\n          },\n          __self: this\n        }, \"Kreirano: \", formatTime))))), \" \");\n      }), \" \");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443\n        },\n        __self: this\n      }), React.createElement(Paper, {\n        className: classes.rootMenu,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"dropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"dropbtn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446\n        },\n        __self: this\n      }, \"Tipovi fotoaparata\"), React.createElement(\"div\", {\n        className: \"dropdown-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: this.toggle.bind(this, 4),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      }, \" DSLR \")))), React.createElement(Paper, {\n        className: classes.rootMenu,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452\n        },\n        __self: this\n      }, React.createElement(Tabs, {\n        centered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: longText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454\n        },\n        __self: this\n      }, React.createElement(Tab, {\n        className: \"menu-bar\",\n        label: \"Po\\u010Detna\",\n        onClick: this.toggle.bind(this, 0),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      })), React.createElement(Tooltip, {\n        title: longText2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461\n        },\n        __self: this\n      }, React.createElement(Tab, {\n        className: \"menu-bar\",\n        label: \"Quiz\",\n        onClick: this.toggle.bind(this, 2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462\n        },\n        __self: this\n      })), React.createElement(Tooltip, {\n        title: longText3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468\n        },\n        __self: this\n      }, React.createElement(Tab, {\n        className: \"menu-bar\",\n        label: \"Kreiraj \\u010Dlanak\",\n        onClick: this.toggle.bind(this, 3),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"collapsible \".concat(this.state.current === 0 ? \"open \" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-10 right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482\n        },\n        __self: this\n      }, this.renderPosts().reverse()))), React.createElement(\"div\", {\n        className: \"collapsible \".concat(this.state.current === 2 ? \"open \" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486\n        },\n        __self: this\n      }, React.createElement(QuizHome, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"collapsible \".concat(this.state.current === 3 ? \"open \" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492\n        },\n        __self: this\n      }, React.createElement(CreateProject, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"collapsible \".concat(this.state.current === 4 ? \"open \" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497\n        },\n        __self: this\n      }, this.searchDSLR()));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar form = reduxForm({\n  form: \"NewPost\"\n})(App);\nform = connect(function (state, ownProps) {\n  return {\n    posts: state.posts,\n    user: state.user\n  };\n}, {\n  savePost: savePost,\n  getPosts: getPosts,\n  deletePost: deletePost,\n  getUser: getUser,\n  logout: logout\n})(form);\nform.propTypes = {\n  classes: PropTypes.object.isRequired,\n  width: PropTypes.string.isRequired\n};\nexport default compose(withStyles(styles), withWidth())(form);","map":{"version":3,"sources":["C:\\Users\\kanto\\OneDrive\\Desktop\\blog\\src\\Container\\ListPosts.jsx"],"names":["React","Component","connect","getPosts","savePost","deletePost","Field","reduxForm","reset","_","getUser","logout","NavLink","Link","required","Navbar","CreateProject","withStyles","CardMedia","renderHTML","compose","firebase","withWidth","PropTypes","QuizHome","Paper","Tabs","Tab","Tooltip","database","styles","theme","root","flexGrow","rootMenu","backgroundColor","borderRadius","boxShadow","title","left","fontSize","fontFamily","col","display","flexWrap","marginLeft","overflow","flexDirection","md","spacing","actionPosition","item","card","maxWidth","marginTop","media","verticalAlign","height","top","overlay","position","color","width","container","paper","modalStyle1","customWidth","longText","longText2","longText3","App","state","open","current","message","localStorage","getItem","onChange","event","target","value","setState","index","console","log","props","username","map","posts","post","key","newTime","time","formatTime","Date","toLocaleString","naslovna","sazetak","signature","field","errStyle","borderColor","label","input","class","meta","touched","error","user","auth","currentUser","userid","uid","mail","email","substring","indexOf","setItem","returnArr","orderByChild","equalTo","on","childSnapshot","val","push","arr","classes","toggle","bind","renderPosts","reverse","searchDSLR","form","ownProps","propTypes","object","isRequired","string"],"mappings":"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","sourcesContent":["/*import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getPosts, savePost, deletePost } from \"../Actions/PostActions\";\nimport { Field, reduxForm, reset } from \"redux-form\";\nimport _ from \"lodash\";\nimport PostCard from \"../Components/PostCard\";\nimport { getUser, logout } from \"../Actions/UserActions\";\nimport { Link } from \"react-router-dom\";\nimport { required } from \"../Helpers/ReduxFormValidation\";\nimport Navbar from \"../Layout/Navbar\";\nimport SignedInLinks from \"../Dashboard/SignedInLinks\";\nimport Button from \"@material-ui/core/Button\";\nimport Modal from \"@material-ui/core/Modal\";\nimport CreateProject from \"./CreateProject\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport renderHTML from \"react-render-html\";\nimport compose from \"recompose/compose\";\nimport * as firebase from \"firebase\";\nimport withWidth from \"@material-ui/core/withWidth\";\nimport PropTypes from \"prop-types\";\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  title: {\n    left: 20,\n    fontSize: 20,\n    fontFamily: \" 'Josefin Sans', sans-serif;\"\n  },\n  col: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    marginLeft: 40,\n    overflow: \"hidden\",\n    flexDirection: \"row\",\n    md: \"auto\",\n    spacing: 0,\n    actionPosition: \"right\",\n    item: \"true\"\n  },\n  card: {\n    maxWidth: 600,\n    backgroundColor: \"#e0e0e0\",\n    marginTop: -10\n  },\n  media: {\n    verticalAlign: \"middle\",\n    height: 200,\n    top: 5\n  },\n  overlay: {\n    position: \"absolute\",\n    top: \"160px\",\n    color: \"black\",\n    backgroundColor: \"rgba(176, 181, 177, 0.45)\",\n    width: 600\n  },\n  container: {\n    display: \"flex\"\n  },\n  paper: {\n    position: \"relative\",\n    width: \"50%\",\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing.unit * 4,\n    outline: \"none\"\n  },\n  modalStyle1: {\n    overflow: \"scroll\",\n    height: \"100%\",\n    display: \"block\"\n  }\n});\nclass App extends Component {\n  /*renderPosts() {\n    console.log(this.props.user.uid);\n    console.log(this.props.user.email);\n\n    return _.map(this.props.posts, (post, key) => {\n      var newTime = post.time,\n        formatTime = new Date(newTime).toLocaleString();\n      return (\n        <Link to={`/${key}`}>\n          <div className=\"tile\">\n            <CardMedia>\n              <span>{renderHTML(post.naslovna)}</span>\n\n              <div className=\"text\">\n                <h1>{post.title}</h1>\n\n                <p className=\"animate-text\">\n                  <span className=\"sazetak\"> {post.sazetak}</span>\n                </p>\n                <p className=\"animate-text\">\n                  <span>Autor: {post.signature}</span> <br />\n                  <span>Kreirano: {formatTime}</span>\n                </p>\n              </div>\n            </CardMedia>\n          </div>{\" \"}\n        </Link>\n      );\n    });\n  }*/\n/*renderPosts() {\n    return _.map(this.props.posts, (post, key) => {\n      var newTime = post.time,\n        formatTime = new Date(newTime).toLocaleString();\n      return (\n        <div className=\"tile\">\n          {\" \"}\n          <CardMedia>\n            <Link to={`/${key}`}>\n              <div className=\"text\">\n                <h1>{post.title}</h1>{\" \"}\n                <p className=\"animate-text\">\n                  <span className=\"sazetak\"> {post.sazetak}</span>\n                </p>\n                <p className=\"animate-text\">\n                  <span>Autor: {post.signature}</span> <br />\n                  <span>Kreirano: {formatTime}</span>\n                </p>\n              </div>\n            </Link>\n            <p className=\"card-text\">{post.body}</p>\n            {post.uid === this.props.user.uid && (\n              <button\n                className=\"btn btn-danger float-right\"\n                onClick={() => this.props.deletePost(key)}\n              >\n                Delete\n              </button>\n            )}\n          </CardMedia>\n        </div>\n      );\n    });\n  }\n\n  renderField(field) {\n    const errStyle = {\n      borderColor: \"red\"\n    };\n    return (\n      <input\n        type=\"text\"\n        placeholder={`Enter a ${field.label}...`}\n        {...field.input}\n        className={field.class}\n        style={field.meta.touched && field.meta.error ? errStyle : null}\n      />\n    );\n  }\n\n  onSubmit(values) {\n    this.props\n      .savePost(values, this.props.user.uid)\n      .then(this.props.dispatch(reset(\"NewPost\")));\n  }\n\n  render() {\n    const { handleSubmit } = this.props;\n    return (\n      <div>\n        <div className=\"navbar\">\n          <button\n            className=\"btn btn-danger\"\n            onClick={() => {\n              this.props.logout();\n            }}\n          >\n            Sign out\n          </button>\n        </div>\n\n        <div className=\"container\">\n          <div className=\"main\">{this.renderPosts()}</div>\n          <div className=\"navbar fixed-bottom\">\n            <form\n              onSubmit={handleSubmit(this.onSubmit.bind(this))}\n              className=\"footerForm\"\n            >\n              <Field\n                name=\"title\"\n                component={this.renderField}\n                label=\"Title\"\n                class=\"footer-title\"\n                validate={required}\n              />\n              <Field\n                name=\"body\"\n                component={this.renderField}\n                label=\"Body\"\n                class=\"footer-body\"\n              />\n              <button type=\"submit\" className=\"btn footer-button\">\n                Post\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nlet form = reduxForm({\n  form: \"NewPost\"\n})(App);\n\nform = connect(\n  (state, ownProps) => ({\n    posts: state.posts,\n    user: state.user\n  }),\n  { savePost, getPosts, deletePost, getUser, logout }\n)(form);\n\nexport default form;*/\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getPosts, savePost, deletePost } from \"../Actions/PostActions\";\nimport { Field, reduxForm, reset } from \"redux-form\";\nimport _ from \"lodash\";\nimport { getUser, logout } from \"../Actions/UserActions\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { required } from \"../Helpers/ReduxFormValidation\";\nimport Navbar from \"../Layout/Navbar\";\nimport CreateProject from \"./CreateProject\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport renderHTML from \"react-render-html\";\nimport compose from \"recompose/compose\";\nimport * as firebase from \"firebase\";\nimport withWidth from \"@material-ui/core/withWidth\";\nimport PropTypes from \"prop-types\";\nimport QuizHome from \"../Quiz/QuizHome\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { database } from \"../Firebase\";\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  rootMenu: {\n    backgroundColor: \"grey\",\n    borderRadius: \"0\",\n    boxShadow: \"none\"\n  },\n  title: {\n    left: 20,\n    fontSize: 20,\n    fontFamily: \" 'Josefin Sans', sans-serif;\"\n  },\n  col: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    marginLeft: 40,\n    overflow: \"hidden\",\n    flexDirection: \"row\",\n    md: \"auto\",\n    spacing: 0,\n    actionPosition: \"right\",\n    item: \"true\"\n  },\n  card: {\n    maxWidth: 600,\n    backgroundColor: \"#e0e0e0\",\n    marginTop: -10\n  },\n  media: {\n    verticalAlign: \"middle\",\n    height: 200,\n    top: 5\n  },\n  overlay: {\n    position: \"absolute\",\n    top: \"160px\",\n    color: \"black\",\n    backgroundColor: \"rgba(176, 181, 177, 0.45)\",\n    width: 600\n  },\n  container: {\n    display: \"flex\"\n  },\n  paper: {\n    position: \"relative\",\n    width: \"50%\",\n    backgroundColor: \"white\",\n    borderRadius: \"0\"\n  },\n  modalStyle1: {\n    overflow: \"scroll\",\n    height: \"100%\",\n    display: \"block\"\n  },\n  customWidth: {\n    maxWidth: 500\n  }\n});\n\nconst longText = ` Najnoviji članci :) `;\nconst longText2 = `Nisi siguran koja vrsta fotoaparata je za tebe? Odigraj kviz! `;\nconst longText3 = ` Imaš ideju za članak? Voliš recenzirati fotoaparate? Znaš par trikova za fotkanje? Podijeli ih s nama! `;\nclass App extends Component {\n  state = {\n    open: false,\n    current: 0,\n    message: localStorage.getItem(\"message\") || \"\"\n  };\n\n  toggle(index) {\n    this.setState({\n      current: index\n    });\n  }\n  getTime() {\n    return <div>hello</div>;\n  }\n  renderUser() {\n    console.log(this.props.username);\n  }\n  renderPosts() {\n    return _.map(this.props.posts, (post, key) => {\n      var newTime = post.time,\n        formatTime = new Date(newTime).toLocaleString();\n      return (\n        <Link to={`/${key}`}>\n          <div className=\"tile\">\n            <CardMedia>\n              {renderHTML(post.naslovna)}\n              <div className=\"text\">\n                <h1>{post.title}</h1>\n\n                <p className=\"animate-text\">\n                  <span className=\"sazetak\"> {post.sazetak}</span>\n                </p>\n                <p className=\"animate-text\">\n                  <span>Autor: {post.signature}</span> <br />\n                  <span>Kreirano: {formatTime}</span>\n                </p>\n              </div>\n            </CardMedia>\n          </div>{\" \"}\n        </Link>\n      );\n    });\n  }\n\n  renderField(field) {\n    const errStyle = {\n      borderColor: \"red\"\n    };\n    return (\n      <input\n        type=\"text\"\n        placeholder={`Enter a ${field.label}...`}\n        {...field.input}\n        className={field.class}\n        style={field.meta.touched && field.meta.error ? errStyle : null}\n      />\n    );\n  }\n\n  adduserid() {\n    var user = firebase.auth().currentUser;\n    var userid = user.uid;\n    console.log(userid);\n  }\n  getUsername() {\n    var mail = this.props.user.email;\n    var username = mail.substring(0, mail.indexOf(\"@\"));\n    localStorage.setItem(\"username\", username);\n\n    return username;\n  }\n  onChange = event => {\n    const message = event.target.value;\n\n    localStorage.getItem(\"message\", message);\n    this.setState({ message });\n  };\n  searchDSLR() {\n    var returnArr = [];\n    database\n      .orderByChild(\"category\")\n      .equalTo(\"DSLR\")\n      .on(\"child_added\", function(childSnapshot) {\n        var item = childSnapshot.val();\n        item.key = childSnapshot.key;\n        returnArr.push(item);\n\n        console.log(returnArr);\n      });\n    console.log(returnArr);\n    var newTime = post.time,\n      formatTime = new Date(newTime).toLocaleString();\n    return (\n      <div>\n        {returnArr.map(arr => (\n          <Link to={`/${arr.key}`}>\n            <div className=\"tile\">\n              <CardMedia>\n                {renderHTML(arr.naslovna)}\n                <div className=\"text\">\n                  <h1>{arr.title}</h1>\n\n                  <p className=\"animate-text\">\n                    <span className=\"sazetak\"> {arr.sazetak}</span>\n                  </p>\n                  <p className=\"animate-text\">\n                    <span>Autor: {arr.signature}</span> <br />\n                    <span>Kreirano: {formatTime}</span>\n                  </p>\n                </div>\n              </CardMedia>\n            </div>{\" \"}\n          </Link>\n        ))}{\" \"}\n      </div>\n    );\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <Navbar />\n        <Paper className={classes.rootMenu}>\n          <div className=\"dropdown\">\n            <button className=\"dropbtn\">Tipovi fotoaparata</button>\n            <div className=\"dropdown-content\">\n              <a onClick={this.toggle.bind(this, 4)}> DSLR </a>\n            </div>\n          </div>\n        </Paper>\n        <Paper className={classes.rootMenu}>\n          <Tabs centered>\n            <Tooltip title={longText}>\n              <Tab\n                className=\"menu-bar\"\n                label=\"Početna\"\n                onClick={this.toggle.bind(this, 0)}\n              />\n            </Tooltip>\n            <Tooltip title={longText2}>\n              <Tab\n                className=\"menu-bar\"\n                label=\"Quiz\"\n                onClick={this.toggle.bind(this, 2)}\n              />\n            </Tooltip>\n            <Tooltip title={longText3}>\n              <Tab\n                className=\"menu-bar\"\n                label=\"Kreiraj članak\"\n                onClick={this.toggle.bind(this, 3)}\n              />\n            </Tooltip>\n          </Tabs>\n        </Paper>\n\n        <div\n          className={`collapsible ${this.state.current === 0 ? \"open \" : \"\"}`}\n        >\n          <div className=\"row\">\n            <div className=\"col-10 right\">{this.renderPosts().reverse()}</div>\n          </div>\n        </div>\n\n        <div\n          className={`collapsible ${this.state.current === 2 ? \"open \" : \"\"}`}\n        >\n          <QuizHome />\n        </div>\n\n        <div\n          className={`collapsible ${this.state.current === 3 ? \"open \" : \"\"}`}\n        >\n          <CreateProject />\n        </div>\n        <div\n          className={`collapsible ${this.state.current === 4 ? \"open \" : \"\"}`}\n        >\n          {this.searchDSLR()}\n        </div>\n      </div>\n    );\n  }\n}\n\nlet form = reduxForm({\n  form: \"NewPost\"\n})(App);\n\nform = connect(\n  (state, ownProps) => ({\n    posts: state.posts,\n    user: state.user\n  }),\n  { savePost, getPosts, deletePost, getUser, logout }\n)(form);\nform.propTypes = {\n  classes: PropTypes.object.isRequired,\n  width: PropTypes.string.isRequired\n};\nexport default compose(\n  withStyles(styles),\n  withWidth()\n)(form);\n"]},"metadata":{},"sourceType":"module"}