{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\src\\\\Container\\\\Home.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getPosts, savePost, deletePost } from \"../Actions/PostActions\";\nimport { reduxForm, reset } from \"redux-form\";\nimport _ from \"lodash\";\nimport Link from \"react-router-dom/es/Link\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport renderHTML from \"react-render-html\";\nimport compose from \"recompose/compose\";\nimport withWidth from \"@material-ui/core/withWidth\";\nimport \"../Layout/Navbar.css\";\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    title: {\n      left: 20,\n      fontSize: 20,\n      fontFamily: \" 'Josefin Sans', sans-serif;\"\n    },\n    col: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      marginLeft: 40,\n      overflow: \"hidden\",\n      flexDirection: \"row\",\n      md: \"auto\",\n      spacing: 0,\n      actionPosition: \"right\",\n      item: \"true\"\n    },\n    card: {\n      maxWidth: 600\n    },\n    media: {\n      verticalAlign: \"middle\",\n      height: 200,\n      marginTop: 15\n    },\n    overlay: {\n      position: \"absolute\",\n      top: \"160px\",\n      color: \"black\",\n      backgroundColor: \"rgba(176, 181, 177, 0.45)\",\n      width: 600\n    },\n    container: {\n      display: \"flex\"\n    },\n    paper: {\n      padding: theme.spacing.unit * 2,\n      textAlign: \"center\",\n      color: theme.palette.text.secondary,\n      flex: \"1 0 auto\",\n      margin: theme.spacing.unit\n    }\n  };\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.getPosts();\n    }\n  }, {\n    key: \"renderPosts\",\n    value: function renderPosts() {\n      var classes = this.props.classes;\n      return _.map(this.props.posts, function (post, key) {\n        return React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: classes.col,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/\".concat(key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(Card, {\n          className: classes.card,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(CardActionArea, {\n          className: classes.actionarea,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(CardMedia, {\n          className: classes.media,\n          height: \"100\",\n          width: \"300\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"post-naslovna\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, renderHTML(post.naslovna)), React.createElement(CardContent, {\n          className: classes.overlay,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: classes.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, post.title, \" \"))))))));\n      });\n    }\n  }, {\n    key: \"renderField\",\n    value: function renderField(field) {\n      return React.createElement(\"input\", Object.assign({\n        type: \"text\",\n        placeholder: \"Enter a \".concat(field.label, \"...\")\n      }, field.input, {\n        className: field.class,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(values) {\n      this.props.savePost(values).then(this.props.dispatch(reset(\"NewPost\")));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-10 right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, this.renderPosts()))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar form = reduxForm({\n  form: \"NewPost\"\n})(App);\nform = connect(function (state, ownProps) {\n  return {\n    posts: state.posts\n  };\n}, {\n  savePost: savePost,\n  getPosts: getPosts,\n  deletePost: deletePost\n})(form);\nform.propTypes = {\n  classes: PropTypes.object.isRequired,\n  width: PropTypes.string.isRequired\n};\nexport default compose(withStyles(styles), withWidth())(form);","map":{"version":3,"sources":["C:\\Users\\kanto\\OneDrive\\Desktop\\blog\\src\\Container\\Home.jsx"],"names":["React","Component","connect","getPosts","savePost","deletePost","reduxForm","reset","_","Link","PropTypes","withStyles","Card","CardActionArea","CardContent","CardMedia","renderHTML","compose","withWidth","styles","theme","root","flexGrow","title","left","fontSize","fontFamily","col","display","flexWrap","marginLeft","overflow","flexDirection","md","spacing","actionPosition","item","card","maxWidth","media","verticalAlign","height","marginTop","overlay","position","top","color","backgroundColor","width","container","paper","padding","unit","textAlign","palette","text","secondary","flex","margin","App","props","classes","map","posts","post","key","actionarea","naslovna","field","label","input","class","values","then","dispatch","renderPosts","form","state","ownProps","propTypes","object","isRequired","string"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getPosts, savePost, deletePost } from \"../Actions/PostActions\";\r\nimport { reduxForm, reset } from \"redux-form\";\r\nimport _ from \"lodash\";\r\nimport Link from \"react-router-dom/es/Link\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport renderHTML from \"react-render-html\";\r\nimport compose from \"recompose/compose\";\r\nimport withWidth from \"@material-ui/core/withWidth\";\r\nimport \"../Layout/Navbar.css\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  title: {\r\n    left: 20,\r\n    fontSize: 20,\r\n    fontFamily: \" 'Josefin Sans', sans-serif;\"\r\n  },\r\n  col: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    marginLeft: 40,\r\n    overflow: \"hidden\",\r\n    flexDirection: \"row\",\r\n    md: \"auto\",\r\n    spacing: 0,\r\n    actionPosition: \"right\",\r\n    item: \"true\"\r\n  },\r\n  card: {\r\n    maxWidth: 600\r\n  },\r\n  media: {\r\n    verticalAlign: \"middle\",\r\n    height: 200,\r\n    marginTop: 15\r\n  },\r\n  overlay: {\r\n    position: \"absolute\",\r\n    top: \"160px\",\r\n    color: \"black\",\r\n    backgroundColor: \"rgba(176, 181, 177, 0.45)\",\r\n    width: 600\r\n  },\r\n  container: {\r\n    display: \"flex\"\r\n  },\r\n  paper: {\r\n    padding: theme.spacing.unit * 2,\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n    flex: \"1 0 auto\",\r\n    margin: theme.spacing.unit\r\n  }\r\n});\r\nclass App extends Component {\r\n  componentWillMount() {\r\n    this.props.getPosts();\r\n  }\r\n  renderPosts() {\r\n    const { classes } = this.props;\r\n    return _.map(this.props.posts, (post, key) => {\r\n      return (\r\n        <div className=\"row\">\r\n          <div className={classes.col}>\r\n            <Link to={`/${key}`}>\r\n              <Card className={classes.card}>\r\n                <CardActionArea className={classes.actionarea}>\r\n                  <CardMedia className={classes.media} height=\"100\" width=\"300\">\r\n                    <span className=\"post-naslovna\">\r\n                      {renderHTML(post.naslovna)}\r\n                    </span>\r\n                    <CardContent className={classes.overlay}>\r\n                      {<span className={classes.title}>{post.title} </span>}\r\n                    </CardContent>\r\n                  </CardMedia>\r\n                </CardActionArea>\r\n              </Card>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  renderField(field) {\r\n    return (\r\n      <input\r\n        type=\"text\"\r\n        placeholder={`Enter a ${field.label}...`}\r\n        {...field.input}\r\n        className={field.class}\r\n      />\r\n    );\r\n  }\r\n  onSubmit(values) {\r\n    this.props.savePost(values).then(this.props.dispatch(reset(\"NewPost\")));\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.root}>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-10 right\">{this.renderPosts()}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nlet form = reduxForm({\r\n  form: \"NewPost\"\r\n})(App);\r\n\r\nform = connect(\r\n  (state, ownProps) => ({\r\n    posts: state.posts\r\n  }),\r\n  { savePost, getPosts, deletePost }\r\n)(form);\r\nform.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  width: PropTypes.string.isRequired\r\n};\r\nexport default compose(\r\n  withStyles(styles),\r\n  withWidth()\r\n)(form);\r\n"]},"metadata":{},"sourceType":"module"}