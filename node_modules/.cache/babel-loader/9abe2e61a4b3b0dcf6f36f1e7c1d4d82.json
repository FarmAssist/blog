{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\src\\\\Container\\\\CreateProject.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PostCard from \"../Components/PostCard\";\nimport Link from \"react-router-dom/es/Link\";\nimport { deletePost, deleteComment } from \"../Actions/PostActions\";\nimport AddComment from \"./AddComment\";\nimport Comment from \"../Components/Comment\";\nimport _ from \"lodash\";\n\nvar CreateProject =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateProject, _Component);\n\n  function CreateProject() {\n    _classCallCheck(this, CreateProject);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CreateProject).apply(this, arguments));\n  }\n\n  _createClass(CreateProject, [{\n    key: \"renderField\",\n    value: function renderField(field) {\n      var errStyle = {\n        borderColor: \"red\"\n      };\n      return React.createElement(\"input\", Object.assign({\n        type: \"text\",\n        placeholder: \"Enter a \".concat(field.label, \"...\")\n      }, field.input, {\n        className: field.class,\n        style: field.meta.touched && field.meta.error ? errStyle : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(values) {\n      this.props.savePost(values, this.props.user.uid).then(this.props.dispatch(reset(\"NewPost\")));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var handleSubmit = this.props.handleSubmit;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: handleSubmit(this.onSubmit.bind(this)),\n        className: \"footerForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"title\",\n        component: this.renderField,\n        label: \"Title\",\n        class: \"footer-title\",\n        validate: required,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"body\",\n        component: this.renderField,\n        label: \"Body\",\n        class: \"footer-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn footer-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Post\")));\n    }\n  }]);\n\n  return CreateProject;\n}(Component);\n\nvar form = reduxForm({\n  form: \"NewPost\"\n})(CreateProject);\nform = connect(function (state, ownProps) {\n  return {\n    posts: state.posts,\n    user: state.user\n  };\n}, {\n  savePost: savePost,\n  getPosts: getPosts,\n  deletePost: deletePost,\n  getUser: getUser,\n  logout: logout\n})(form);\nexport default form;\n/*import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getPosts, savePost, deletePost } from \"../Actions/PostActions\";\nimport { getUser, logout } from \"../Actions/UserActions\";\nimport { database } from \"../Firebase\";\nimport PostCard from \"../Components/PostCard\";\nimport ReactQuill from \"react-quill\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport \"../Layout/Navbar.css\";\nimport TextField from \"@material-ui/core/TextField\";\nimport compose from \"recompose/compose\";\nimport Navbar from \"../Layout/Navbar\";\nimport MenuBar from \"../Layout/MenuBar\";\nconst styles = theme => ({\n  container: {\n    paddingTop: 50,\n    marginLeft: 5,\n    paddingLeft: 20\n  },\n  root: {\n    marginLeft: 5\n  },\n  head: {\n    fontSize: 30,\n    fontFamily: \"sans-serif\",\n    textAlign: \"center\",\n    textTransform: \"uppercase\",\n    letterSpacing: 0.5,\n    position: \"absolute\",\n    color: \"rgb(115, 70, 124)\",\n    fontWeight: 900,\n    marginLeft: 50,\n    whiteSpace: \"nowrap\",\n    marginTop: 10\n  },\n  link: {\n    textDecoration: \"none\"\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    marginTop: theme.spacing.unit,\n    paddingBottom: 20\n  },\n\n  cssLabel: {\n    \"&$cssFocused\": {\n      color: \"black\",\n      fontSize: 20\n    }\n  },\n  cssFocused: {},\n  cssUnderline: {\n    \"&:after\": {\n      borderBottomColor: \"black\"\n    }\n  },\n  cssOutlinedInput: {\n    \"&$cssFocused $notchedOutline\": {\n      borderColor: \"black\"\n    }\n  },\n  notchedOutline: {},\n  bootstrapRoot: {\n    \"label + &\": {\n      marginTop: theme.spacing.unit * 3\n    }\n  },\n  bootstrapInput: {\n    borderRadius: 6,\n    backgroundColor: \"black\",\n    border: \"1px solid black\",\n    fontSize: 16,\n    width: \"600px\",\n    padding: \"10px 12px\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"'\n    ].join(\",\"),\n    \"&:focus\": {\n      borderRadius: 6,\n      borderColor: \"black\",\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\"\n    }\n  },\n  bootstrapFormLabel: {\n    fontSize: 20\n  },\n  dense: {\n    marginTop: 25\n  },\n  input: {\n    marginLeft: 5,\n    fontSize: 20\n  },\n  buttonPost: {\n    margin: theme.spacing.unit,\n    fontFamily: \"sans-serif\",\n    textAlign: \"center\",\n    textTransform: \"uppercase\",\n    letterSpacing: 0.5,\n    borderColor: \"rgb(115, 70, 124)\",\n    color: \"#EEEEEE\",\n    backgroundColor: \"rgb(115, 70, 124)\",\n    fontSize: 20,\n    width: 120,\n    height: 50,\n    marginLeft: 5\n  },\n  file: {\n    margin: theme.spacing.unit,\n    fontFamily: \"sans-serif\",\n    textAlign: \"center\",\n    textTransform: \"uppercase\",\n    letterSpacing: 0.5,\n    borderColor: \"#D76000\",\n    color: \"#EEEEEE\",\n    backgroundColor: \"#D76000\",\n    fontSize: 12,\n    width: 200,\n    height: 50,\n    marginBottom: 10\n  }\n});\n\nclass CreateProject extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      quill: \"\",\n      naslovna: \"\",\n      sazetak: \"\",\n      signature: \"\",\n      loading: false,\n      posts: {}\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeNaslovna = this.handleChangeNaslovna.bind(this);\n    this.handleChangeSazetak = this.handleChangeSazetak.bind(this);\n    this.onHandleSubmit = this.onHandleSubmit.bind(this);\n  }\n  componentWillMount() {\n    this.props.getPosts();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      nextProps.user.loading === false &&\n      nextProps.user.email === undefined\n    ) {\n      this.props.history.replace(\"/Login\");\n    }\n  }\n  componentDidMount() {\n    database.on(\"value\", snapshot => {\n      this.setState({\n        posts: snapshot.val(),\n        loading: false\n      });\n    });\n  }\n  handleChange(values) {\n    console.log(this.state);\n    this.setState({ quill: values });\n  }\n  handleChangeNaslovna(values) {\n    console.log(this.state);\n    this.setState({ naslovna: values });\n  }\n  handleChangeSazetak(values) {\n    console.log(this.state);\n    this.setState({ sazetak: values });\n  }\n  onHandleSubmit(values) {\n    console.log(this.state);\n    values.preventDefault();\n    const posts = {\n      title: this.state.title,\n      signature: this.state.signature,\n      naslovna: this.state.naslovna,\n      sazetak: this.state.sazetak,\n      quill: this.state.quill\n    };\n    database.push(posts);\n    this.setState({\n      title: \"\",\n      naslovna: \"\",\n      sazetak: \"\",\n      quill: \"\",\n      signature: \"\"\n    });\n    this.props.history.push(\"/\");\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        {\" \"}\n        <Navbar />\n        <MenuBar />\n        <div>\n          <h4 className={classes.head}>Novi post</h4>\n\n          <PostCard>\n            <form onSubmit={this.onHandleSubmit} className={classes.container}>\n              <TextField\n                id=\"outlined-full-width\"\n                helperText=\"Tvojeg ful kul posta\"\n                fullWidth\n                margin=\"normal\"\n                InputLabelProps={{\n                  shrink: true\n                }}\n                fullWidth\n                name=\"title\"\n                label=\"Upiši naslov\"\n                value={this.state.title}\n                onChange={values => {\n                  this.setState({ title: values.target.value });\n                }}\n                variant=\"outlined\"\n                InputLabelProps={{\n                  classes: {\n                    root: classes.cssLabel,\n                    focused: classes.cssFocused\n                  }\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.cssOutlinedInput,\n                    focused: classes.cssFocused,\n                    notchedOutline: classes.notchedOutline,\n                    input: classes.input\n                  }\n                }}\n              />{\" \"}\n              <br />\n              <div>\n                {\" \"}\n                <ReactQuill\n                  name=\"quill\"\n                  placeholder=\"Učitaj sliku za naslovnu\"\n                  value={this.state.naslovna}\n                  modules={CreateProject.modulesNaslovna}\n                  formats={CreateProject.formatsNaslovna}\n                  onChange={this.handleChangeNaslovna}\n                  className={classes.input}\n                />{\" \"}\n              </div>\n              <br />\n              <ReactQuill\n                name=\"quill\"\n                placeholder=\"Ukratko opišite o čemu Vaš post govori\"\n                value={this.state.sazetak}\n                modules={CreateProject.modules}\n                formats={CreateProject.formats}\n                onChange={this.handleChangeSazetak}\n                className={classes.input}\n              />{\" \"}\n              <br />\n              <ReactQuill\n                name=\"quill\"\n                placeholder=\"Piši....briši(koristite slike manjeg formata)\"\n                value={this.state.quill}\n                modules={CreateProject.modules}\n                formats={CreateProject.formats}\n                onChange={this.handleChange}\n                className={classes.input}\n              />{\" \"}\n              <br />\n              <TextField\n                id=\"outlined-full-width\"\n                label=\"Kreirao\"\n                placeholder=\"..\"\n                helperText=\"Ako nisi ti možda je tvoj mačak, pas, možda baka...\"\n                fullWidth\n                margin=\"normal\"\n                name=\"signature\"\n                InputLabelProps={{\n                  shrink: true\n                }}\n                value={this.state.signature}\n                onChange={values => {\n                  this.setState({ signature: values.target.value });\n                }}\n                variant=\"outlined\"\n                InputLabelProps={{\n                  classes: {\n                    root: classes.cssLabel,\n                    focused: classes.cssFocused\n                  }\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.cssOutlinedInput,\n                    focused: classes.cssFocused,\n                    notchedOutline: classes.notchedOutline,\n                    input: classes.input\n                  }\n                }}\n              />\n              <button type=\"submit\" className={classes.buttonPost}>\n                Kreiraj\n              </button>\n            </form>\n          </PostCard>\n        </div>\n      </div>\n    );\n  }\n}\nCreateProject.modules = {\n  toolbar: [\n    [{ header: \"1\" }, { header: \"2\" }],\n    [{ size: [] }],\n    [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\n    [\n      { list: \"ordered\" },\n      { list: \"bullet\" },\n      { indent: \"-1\" },\n      { indent: \"+1\" }\n    ],\n    [\"link\", \"image\", \"video\"],\n    [\"clean\"]\n  ],\n  clipboard: {\n    // toggle to add extra line breaks when pasting HTML:\n    matchVisual: false\n  }\n};\n\nCreateProject.formats = [\n  \"header\",\n  \"font\",\n  \"size\",\n  \"bold\",\n  \"italic\",\n  \"underline\",\n  \"strike\",\n  \"blockquote\",\n  \"list\",\n  \"bullet\",\n  \"indent\",\n  \"link\",\n  \"image\",\n  \"video\"\n];\nCreateProject.modulesNaslovna = {\n  toolbar: [[\"image\"]],\n  clipboard: {\n    // toggle to add extra line breaks when pasting HTML:\n    matchVisual: false\n  }\n};\n\nCreateProject.formatsNaslovna = [\"image\"];\n\nCreateProject.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nCreateProject = connect(\n  (state, ownProps) => ({\n    posts: state.posts,\n    user: state.user\n  }),\n  { savePost, getPosts, deletePost, getUser, logout }\n)(CreateProject);\nCreateProject.propTypes = {\n  classes: PropTypes.object.isRequired,\n  width: PropTypes.string.isRequired\n};\nexport default compose(withStyles(styles))(CreateProject);\n*/","map":{"version":3,"sources":["C:\\Users\\kanto\\OneDrive\\Desktop\\blog\\src\\Container\\CreateProject.jsx"],"names":["React","Component","connect","PostCard","Link","deletePost","deleteComment","AddComment","Comment","_","CreateProject","field","errStyle","borderColor","label","input","class","meta","touched","error","values","props","savePost","user","uid","then","dispatch","reset","handleSubmit","onSubmit","bind","renderField","required","form","reduxForm","state","ownProps","posts","getPosts","getUser","logout"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,wBAA1C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,CAAP,MAAc,QAAd;;IAEMC,a;;;;;;;;;;;;;gCACQC,K,EAAO;AACjB,UAAMC,QAAQ,GAAG;AACfC,QAAAA,WAAW,EAAE;AADE,OAAjB;AAGA,aACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,oBAAaF,KAAK,CAACG,KAAnB;AAFb,SAGMH,KAAK,CAACI,KAHZ;AAIE,QAAA,SAAS,EAAEJ,KAAK,CAACK,KAJnB;AAKE,QAAA,KAAK,EAAEL,KAAK,CAACM,IAAN,CAAWC,OAAX,IAAsBP,KAAK,CAACM,IAAN,CAAWE,KAAjC,GAAyCP,QAAzC,GAAoD,IAL7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AASD;;;6BAEQQ,M,EAAQ;AACf,WAAKC,KAAL,CACGC,QADH,CACYF,MADZ,EACoB,KAAKC,KAAL,CAAWE,IAAX,CAAgBC,GADpC,EAEGC,IAFH,CAEQ,KAAKJ,KAAL,CAAWK,QAAX,CAAoBC,KAAK,CAAC,SAAD,CAAzB,CAFR;AAGD;;;6BAEQ;AAAA,UACCC,YADD,GACkB,KAAKP,KADvB,CACCO,YADD;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,QAAQ,EAAEA,YAAY,CAAC,KAAKC,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAD,CADxB;AAEE,QAAA,SAAS,EAAC,YAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,SAAS,EAAE,KAAKC,WAFlB;AAGE,QAAA,KAAK,EAAC,OAHR;AAIE,QAAA,KAAK,EAAC,cAJR;AAKE,QAAA,QAAQ,EAAEC,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAWE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAE,KAAKD,WAFlB;AAGE,QAAA,KAAK,EAAC,MAHR;AAIE,QAAA,KAAK,EAAC,aAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,EAiBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBF,CADF,CADF;AAyBD;;;;EAjDyB9B,S;;AAmD5B,IAAIgC,IAAI,GAAGC,SAAS,CAAC;AACnBD,EAAAA,IAAI,EAAE;AADa,CAAD,CAAT,CAERvB,aAFQ,CAAX;AAIAuB,IAAI,GAAG/B,OAAO,CACZ,UAACiC,KAAD,EAAQC,QAAR;AAAA,SAAsB;AACpBC,IAAAA,KAAK,EAAEF,KAAK,CAACE,KADO;AAEpBd,IAAAA,IAAI,EAAEY,KAAK,CAACZ;AAFQ,GAAtB;AAAA,CADY,EAKZ;AAAED,EAAAA,QAAQ,EAARA,QAAF;AAAYgB,EAAAA,QAAQ,EAARA,QAAZ;AAAsBjC,EAAAA,UAAU,EAAVA,UAAtB;AAAkCkC,EAAAA,OAAO,EAAPA,OAAlC;AAA2CC,EAAAA,MAAM,EAANA;AAA3C,CALY,CAAP,CAMLP,IANK,CAAP;AAQA,eAAeA,IAAf;AAEA","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PostCard from \"../Components/PostCard\";\nimport Link from \"react-router-dom/es/Link\";\nimport { deletePost, deleteComment } from \"../Actions/PostActions\";\nimport AddComment from \"./AddComment\";\nimport Comment from \"../Components/Comment\";\nimport _ from \"lodash\";\n\nclass CreateProject extends Component {\n  renderField(field) {\n    const errStyle = {\n      borderColor: \"red\"\n    };\n    return (\n      <input\n        type=\"text\"\n        placeholder={`Enter a ${field.label}...`}\n        {...field.input}\n        className={field.class}\n        style={field.meta.touched && field.meta.error ? errStyle : null}\n      />\n    );\n  }\n\n  onSubmit(values) {\n    this.props\n      .savePost(values, this.props.user.uid)\n      .then(this.props.dispatch(reset(\"NewPost\")));\n  }\n\n  render() {\n    const { handleSubmit } = this.props;\n    return (\n      <div>\n        <form\n          onSubmit={handleSubmit(this.onSubmit.bind(this))}\n          className=\"footerForm\"\n        >\n          <Field\n            name=\"title\"\n            component={this.renderField}\n            label=\"Title\"\n            class=\"footer-title\"\n            validate={required}\n          />\n          <Field\n            name=\"body\"\n            component={this.renderField}\n            label=\"Body\"\n            class=\"footer-body\"\n          />\n          <button type=\"submit\" className=\"btn footer-button\">\n            Post\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\nlet form = reduxForm({\n  form: \"NewPost\"\n})(CreateProject);\n\nform = connect(\n  (state, ownProps) => ({\n    posts: state.posts,\n    user: state.user\n  }),\n  { savePost, getPosts, deletePost, getUser, logout }\n)(form);\n\nexport default form;\n\n/*import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getPosts, savePost, deletePost } from \"../Actions/PostActions\";\nimport { getUser, logout } from \"../Actions/UserActions\";\nimport { database } from \"../Firebase\";\nimport PostCard from \"../Components/PostCard\";\nimport ReactQuill from \"react-quill\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport \"../Layout/Navbar.css\";\nimport TextField from \"@material-ui/core/TextField\";\nimport compose from \"recompose/compose\";\nimport Navbar from \"../Layout/Navbar\";\nimport MenuBar from \"../Layout/MenuBar\";\nconst styles = theme => ({\n  container: {\n    paddingTop: 50,\n    marginLeft: 5,\n    paddingLeft: 20\n  },\n  root: {\n    marginLeft: 5\n  },\n  head: {\n    fontSize: 30,\n    fontFamily: \"sans-serif\",\n    textAlign: \"center\",\n    textTransform: \"uppercase\",\n    letterSpacing: 0.5,\n    position: \"absolute\",\n    color: \"rgb(115, 70, 124)\",\n    fontWeight: 900,\n    marginLeft: 50,\n    whiteSpace: \"nowrap\",\n    marginTop: 10\n  },\n  link: {\n    textDecoration: \"none\"\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    marginTop: theme.spacing.unit,\n    paddingBottom: 20\n  },\n\n  cssLabel: {\n    \"&$cssFocused\": {\n      color: \"black\",\n      fontSize: 20\n    }\n  },\n  cssFocused: {},\n  cssUnderline: {\n    \"&:after\": {\n      borderBottomColor: \"black\"\n    }\n  },\n  cssOutlinedInput: {\n    \"&$cssFocused $notchedOutline\": {\n      borderColor: \"black\"\n    }\n  },\n  notchedOutline: {},\n  bootstrapRoot: {\n    \"label + &\": {\n      marginTop: theme.spacing.unit * 3\n    }\n  },\n  bootstrapInput: {\n    borderRadius: 6,\n    backgroundColor: \"black\",\n    border: \"1px solid black\",\n    fontSize: 16,\n    width: \"600px\",\n    padding: \"10px 12px\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"'\n    ].join(\",\"),\n    \"&:focus\": {\n      borderRadius: 6,\n      borderColor: \"black\",\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\"\n    }\n  },\n  bootstrapFormLabel: {\n    fontSize: 20\n  },\n  dense: {\n    marginTop: 25\n  },\n  input: {\n    marginLeft: 5,\n    fontSize: 20\n  },\n  buttonPost: {\n    margin: theme.spacing.unit,\n    fontFamily: \"sans-serif\",\n    textAlign: \"center\",\n    textTransform: \"uppercase\",\n    letterSpacing: 0.5,\n    borderColor: \"rgb(115, 70, 124)\",\n    color: \"#EEEEEE\",\n    backgroundColor: \"rgb(115, 70, 124)\",\n    fontSize: 20,\n    width: 120,\n    height: 50,\n    marginLeft: 5\n  },\n  file: {\n    margin: theme.spacing.unit,\n    fontFamily: \"sans-serif\",\n    textAlign: \"center\",\n    textTransform: \"uppercase\",\n    letterSpacing: 0.5,\n    borderColor: \"#D76000\",\n    color: \"#EEEEEE\",\n    backgroundColor: \"#D76000\",\n    fontSize: 12,\n    width: 200,\n    height: 50,\n    marginBottom: 10\n  }\n});\n\nclass CreateProject extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      quill: \"\",\n      naslovna: \"\",\n      sazetak: \"\",\n      signature: \"\",\n      loading: false,\n      posts: {}\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeNaslovna = this.handleChangeNaslovna.bind(this);\n    this.handleChangeSazetak = this.handleChangeSazetak.bind(this);\n    this.onHandleSubmit = this.onHandleSubmit.bind(this);\n  }\n  componentWillMount() {\n    this.props.getPosts();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      nextProps.user.loading === false &&\n      nextProps.user.email === undefined\n    ) {\n      this.props.history.replace(\"/Login\");\n    }\n  }\n  componentDidMount() {\n    database.on(\"value\", snapshot => {\n      this.setState({\n        posts: snapshot.val(),\n        loading: false\n      });\n    });\n  }\n  handleChange(values) {\n    console.log(this.state);\n    this.setState({ quill: values });\n  }\n  handleChangeNaslovna(values) {\n    console.log(this.state);\n    this.setState({ naslovna: values });\n  }\n  handleChangeSazetak(values) {\n    console.log(this.state);\n    this.setState({ sazetak: values });\n  }\n  onHandleSubmit(values) {\n    console.log(this.state);\n    values.preventDefault();\n    const posts = {\n      title: this.state.title,\n      signature: this.state.signature,\n      naslovna: this.state.naslovna,\n      sazetak: this.state.sazetak,\n      quill: this.state.quill\n    };\n    database.push(posts);\n    this.setState({\n      title: \"\",\n      naslovna: \"\",\n      sazetak: \"\",\n      quill: \"\",\n      signature: \"\"\n    });\n    this.props.history.push(\"/\");\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        {\" \"}\n        <Navbar />\n        <MenuBar />\n        <div>\n          <h4 className={classes.head}>Novi post</h4>\n\n          <PostCard>\n            <form onSubmit={this.onHandleSubmit} className={classes.container}>\n              <TextField\n                id=\"outlined-full-width\"\n                helperText=\"Tvojeg ful kul posta\"\n                fullWidth\n                margin=\"normal\"\n                InputLabelProps={{\n                  shrink: true\n                }}\n                fullWidth\n                name=\"title\"\n                label=\"Upiši naslov\"\n                value={this.state.title}\n                onChange={values => {\n                  this.setState({ title: values.target.value });\n                }}\n                variant=\"outlined\"\n                InputLabelProps={{\n                  classes: {\n                    root: classes.cssLabel,\n                    focused: classes.cssFocused\n                  }\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.cssOutlinedInput,\n                    focused: classes.cssFocused,\n                    notchedOutline: classes.notchedOutline,\n                    input: classes.input\n                  }\n                }}\n              />{\" \"}\n              <br />\n              <div>\n                {\" \"}\n                <ReactQuill\n                  name=\"quill\"\n                  placeholder=\"Učitaj sliku za naslovnu\"\n                  value={this.state.naslovna}\n                  modules={CreateProject.modulesNaslovna}\n                  formats={CreateProject.formatsNaslovna}\n                  onChange={this.handleChangeNaslovna}\n                  className={classes.input}\n                />{\" \"}\n              </div>\n              <br />\n              <ReactQuill\n                name=\"quill\"\n                placeholder=\"Ukratko opišite o čemu Vaš post govori\"\n                value={this.state.sazetak}\n                modules={CreateProject.modules}\n                formats={CreateProject.formats}\n                onChange={this.handleChangeSazetak}\n                className={classes.input}\n              />{\" \"}\n              <br />\n              <ReactQuill\n                name=\"quill\"\n                placeholder=\"Piši....briši(koristite slike manjeg formata)\"\n                value={this.state.quill}\n                modules={CreateProject.modules}\n                formats={CreateProject.formats}\n                onChange={this.handleChange}\n                className={classes.input}\n              />{\" \"}\n              <br />\n              <TextField\n                id=\"outlined-full-width\"\n                label=\"Kreirao\"\n                placeholder=\"..\"\n                helperText=\"Ako nisi ti možda je tvoj mačak, pas, možda baka...\"\n                fullWidth\n                margin=\"normal\"\n                name=\"signature\"\n                InputLabelProps={{\n                  shrink: true\n                }}\n                value={this.state.signature}\n                onChange={values => {\n                  this.setState({ signature: values.target.value });\n                }}\n                variant=\"outlined\"\n                InputLabelProps={{\n                  classes: {\n                    root: classes.cssLabel,\n                    focused: classes.cssFocused\n                  }\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.cssOutlinedInput,\n                    focused: classes.cssFocused,\n                    notchedOutline: classes.notchedOutline,\n                    input: classes.input\n                  }\n                }}\n              />\n              <button type=\"submit\" className={classes.buttonPost}>\n                Kreiraj\n              </button>\n            </form>\n          </PostCard>\n        </div>\n      </div>\n    );\n  }\n}\nCreateProject.modules = {\n  toolbar: [\n    [{ header: \"1\" }, { header: \"2\" }],\n    [{ size: [] }],\n    [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\n    [\n      { list: \"ordered\" },\n      { list: \"bullet\" },\n      { indent: \"-1\" },\n      { indent: \"+1\" }\n    ],\n    [\"link\", \"image\", \"video\"],\n    [\"clean\"]\n  ],\n  clipboard: {\n    // toggle to add extra line breaks when pasting HTML:\n    matchVisual: false\n  }\n};\n\nCreateProject.formats = [\n  \"header\",\n  \"font\",\n  \"size\",\n  \"bold\",\n  \"italic\",\n  \"underline\",\n  \"strike\",\n  \"blockquote\",\n  \"list\",\n  \"bullet\",\n  \"indent\",\n  \"link\",\n  \"image\",\n  \"video\"\n];\nCreateProject.modulesNaslovna = {\n  toolbar: [[\"image\"]],\n  clipboard: {\n    // toggle to add extra line breaks when pasting HTML:\n    matchVisual: false\n  }\n};\n\nCreateProject.formatsNaslovna = [\"image\"];\n\nCreateProject.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nCreateProject = connect(\n  (state, ownProps) => ({\n    posts: state.posts,\n    user: state.user\n  }),\n  { savePost, getPosts, deletePost, getUser, logout }\n)(CreateProject);\nCreateProject.propTypes = {\n  classes: PropTypes.object.isRequired,\n  width: PropTypes.string.isRequired\n};\nexport default compose(withStyles(styles))(CreateProject);\n*/\n"]},"metadata":{},"sourceType":"module"}