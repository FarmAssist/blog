{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\src\\\\Container\\\\ListPosts.jsx\";\n\n/*import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getPosts, savePost, deletePost } from \"../Actions/PostActions\";\nimport { Field, reduxForm, reset } from \"redux-form\";\nimport _ from \"lodash\";\nimport PostCard from \"../Components/PostCard\";\nimport { getUser, logout } from \"../Actions/UserActions\";\nimport { Link } from \"react-router-dom\";\nimport { required } from \"../Helpers/ReduxFormValidation\";\nimport Navbar from \"../Layout/Navbar\";\nimport SignedInLinks from \"../Dashboard/SignedInLinks\";\nimport Button from \"@material-ui/core/Button\";\nimport Modal from \"@material-ui/core/Modal\";\nimport CreateProject from \"./CreateProject\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport renderHTML from \"react-render-html\";\nimport compose from \"recompose/compose\";\nimport * as firebase from \"firebase\";\nimport withWidth from \"@material-ui/core/withWidth\";\nimport PropTypes from \"prop-types\";\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  title: {\n    left: 20,\n    fontSize: 20,\n    fontFamily: \" 'Josefin Sans', sans-serif;\"\n  },\n  col: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    marginLeft: 40,\n    overflow: \"hidden\",\n    flexDirection: \"row\",\n    md: \"auto\",\n    spacing: 0,\n    actionPosition: \"right\",\n    item: \"true\"\n  },\n  card: {\n    maxWidth: 600,\n    backgroundColor: \"#e0e0e0\",\n    marginTop: -10\n  },\n  media: {\n    verticalAlign: \"middle\",\n    height: 200,\n    top: 5\n  },\n  overlay: {\n    position: \"absolute\",\n    top: \"160px\",\n    color: \"black\",\n    backgroundColor: \"rgba(176, 181, 177, 0.45)\",\n    width: 600\n  },\n  container: {\n    display: \"flex\"\n  },\n  paper: {\n    position: \"relative\",\n    width: \"50%\",\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing.unit * 4,\n    outline: \"none\"\n  },\n  modalStyle1: {\n    overflow: \"scroll\",\n    height: \"100%\",\n    display: \"block\"\n  }\n});\nclass App extends Component {\n  /*renderPosts() {\n    console.log(this.props.user.uid);\n    console.log(this.props.user.email);\n\n    return _.map(this.props.posts, (post, key) => {\n      var newTime = post.time,\n        formatTime = new Date(newTime).toLocaleString();\n      return (\n        <Link to={`/${key}`}>\n          <div className=\"tile\">\n            <CardMedia>\n              <span>{renderHTML(post.naslovna)}</span>\n\n              <div className=\"text\">\n                <h1>{post.title}</h1>\n\n                <p className=\"animate-text\">\n                  <span className=\"sazetak\"> {post.sazetak}</span>\n                </p>\n                <p className=\"animate-text\">\n                  <span>Autor: {post.signature}</span> <br />\n                  <span>Kreirano: {formatTime}</span>\n                </p>\n              </div>\n            </CardMedia>\n          </div>{\" \"}\n        </Link>\n      );\n    });\n  }*/\n\n/*renderPosts() {\n    return _.map(this.props.posts, (post, key) => {\n      var newTime = post.time,\n        formatTime = new Date(newTime).toLocaleString();\n      return (\n        <div className=\"tile\">\n          {\" \"}\n          <CardMedia>\n            <Link to={`/${key}`}>\n              <div className=\"text\">\n                <h1>{post.title}</h1>{\" \"}\n                <p className=\"animate-text\">\n                  <span className=\"sazetak\"> {post.sazetak}</span>\n                </p>\n                <p className=\"animate-text\">\n                  <span>Autor: {post.signature}</span> <br />\n                  <span>Kreirano: {formatTime}</span>\n                </p>\n              </div>\n            </Link>\n            <p className=\"card-text\">{post.body}</p>\n            {post.uid === this.props.user.uid && (\n              <button\n                className=\"btn btn-danger float-right\"\n                onClick={() => this.props.deletePost(key)}\n              >\n                Delete\n              </button>\n            )}\n          </CardMedia>\n        </div>\n      );\n    });\n  }\n\n  renderField(field) {\n    const errStyle = {\n      borderColor: \"red\"\n    };\n    return (\n      <input\n        type=\"text\"\n        placeholder={`Enter a ${field.label}...`}\n        {...field.input}\n        className={field.class}\n        style={field.meta.touched && field.meta.error ? errStyle : null}\n      />\n    );\n  }\n\n  onSubmit(values) {\n    this.props\n      .savePost(values, this.props.user.uid)\n      .then(this.props.dispatch(reset(\"NewPost\")));\n  }\n\n  render() {\n    const { handleSubmit } = this.props;\n    return (\n      <div>\n        <div className=\"navbar\">\n          <button\n            className=\"btn btn-danger\"\n            onClick={() => {\n              this.props.logout();\n            }}\n          >\n            Sign out\n          </button>\n        </div>\n\n        <div className=\"container\">\n          <div className=\"main\">{this.renderPosts()}</div>\n          <div className=\"navbar fixed-bottom\">\n            <form\n              onSubmit={handleSubmit(this.onSubmit.bind(this))}\n              className=\"footerForm\"\n            >\n              <Field\n                name=\"title\"\n                component={this.renderField}\n                label=\"Title\"\n                class=\"footer-title\"\n                validate={required}\n              />\n              <Field\n                name=\"body\"\n                component={this.renderField}\n                label=\"Body\"\n                class=\"footer-body\"\n              />\n              <button type=\"submit\" className=\"btn footer-button\">\n                Post\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nlet form = reduxForm({\n  form: \"NewPost\"\n})(App);\n\nform = connect(\n  (state, ownProps) => ({\n    posts: state.posts,\n    user: state.user\n  }),\n  { savePost, getPosts, deletePost, getUser, logout }\n)(form);\n\nexport default form;*/\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getPosts, savePost, deletePost } from \"../Actions/PostActions\";\nimport { Field, reduxForm, reset } from \"redux-form\";\nimport _ from \"lodash\";\nimport { getUser, logout } from \"../Actions/UserActions\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { required } from \"../Helpers/ReduxFormValidation\";\nimport Navbar from \"../Layout/Navbar\";\nimport SignedInLinks from \"../Dashboard/SignedInLinks\";\nimport Button from \"@material-ui/core/Button\";\nimport Modal from \"@material-ui/core/Modal\";\nimport CreateProject from \"./CreateProject\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport renderHTML from \"react-render-html\";\nimport compose from \"recompose/compose\";\nimport * as firebase from \"firebase\";\nimport withWidth from \"@material-ui/core/withWidth\";\nimport PropTypes from \"prop-types\";\nimport QuizHome from \"../Quiz/QuizHome\";\nimport Username from \"../Container/Username\";\nimport { database } from \"../Firebase\";\n\nfunction getModalStyle() {\n  var top = 50;\n  var left = 50;\n  return {\n    top: \"\".concat(top, \"%\"),\n    left: \"\".concat(left, \"%\"),\n    transform: \"translate(-\".concat(top, \"%, -\").concat(left, \"%)\")\n  };\n}\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    title: {\n      left: 20,\n      fontSize: 20,\n      fontFamily: \" 'Josefin Sans', sans-serif;\"\n    },\n    col: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      marginLeft: 40,\n      overflow: \"hidden\",\n      flexDirection: \"row\",\n      md: \"auto\",\n      spacing: 0,\n      actionPosition: \"right\",\n      item: \"true\"\n    },\n    card: {\n      maxWidth: 600,\n      backgroundColor: \"#e0e0e0\",\n      marginTop: -10\n    },\n    media: {\n      verticalAlign: \"middle\",\n      height: 200,\n      top: 5\n    },\n    overlay: {\n      position: \"absolute\",\n      top: \"160px\",\n      color: \"black\",\n      backgroundColor: \"rgba(176, 181, 177, 0.45)\",\n      width: 600\n    },\n    container: {\n      display: \"flex\"\n    },\n    paper: {\n      position: \"relative\",\n      width: \"50%\",\n      backgroundColor: theme.palette.background.paper,\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing.unit * 4,\n      outline: \"none\"\n    },\n    modalStyle1: {\n      overflow: \"scroll\",\n      height: \"100%\",\n      display: \"block\"\n    }\n  };\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      open: false,\n      isShowList: false,\n      isShowBody: false,\n      isShowModal: false,\n      current: 0,\n      message: localStorage.getItem(\"message\") || \"\"\n    };\n\n    _this.handleOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleCloseList = function () {\n      _this.setState({\n        isShowList: false\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.onChange = function (event) {\n      var message = event.target.value;\n      localStorage.getItem(\"message\", message);\n\n      _this.setState({\n        message: message\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"toggle\",\n    value: function toggle(index) {\n      this.setState({\n        current: index\n      });\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(event) {\n      this.setState({\n        isShowBody: !this.state.isShowBody\n      });\n    }\n  }, {\n    key: \"handleClickList\",\n    value: function handleClickList(event) {\n      this.setState({\n        isShowList: !this.state.isShowList\n      });\n    }\n  }, {\n    key: \"handleClickModal\",\n    value: function handleClickModal(event) {\n      this.setState({\n        isShowModal: !this.state.isShowModal\n      });\n    }\n  }, {\n    key: \"getTime\",\n    value: function getTime() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, \"hello\");\n    }\n  }, {\n    key: \"renderUser\",\n    value: function renderUser() {\n      console.log(this.props.username);\n    }\n  }, {\n    key: \"renderPosts\",\n    value: function renderPosts() {\n      return _.map(this.props.posts, function (post, key) {\n        var newTime = post.time,\n            formatTime = new Date(newTime).toLocaleString();\n        return React.createElement(Link, {\n          to: \"/\".concat(key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 364\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"tile\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 365\n          },\n          __self: this\n        }, React.createElement(CardMedia, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 366\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 367\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 368\n          },\n          __self: this\n        }, post.title), React.createElement(\"p\", {\n          className: \"animate-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 370\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"sazetak\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 371\n          },\n          __self: this\n        }, \" \", post.sazetak)), React.createElement(\"p\", {\n          className: \"animate-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 373\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 374\n          },\n          __self: this\n        }, \"Autor: \", post.signature), \" \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 374\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 375\n          },\n          __self: this\n        }, \"Kreirano: \", formatTime))))), \" \");\n      });\n    }\n  }, {\n    key: \"renderField\",\n    value: function renderField(field) {\n      var errStyle = {\n        borderColor: \"red\"\n      };\n      return React.createElement(\"input\", Object.assign({\n        type: \"text\",\n        placeholder: \"Enter a \".concat(field.label, \"...\")\n      }, field.input, {\n        className: field.class,\n        style: field.meta.touched && field.meta.error ? errStyle : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(values) {\n      this.props.savePost(values, this.props.user.uid).then(this.props.dispatch(reset(\"NewPost\")));\n    }\n  }, {\n    key: \"adduserid\",\n    value: function adduserid() {\n      var user = firebase.auth().currentUser;\n      var userid = user.uid;\n      console.log(userid);\n    }\n  }, {\n    key: \"getUsername\",\n    value: function getUsername() {\n      var mail = this.props.user.email;\n      var username = mail.substring(0, mail.indexOf(\"@\"));\n      localStorage.setItem(\"username\", username);\n      return username;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        onClick: this.handleClickList.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }, \"list\")), \" \", React.createElement(\"div\", {\n        onClick: this.handleClick.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433\n        },\n        __self: this\n      }, \"quiz\")), this.state.isShowList ? React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-10 right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437\n        },\n        __self: this\n      }, this.renderPosts().reverse())) : null, this.state.isShowBody ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441\n        },\n        __self: this\n      }, React.createElement(QuizHome, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442\n        },\n        __self: this\n      })) : React.createElement(\"div\", {\n        onClick: this.handleCloseList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        onClick: this.handleClickModal.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      }, \"modal\")), this.state.isShowModal ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451\n        },\n        __self: this\n      }, React.createElement(CreateProject, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452\n        },\n        __self: this\n      }), \" \") : null), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#nogo\",\n        onClick: this.toggle.bind(this, 1),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458\n        },\n        __self: this\n      }, \"Toggle\"), React.createElement(\"div\", {\n        className: \"collapsible \".concat(this.state.current === 1 ? \"open \" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461\n        },\n        __self: this\n      }, \"Text here...\")), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#nogo\",\n        onClick: this.toggle.bind(this, 2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }, \"Toggle\"), React.createElement(\"div\", {\n        className: \"collapsible \".concat(this.state.current === 2 ? \"open \" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473\n        },\n        __self: this\n      }, \"Text here...\")), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#nogo\",\n        onClick: this.toggle.bind(this, 3),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482\n        },\n        __self: this\n      }, \"Toggle\"), React.createElement(\"div\", {\n        className: \"collapsible \".concat(this.state.current === 3 ? \"open \" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485\n        },\n        __self: this\n      }, \"Text here...\"))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar form = reduxForm({\n  form: \"NewPost\"\n})(App);\nform = connect(function (state, ownProps) {\n  return {\n    posts: state.posts,\n    user: state.user\n  };\n}, {\n  savePost: savePost,\n  getPosts: getPosts,\n  deletePost: deletePost,\n  getUser: getUser,\n  logout: logout\n})(form);\nform.propTypes = {\n  classes: PropTypes.object.isRequired,\n  width: PropTypes.string.isRequired\n};\nexport default compose(withStyles(styles), withWidth())(form);","map":{"version":3,"sources":["C:\\Users\\kanto\\OneDrive\\Desktop\\blog\\src\\Container\\ListPosts.jsx"],"names":["React","Component","connect","getPosts","savePost","deletePost","Field","reduxForm","reset","_","getUser","logout","NavLink","Link","required","Navbar","SignedInLinks","Button","Modal","CreateProject","withStyles","CardMedia","renderHTML","compose","firebase","withWidth","PropTypes","QuizHome","Username","database","getModalStyle","top","left","transform","styles","theme","root","flexGrow","title","fontSize","fontFamily","col","display","flexWrap","marginLeft","overflow","flexDirection","md","spacing","actionPosition","item","card","maxWidth","backgroundColor","marginTop","media","verticalAlign","height","overlay","position","color","width","container","paper","palette","background","boxShadow","shadows","padding","unit","outline","modalStyle1","App","state","open","isShowList","isShowBody","isShowModal","current","message","localStorage","getItem","handleOpen","setState","handleCloseList","handleClose","onChange","event","target","value","index","console","log","props","username","map","posts","post","key","newTime","time","formatTime","Date","toLocaleString","sazetak","signature","field","errStyle","borderColor","label","input","class","meta","touched","error","values","user","uid","then","dispatch","auth","currentUser","userid","mail","email","substring","indexOf","setItem","handleClickList","bind","handleClick","renderPosts","reverse","handleClickModal","toggle","form","ownProps","propTypes","classes","object","isRequired","string"],"mappings":"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","sourcesContent":["/*import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getPosts, savePost, deletePost } from \"../Actions/PostActions\";\nimport { Field, reduxForm, reset } from \"redux-form\";\nimport _ from \"lodash\";\nimport PostCard from \"../Components/PostCard\";\nimport { getUser, logout } from \"../Actions/UserActions\";\nimport { Link } from \"react-router-dom\";\nimport { required } from \"../Helpers/ReduxFormValidation\";\nimport Navbar from \"../Layout/Navbar\";\nimport SignedInLinks from \"../Dashboard/SignedInLinks\";\nimport Button from \"@material-ui/core/Button\";\nimport Modal from \"@material-ui/core/Modal\";\nimport CreateProject from \"./CreateProject\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport renderHTML from \"react-render-html\";\nimport compose from \"recompose/compose\";\nimport * as firebase from \"firebase\";\nimport withWidth from \"@material-ui/core/withWidth\";\nimport PropTypes from \"prop-types\";\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  title: {\n    left: 20,\n    fontSize: 20,\n    fontFamily: \" 'Josefin Sans', sans-serif;\"\n  },\n  col: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    marginLeft: 40,\n    overflow: \"hidden\",\n    flexDirection: \"row\",\n    md: \"auto\",\n    spacing: 0,\n    actionPosition: \"right\",\n    item: \"true\"\n  },\n  card: {\n    maxWidth: 600,\n    backgroundColor: \"#e0e0e0\",\n    marginTop: -10\n  },\n  media: {\n    verticalAlign: \"middle\",\n    height: 200,\n    top: 5\n  },\n  overlay: {\n    position: \"absolute\",\n    top: \"160px\",\n    color: \"black\",\n    backgroundColor: \"rgba(176, 181, 177, 0.45)\",\n    width: 600\n  },\n  container: {\n    display: \"flex\"\n  },\n  paper: {\n    position: \"relative\",\n    width: \"50%\",\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing.unit * 4,\n    outline: \"none\"\n  },\n  modalStyle1: {\n    overflow: \"scroll\",\n    height: \"100%\",\n    display: \"block\"\n  }\n});\nclass App extends Component {\n  /*renderPosts() {\n    console.log(this.props.user.uid);\n    console.log(this.props.user.email);\n\n    return _.map(this.props.posts, (post, key) => {\n      var newTime = post.time,\n        formatTime = new Date(newTime).toLocaleString();\n      return (\n        <Link to={`/${key}`}>\n          <div className=\"tile\">\n            <CardMedia>\n              <span>{renderHTML(post.naslovna)}</span>\n\n              <div className=\"text\">\n                <h1>{post.title}</h1>\n\n                <p className=\"animate-text\">\n                  <span className=\"sazetak\"> {post.sazetak}</span>\n                </p>\n                <p className=\"animate-text\">\n                  <span>Autor: {post.signature}</span> <br />\n                  <span>Kreirano: {formatTime}</span>\n                </p>\n              </div>\n            </CardMedia>\n          </div>{\" \"}\n        </Link>\n      );\n    });\n  }*/\n/*renderPosts() {\n    return _.map(this.props.posts, (post, key) => {\n      var newTime = post.time,\n        formatTime = new Date(newTime).toLocaleString();\n      return (\n        <div className=\"tile\">\n          {\" \"}\n          <CardMedia>\n            <Link to={`/${key}`}>\n              <div className=\"text\">\n                <h1>{post.title}</h1>{\" \"}\n                <p className=\"animate-text\">\n                  <span className=\"sazetak\"> {post.sazetak}</span>\n                </p>\n                <p className=\"animate-text\">\n                  <span>Autor: {post.signature}</span> <br />\n                  <span>Kreirano: {formatTime}</span>\n                </p>\n              </div>\n            </Link>\n            <p className=\"card-text\">{post.body}</p>\n            {post.uid === this.props.user.uid && (\n              <button\n                className=\"btn btn-danger float-right\"\n                onClick={() => this.props.deletePost(key)}\n              >\n                Delete\n              </button>\n            )}\n          </CardMedia>\n        </div>\n      );\n    });\n  }\n\n  renderField(field) {\n    const errStyle = {\n      borderColor: \"red\"\n    };\n    return (\n      <input\n        type=\"text\"\n        placeholder={`Enter a ${field.label}...`}\n        {...field.input}\n        className={field.class}\n        style={field.meta.touched && field.meta.error ? errStyle : null}\n      />\n    );\n  }\n\n  onSubmit(values) {\n    this.props\n      .savePost(values, this.props.user.uid)\n      .then(this.props.dispatch(reset(\"NewPost\")));\n  }\n\n  render() {\n    const { handleSubmit } = this.props;\n    return (\n      <div>\n        <div className=\"navbar\">\n          <button\n            className=\"btn btn-danger\"\n            onClick={() => {\n              this.props.logout();\n            }}\n          >\n            Sign out\n          </button>\n        </div>\n\n        <div className=\"container\">\n          <div className=\"main\">{this.renderPosts()}</div>\n          <div className=\"navbar fixed-bottom\">\n            <form\n              onSubmit={handleSubmit(this.onSubmit.bind(this))}\n              className=\"footerForm\"\n            >\n              <Field\n                name=\"title\"\n                component={this.renderField}\n                label=\"Title\"\n                class=\"footer-title\"\n                validate={required}\n              />\n              <Field\n                name=\"body\"\n                component={this.renderField}\n                label=\"Body\"\n                class=\"footer-body\"\n              />\n              <button type=\"submit\" className=\"btn footer-button\">\n                Post\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nlet form = reduxForm({\n  form: \"NewPost\"\n})(App);\n\nform = connect(\n  (state, ownProps) => ({\n    posts: state.posts,\n    user: state.user\n  }),\n  { savePost, getPosts, deletePost, getUser, logout }\n)(form);\n\nexport default form;*/\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getPosts, savePost, deletePost } from \"../Actions/PostActions\";\nimport { Field, reduxForm, reset } from \"redux-form\";\nimport _ from \"lodash\";\nimport { getUser, logout } from \"../Actions/UserActions\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { required } from \"../Helpers/ReduxFormValidation\";\nimport Navbar from \"../Layout/Navbar\";\nimport SignedInLinks from \"../Dashboard/SignedInLinks\";\nimport Button from \"@material-ui/core/Button\";\nimport Modal from \"@material-ui/core/Modal\";\nimport CreateProject from \"./CreateProject\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport renderHTML from \"react-render-html\";\nimport compose from \"recompose/compose\";\nimport * as firebase from \"firebase\";\nimport withWidth from \"@material-ui/core/withWidth\";\nimport PropTypes from \"prop-types\";\nimport QuizHome from \"../Quiz/QuizHome\";\nimport Username from \"../Container/Username\";\nimport { database } from \"../Firebase\";\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  title: {\n    left: 20,\n    fontSize: 20,\n    fontFamily: \" 'Josefin Sans', sans-serif;\"\n  },\n  col: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    marginLeft: 40,\n    overflow: \"hidden\",\n    flexDirection: \"row\",\n    md: \"auto\",\n    spacing: 0,\n    actionPosition: \"right\",\n    item: \"true\"\n  },\n  card: {\n    maxWidth: 600,\n    backgroundColor: \"#e0e0e0\",\n    marginTop: -10\n  },\n  media: {\n    verticalAlign: \"middle\",\n    height: 200,\n    top: 5\n  },\n  overlay: {\n    position: \"absolute\",\n    top: \"160px\",\n    color: \"black\",\n    backgroundColor: \"rgba(176, 181, 177, 0.45)\",\n    width: 600\n  },\n  container: {\n    display: \"flex\"\n  },\n  paper: {\n    position: \"relative\",\n    width: \"50%\",\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing.unit * 4,\n    outline: \"none\"\n  },\n  modalStyle1: {\n    overflow: \"scroll\",\n    height: \"100%\",\n    display: \"block\"\n  }\n});\n\nclass App extends Component {\n  state = {\n    open: false,\n    isShowList: false,\n    isShowBody: false,\n    isShowModal: false,\n    current: 0,\n    message: localStorage.getItem(\"message\") || \"\"\n  };\n  toggle(index) {\n    this.setState({\n      current: index\n    });\n  }\n  handleClick(event) {\n    this.setState({ isShowBody: !this.state.isShowBody });\n  }\n  handleClickList(event) {\n    this.setState({ isShowList: !this.state.isShowList });\n  }\n  handleClickModal(event) {\n    this.setState({ isShowModal: !this.state.isShowModal });\n  }\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n  handleCloseList = () => {\n    this.setState({ isShowList: false });\n  };\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n  getTime() {\n    return <div>hello</div>;\n  }\n  renderUser() {\n    console.log(this.props.username);\n  }\n  renderPosts() {\n    return _.map(this.props.posts, (post, key) => {\n      var newTime = post.time,\n        formatTime = new Date(newTime).toLocaleString();\n      return (\n        <Link to={`/${key}`}>\n          <div className=\"tile\">\n            <CardMedia>\n              <div className=\"text\">\n                <h1>{post.title}</h1>\n\n                <p className=\"animate-text\">\n                  <span className=\"sazetak\"> {post.sazetak}</span>\n                </p>\n                <p className=\"animate-text\">\n                  <span>Autor: {post.signature}</span> <br />\n                  <span>Kreirano: {formatTime}</span>\n                </p>\n              </div>\n            </CardMedia>\n          </div>{\" \"}\n        </Link>\n      );\n    });\n  }\n\n  renderField(field) {\n    const errStyle = {\n      borderColor: \"red\"\n    };\n    return (\n      <input\n        type=\"text\"\n        placeholder={`Enter a ${field.label}...`}\n        {...field.input}\n        className={field.class}\n        style={field.meta.touched && field.meta.error ? errStyle : null}\n      />\n    );\n  }\n\n  onSubmit(values) {\n    this.props\n      .savePost(values, this.props.user.uid)\n      .then(this.props.dispatch(reset(\"NewPost\")));\n  }\n\n  adduserid() {\n    var user = firebase.auth().currentUser;\n    var userid = user.uid;\n    console.log(userid);\n  }\n  getUsername() {\n    var mail = this.props.user.email;\n    var username = mail.substring(0, mail.indexOf(\"@\"));\n    localStorage.setItem(\"username\", username);\n\n    return username;\n  }\n  onChange = event => {\n    const message = event.target.value;\n\n    localStorage.getItem(\"message\", message);\n    this.setState({ message });\n  };\n  render() {\n    return (\n      <div>\n        <Navbar />\n        <div>\n          <div onClick={this.handleClickList.bind(this)}>\n            <span>list</span>\n          </div>{\" \"}\n          <div onClick={this.handleClick.bind(this)}>\n            <span>quiz</span>\n          </div>\n          {this.state.isShowList ? (\n            <div className=\"row\">\n              <div className=\"col-10 right\">{this.renderPosts().reverse()}</div>\n            </div>\n          ) : null}\n          {this.state.isShowBody ? (\n            <div>\n              <QuizHome />\n            </div>\n          ) : (\n            <div onClick={this.handleCloseList} />\n          )}\n          <div onClick={this.handleClickModal.bind(this)}>\n            <span>modal</span>\n          </div>\n          {this.state.isShowModal ? (\n            <div>\n              <CreateProject />{\" \"}\n            </div>\n          ) : null}\n        </div>\n        <ul>\n          <li>\n            <a href=\"#nogo\" onClick={this.toggle.bind(this, 1)}>\n              Toggle\n            </a>\n            <div\n              className={`collapsible ${\n                this.state.current === 1 ? \"open \" : \"\"\n              }`}\n            >\n              Text here...\n            </div>\n          </li>\n          <li>\n            <a href=\"#nogo\" onClick={this.toggle.bind(this, 2)}>\n              Toggle\n            </a>\n            <div\n              className={`collapsible ${\n                this.state.current === 2 ? \"open \" : \"\"\n              }`}\n            >\n              Text here...\n            </div>\n          </li>\n          <li>\n            <a href=\"#nogo\" onClick={this.toggle.bind(this, 3)}>\n              Toggle\n            </a>\n            <div\n              className={`collapsible ${\n                this.state.current === 3 ? \"open \" : \"\"\n              }`}\n            >\n              Text here...\n            </div>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nlet form = reduxForm({\n  form: \"NewPost\"\n})(App);\n\nform = connect(\n  (state, ownProps) => ({\n    posts: state.posts,\n    user: state.user\n  }),\n  { savePost, getPosts, deletePost, getUser, logout }\n)(form);\nform.propTypes = {\n  classes: PropTypes.object.isRequired,\n  width: PropTypes.string.isRequired\n};\nexport default compose(\n  withStyles(styles),\n  withWidth()\n)(form);\n"]},"metadata":{},"sourceType":"module"}