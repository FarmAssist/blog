{"ast":null,"code":"import { auth, database, googleProvider, storage } from \"../Firebase\";\nexport var GET_USER = \"get_user\";\nexport var GET_DB_USERS = \"get_db_users\";\nexport var USER_STATUS = \"user_status\";\nexport var USER_DB_STATUS = \"user_db_status\";\nexport function getUser() {\n  return function (dispatch) {\n    dispatch({\n      type: USER_STATUS,\n      payload: true\n    });\n    auth.onAuthStateChanged(function (user) {\n      dispatch({\n        type: GET_USER,\n        payload: user\n      });\n      dispatch({\n        type: USER_STATUS,\n        payload: false\n      });\n    });\n  };\n}\nexport function getDbUsers() {\n  return function (dispatch) {\n    dispatch({\n      type: USER_DB_STATUS,\n      payload: true\n    });\n    database.ref(\"users\").on(\"value\", function (db) {\n      dispatch({\n        type: GET_DB_USERS,\n        payload: db.val()\n      });\n      dispatch({\n        type: USER_DB_STATUS,\n        payload: false\n      });\n    });\n  };\n}\nexport function login(email, password) {\n  return function (dispatch) {\n    return auth.signInWithEmailAndPassword(email, password);\n  };\n}\nexport function logout() {\n  return function (dispatch) {\n    return auth.signOut();\n  };\n}\nexport function createAccount(data, picture) {\n  var fname = data.fname,\n      lname = data.lname,\n      email = data.email,\n      password = data.password,\n      image = data.image;\n  return function (dispatch) {\n    return auth.createUserWithEmailAndPassword(email, password).then(function (user) {\n      if (user !== null) {\n        storage.child(\"profile/\".concat(picture.name, \"/\").concat(new Date().getTime())).put(image[0]).then(function (snapshot) {\n          database.ref(\"users\").child(user.uid).set({\n            fname: fname,\n            lname: lname,\n            picture: snapshot.metadata.downloadURLs[0]\n          });\n        });\n      }\n    });\n  };\n}\nexport function googleLogin() {\n  return function (dispatch) {\n    return auth.signInWithPopup(googleProvider);\n  };\n}","map":{"version":3,"sources":["C:\\Users\\kanto\\OneDrive\\Desktop\\blog\\src\\Actions\\UserActions.jsx"],"names":["auth","database","googleProvider","storage","GET_USER","GET_DB_USERS","USER_STATUS","USER_DB_STATUS","getUser","dispatch","type","payload","onAuthStateChanged","user","getDbUsers","ref","on","db","val","login","email","password","signInWithEmailAndPassword","logout","signOut","createAccount","data","picture","fname","lname","image","createUserWithEmailAndPassword","then","child","name","Date","getTime","put","snapshot","uid","set","metadata","downloadURLs","googleLogin","signInWithPopup"],"mappings":"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","sourcesContent":["import { auth, database, googleProvider, storage } from \"../Firebase\";\r\n\r\nexport const GET_USER = \"get_user\";\r\nexport const GET_DB_USERS = \"get_db_users\";\r\nexport const USER_STATUS = \"user_status\";\r\nexport const USER_DB_STATUS = \"user_db_status\";\r\nexport function getUser() {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: USER_STATUS,\r\n      payload: true\r\n    });\r\n    auth.onAuthStateChanged(user => {\r\n      dispatch({\r\n        type: GET_USER,\r\n        payload: user\r\n      });\r\n      dispatch({\r\n        type: USER_STATUS,\r\n        payload: false\r\n      });\r\n    });\r\n  };\r\n}\r\nexport function getDbUsers() {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: USER_DB_STATUS,\r\n      payload: true\r\n    });\r\n    database.ref(\"users\").on(\"value\", db => {\r\n      dispatch({\r\n        type: GET_DB_USERS,\r\n        payload: db.val()\r\n      });\r\n      dispatch({\r\n        type: USER_DB_STATUS,\r\n        payload: false\r\n      });\r\n    });\r\n  };\r\n}\r\n\r\nexport function login(email, password) {\r\n  return dispatch => auth.signInWithEmailAndPassword(email, password);\r\n}\r\n\r\nexport function logout() {\r\n  return dispatch => auth.signOut();\r\n}\r\nexport function createAccount(data, picture) {\r\n  const { fname, lname, email, password, image } = data;\r\n  return dispatch =>\r\n    auth.createUserWithEmailAndPassword(email, password).then(user => {\r\n      if (user !== null) {\r\n        storage\r\n          .child(`profile/${picture.name}/${new Date().getTime()}`)\r\n          .put(image[0])\r\n          .then(snapshot => {\r\n            database\r\n              .ref(\"users\")\r\n              .child(user.uid)\r\n              .set({\r\n                fname,\r\n                lname,\r\n                picture: snapshot.metadata.downloadURLs[0]\r\n              });\r\n          });\r\n      }\r\n    });\r\n}\r\n\r\nexport function googleLogin() {\r\n  return dispatch => auth.signInWithPopup(googleProvider);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}