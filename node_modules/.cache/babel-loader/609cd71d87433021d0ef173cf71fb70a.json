{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\src\\\\auth\\\\Login.jsx\";\nimport React, { Component } from \"react\";\nimport SimpleBox from \"../Components/SimpleBox\";\nimport InputField from \"../Components/InputField\";\nimport FooterFormButton from \"../Components/FooterFormButton\";\nimport { login, getUser } from \"../Actions/UserActions\";\nimport { connect } from \"react-redux\";\nimport ErrorAlert from \"../Components/ErrorAlert\";\nimport \"../Layout/Navbar.css\";\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n    _this.state = {\n      email: \"\",\n      password: \"\",\n      error: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.getUser();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.user.email !== undefined) {\n        this.props.history.push(\"/\");\n      }\n    }\n  }, {\n    key: \"submitLogin\",\n    value: function submitLogin(event) {\n      var _this2 = this;\n\n      event.preventDefault();\n      this.props.login(this.state.email, this.state.password).catch(function (err) {\n        _this2.setState({\n          error: err\n        });\n      });\n    }\n  }, {\n    key: \"renderBody\",\n    value: function renderBody() {\n      var _this3 = this;\n\n      var errStyle = {\n        borderColor: \"red\"\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"sticky-anchor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"sticky\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(InputField, {\n        id: \"email\",\n        type: \"text\",\n        label: \"Email\",\n        inputAction: function inputAction(event) {\n          return _this3.setState({\n            email: event.target.value\n          });\n        },\n        style: this.state.error ? errStyle : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(InputField, {\n        id: \"password\",\n        type: \"password\",\n        label: \"Password\",\n        inputAction: function inputAction(event) {\n          return _this3.setState({\n            password: event.target.value\n          });\n        },\n        style: this.state.error ? errStyle : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), this.state.error && React.createElement(ErrorAlert, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Your username/password is incorrect\"), React.createElement(FooterFormButton, Object.assign({\n        submitLabel: \"Sign in\",\n        otherLabel: \"Create Account\",\n        goToLink: \"/CreateAccount\"\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }))))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Hello\"), React.createElement(\"div\", {\n        className: \"sticky-anchor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"sticky\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(SimpleBox, {\n        title: \"Sign in\",\n        body: this.renderBody(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), this.renderBody));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps, {\n  login: login,\n  getUser: getUser\n})(Login);\n/*import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Modal from \"@material-ui/core/Modal\";\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\nconst styles = theme => ({\n  card: {\n    width: 490,\n    height: 320,\n    marginLeft: 140,\n    backgroundColor: \"#f7f7f7\"\n  },\n  tit: {\n    textDecoration: \"none\"\n  },\n  title: {\n    fontSize: 20,\n    fontFamily: \"'Montserrat', sans-serif\"\n  },\n  textField: {\n    marginLeft: 30,\n    width: 240,\n    padding: 5\n  },\n  pos: {\n    marginBottom: 12\n  },\n  reg: {\n    marginLeft: 35\n  },\n  login: {\n    fontSize: 20,\n    fontFamily: \"'Montserrat', sans-serif\",\n    marginLeft: 30,\n    color: \"#6a3499\"\n  },\n  cssLabel: {\n    \"&$cssFocused\": {\n      color: \"#6a3499\",\n      fontSize: 20\n    }\n  },\n  cssFocused: {},\n  cssUnderline: {\n    \"&:after\": {\n      borderBottomColor: \"#6a3499\"\n    }\n  },\n  cssOutlinedInput: {\n    \"&$cssFocused $notchedOutline\": {\n      borderColor: \"#6a3499\"\n    }\n  },\n  notchedOutline: {},\n  bootstrapRoot: {\n    \"label + &\": {\n      marginTop: theme.spacing.unit * 3\n    }\n  },\n  bootstrapInput: {\n    borderRadius: 6,\n    backgroundColor: \"#6a3499\",\n    border: \"1px solid #6a3499\",\n    fontSize: 16,\n    width: \"600px\",\n    padding: \"10px 12px\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"'\n    ].join(\",\"),\n    \"&:focus\": {\n      borderRadius: 6,\n      borderColor: \"#6a3499\",\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\"\n    }\n  },\n  bootstrapFormLabel: {\n    fontSize: 20\n  },\n  dense: {\n    marginTop: 25\n  },\n  input: {\n    marginLeft: 5,\n    fontSize: 20\n  },\n  paper: {\n    position: \"absolute\",\n    width: theme.spacing.unit * 50,\n    backgroundColor: \"#c0bfcc\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing.unit * 4,\n    outline: \"none\"\n  },\n  register: {\n    fontSize: 15,\n    fontFamily: \"'Montserrat', sans-serif\",\n    color: \"#6a3499\"\n  }\n});\n\nclass SignIn extends React.Component {\n  state = {\n    open: false,\n    email: \"\",\n    password: \"\"\n  };\n\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleChange = e => {\n    console.log(this.state);\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    console.log(this.state);\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div>\n        <div className=\"sticky-anchor\" />\n        <div className=\"sticky\">\n          <Card className={classes.card}>\n            <CardContent className={classes.content}>\n              <Typography color=\"textSecondary\" gutterBottom>\n                Imaš li ideju za dijeljenje svojih tips'n'tricks?\n              </Typography>\n              <Typography\n                className={classes.title}\n                color=\"textSecondary\"\n                gutterBottom\n              >\n                Prijavi se ovdje!\n              </Typography>\n              <form onSubmit={this.handleSubmit}>\n                <TextField\n                  name=\"email\"\n                  id=\"email\"\n                  type=\"email\"\n                  autoComplete=\"email\"\n                  label=\"Email\"\n                  className={classes.textField}\n                  onChange={this.handleChange}\n                  variant=\"outlined\"\n                  InputLabelProps={{\n                    classes: {\n                      root: classes.cssLabel,\n                      focused: classes.cssFocused\n                    }\n                  }}\n                  InputProps={{\n                    classes: {\n                      root: classes.cssOutlinedInput,\n                      focused: classes.cssFocused,\n                      notchedOutline: classes.notchedOutline,\n                      input: classes.input\n                    }\n                  }}\n                />{\" \"}\n                <br />\n                <TextField\n                  id=\"password\"\n                  label=\"Lozinka\"\n                  type=\"password\"\n                  className={classes.textField}\n                  autoComplete=\"current-password\"\n                  variant=\"outlined\"\n                  onChange={this.handleChange}\n                  InputLabelProps={{\n                    classes: {\n                      root: classes.cssLabel,\n                      focused: classes.cssFocused\n                    }\n                  }}\n                  InputProps={{\n                    classes: {\n                      root: classes.cssOutlinedInput,\n                      focused: classes.cssFocused,\n                      notchedOutline: classes.notchedOutline,\n                      input: classes.input\n                    }\n                  }}\n                />{\" \"}\n                <br />\n                <Button className={classes.login}>Ulogiraj se</Button>\n              </form>\n              <form>\n                <Typography\n                  className={classes.reg}\n                  color=\"textSecondary\"\n                  gutterBottom\n                >\n                  Nemaš korisnički račun? registraj se{\" \"}\n                  <Button\n                    onClick={this.handleOpen}\n                    className={classes.register}\n                  >\n                    ovdje\n                  </Button>\n                </Typography>\n\n                <Modal\n                  aria-labelledby=\"simple-modal-title\"\n                  aria-describedby=\"simple-modal-description\"\n                  open={this.state.open}\n                  onClose={this.handleClose}\n                >\n                  <div style={getModalStyle()} className={classes.paper}>\n                    <Typography\n                      className={classes.title}\n                      color=\"textSecondary\"\n                      gutterBottom\n                    >\n                      Registriraj se ovdje!\n                    </Typography>\n                    <TextField\n                      name=\"ime\"\n                      label=\"Ime\"\n                      className={classes.textField}\n                      variant=\"outlined\"\n                      InputLabelProps={{\n                        classes: {\n                          root: classes.cssLabel,\n                          focused: classes.cssFocused\n                        }\n                      }}\n                      InputProps={{\n                        classes: {\n                          root: classes.cssOutlinedInput,\n                          focused: classes.cssFocused,\n                          notchedOutline: classes.notchedOutline,\n                          input: classes.input\n                        }\n                      }}\n                    />{\" \"}\n                    <br />\n                    <TextField\n                      name=\"prezime\"\n                      label=\"Prezime\"\n                      className={classes.textField}\n                      variant=\"outlined\"\n                      InputLabelProps={{\n                        classes: {\n                          root: classes.cssLabel,\n                          focused: classes.cssFocused\n                        }\n                      }}\n                      InputProps={{\n                        classes: {\n                          root: classes.cssOutlinedInput,\n                          focused: classes.cssFocused,\n                          notchedOutline: classes.notchedOutline,\n                          input: classes.input\n                        }\n                      }}\n                    />{\" \"}\n                    <br />\n                    <TextField\n                      name=\"email\"\n                      label=\"Email\"\n                      type=\"email\"\n                      className={classes.textField}\n                      variant=\"outlined\"\n                      InputLabelProps={{\n                        classes: {\n                          root: classes.cssLabel,\n                          focused: classes.cssFocused\n                        }\n                      }}\n                      InputProps={{\n                        classes: {\n                          root: classes.cssOutlinedInput,\n                          focused: classes.cssFocused,\n                          notchedOutline: classes.notchedOutline,\n                          input: classes.input\n                        }\n                      }}\n                    />{\" \"}\n                    <br />\n                    <TextField\n                      id=\"outlined-password-input\"\n                      label=\"Lozinka\"\n                      type=\"password\"\n                      className={classes.textField}\n                      autoComplete=\"current-password\"\n                      variant=\"outlined\"\n                      InputLabelProps={{\n                        classes: {\n                          root: classes.cssLabel,\n                          focused: classes.cssFocused\n                        }\n                      }}\n                      InputProps={{\n                        classes: {\n                          root: classes.cssOutlinedInput,\n                          focused: classes.cssFocused,\n                          notchedOutline: classes.notchedOutline,\n                          input: classes.input\n                        }\n                      }}\n                    />{\" \"}\n                    <br />\n                    <Button className={classes.login}>Registracija</Button>\n                  </div>\n                </Modal>\n              </form>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nSignIn.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(SignIn);\n*/","map":{"version":3,"sources":["C:\\Users\\kanto\\OneDrive\\Desktop\\blog\\src\\auth\\Login.jsx"],"names":["React","Component","SimpleBox","InputField","FooterFormButton","login","getUser","connect","ErrorAlert","Login","props","state","email","password","error","nextProps","user","undefined","history","push","event","preventDefault","catch","err","setState","errStyle","borderColor","target","value","renderBody","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport SimpleBox from \"../Components/SimpleBox\";\nimport InputField from \"../Components/InputField\";\nimport FooterFormButton from \"../Components/FooterFormButton\";\nimport { login, getUser } from \"../Actions/UserActions\";\nimport { connect } from \"react-redux\";\nimport ErrorAlert from \"../Components/ErrorAlert\";\nimport \"../Layout/Navbar.css\";\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      error: \"\"\n    };\n  }\n\n  componentWillMount() {\n    this.props.getUser();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.user.email !== undefined) {\n      this.props.history.push(\"/\");\n    }\n  }\n\n  submitLogin(event) {\n    event.preventDefault();\n    this.props.login(this.state.email, this.state.password).catch(err => {\n      this.setState({\n        error: err\n      });\n    });\n  }\n\n  renderBody() {\n    const errStyle = {\n      borderColor: \"red\"\n    };\n\n    return (\n      <div>\n        <form>\n          <div>\n            <div className=\"sticky-anchor\" />\n            <div className=\"sticky\">\n              <InputField\n                id=\"email\"\n                type=\"text\"\n                label=\"Email\"\n                inputAction={event =>\n                  this.setState({ email: event.target.value })\n                }\n                style={this.state.error ? errStyle : null}\n              />\n              <InputField\n                id=\"password\"\n                type=\"password\"\n                label=\"Password\"\n                inputAction={event =>\n                  this.setState({ password: event.target.value })\n                }\n                style={this.state.error ? errStyle : null}\n              />\n              {this.state.error && (\n                <ErrorAlert>Your username/password is incorrect</ErrorAlert>\n              )}\n              <FooterFormButton\n                submitLabel=\"Sign in\"\n                otherLabel=\"Create Account\"\n                goToLink=\"/CreateAccount\"\n                {...this.props}\n              />\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Hello</h1>\n        <div className=\"sticky-anchor\" />\n        <div className=\"sticky\">\n          <SimpleBox title=\"Sign in\" body={this.renderBody()} />\n          {this.renderBody}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return { user: state.user };\n}\n\nexport default connect(\n  mapStateToProps,\n  { login, getUser }\n)(Login);\n\n/*import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Modal from \"@material-ui/core/Modal\";\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\nconst styles = theme => ({\n  card: {\n    width: 490,\n    height: 320,\n    marginLeft: 140,\n    backgroundColor: \"#f7f7f7\"\n  },\n  tit: {\n    textDecoration: \"none\"\n  },\n  title: {\n    fontSize: 20,\n    fontFamily: \"'Montserrat', sans-serif\"\n  },\n  textField: {\n    marginLeft: 30,\n    width: 240,\n    padding: 5\n  },\n  pos: {\n    marginBottom: 12\n  },\n  reg: {\n    marginLeft: 35\n  },\n  login: {\n    fontSize: 20,\n    fontFamily: \"'Montserrat', sans-serif\",\n    marginLeft: 30,\n    color: \"#6a3499\"\n  },\n  cssLabel: {\n    \"&$cssFocused\": {\n      color: \"#6a3499\",\n      fontSize: 20\n    }\n  },\n  cssFocused: {},\n  cssUnderline: {\n    \"&:after\": {\n      borderBottomColor: \"#6a3499\"\n    }\n  },\n  cssOutlinedInput: {\n    \"&$cssFocused $notchedOutline\": {\n      borderColor: \"#6a3499\"\n    }\n  },\n  notchedOutline: {},\n  bootstrapRoot: {\n    \"label + &\": {\n      marginTop: theme.spacing.unit * 3\n    }\n  },\n  bootstrapInput: {\n    borderRadius: 6,\n    backgroundColor: \"#6a3499\",\n    border: \"1px solid #6a3499\",\n    fontSize: 16,\n    width: \"600px\",\n    padding: \"10px 12px\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"'\n    ].join(\",\"),\n    \"&:focus\": {\n      borderRadius: 6,\n      borderColor: \"#6a3499\",\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\"\n    }\n  },\n  bootstrapFormLabel: {\n    fontSize: 20\n  },\n  dense: {\n    marginTop: 25\n  },\n  input: {\n    marginLeft: 5,\n    fontSize: 20\n  },\n  paper: {\n    position: \"absolute\",\n    width: theme.spacing.unit * 50,\n    backgroundColor: \"#c0bfcc\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing.unit * 4,\n    outline: \"none\"\n  },\n  register: {\n    fontSize: 15,\n    fontFamily: \"'Montserrat', sans-serif\",\n    color: \"#6a3499\"\n  }\n});\n\nclass SignIn extends React.Component {\n  state = {\n    open: false,\n    email: \"\",\n    password: \"\"\n  };\n\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleChange = e => {\n    console.log(this.state);\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    console.log(this.state);\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div>\n        <div className=\"sticky-anchor\" />\n        <div className=\"sticky\">\n          <Card className={classes.card}>\n            <CardContent className={classes.content}>\n              <Typography color=\"textSecondary\" gutterBottom>\n                Imaš li ideju za dijeljenje svojih tips'n'tricks?\n              </Typography>\n              <Typography\n                className={classes.title}\n                color=\"textSecondary\"\n                gutterBottom\n              >\n                Prijavi se ovdje!\n              </Typography>\n              <form onSubmit={this.handleSubmit}>\n                <TextField\n                  name=\"email\"\n                  id=\"email\"\n                  type=\"email\"\n                  autoComplete=\"email\"\n                  label=\"Email\"\n                  className={classes.textField}\n                  onChange={this.handleChange}\n                  variant=\"outlined\"\n                  InputLabelProps={{\n                    classes: {\n                      root: classes.cssLabel,\n                      focused: classes.cssFocused\n                    }\n                  }}\n                  InputProps={{\n                    classes: {\n                      root: classes.cssOutlinedInput,\n                      focused: classes.cssFocused,\n                      notchedOutline: classes.notchedOutline,\n                      input: classes.input\n                    }\n                  }}\n                />{\" \"}\n                <br />\n                <TextField\n                  id=\"password\"\n                  label=\"Lozinka\"\n                  type=\"password\"\n                  className={classes.textField}\n                  autoComplete=\"current-password\"\n                  variant=\"outlined\"\n                  onChange={this.handleChange}\n                  InputLabelProps={{\n                    classes: {\n                      root: classes.cssLabel,\n                      focused: classes.cssFocused\n                    }\n                  }}\n                  InputProps={{\n                    classes: {\n                      root: classes.cssOutlinedInput,\n                      focused: classes.cssFocused,\n                      notchedOutline: classes.notchedOutline,\n                      input: classes.input\n                    }\n                  }}\n                />{\" \"}\n                <br />\n                <Button className={classes.login}>Ulogiraj se</Button>\n              </form>\n              <form>\n                <Typography\n                  className={classes.reg}\n                  color=\"textSecondary\"\n                  gutterBottom\n                >\n                  Nemaš korisnički račun? registraj se{\" \"}\n                  <Button\n                    onClick={this.handleOpen}\n                    className={classes.register}\n                  >\n                    ovdje\n                  </Button>\n                </Typography>\n\n                <Modal\n                  aria-labelledby=\"simple-modal-title\"\n                  aria-describedby=\"simple-modal-description\"\n                  open={this.state.open}\n                  onClose={this.handleClose}\n                >\n                  <div style={getModalStyle()} className={classes.paper}>\n                    <Typography\n                      className={classes.title}\n                      color=\"textSecondary\"\n                      gutterBottom\n                    >\n                      Registriraj se ovdje!\n                    </Typography>\n                    <TextField\n                      name=\"ime\"\n                      label=\"Ime\"\n                      className={classes.textField}\n                      variant=\"outlined\"\n                      InputLabelProps={{\n                        classes: {\n                          root: classes.cssLabel,\n                          focused: classes.cssFocused\n                        }\n                      }}\n                      InputProps={{\n                        classes: {\n                          root: classes.cssOutlinedInput,\n                          focused: classes.cssFocused,\n                          notchedOutline: classes.notchedOutline,\n                          input: classes.input\n                        }\n                      }}\n                    />{\" \"}\n                    <br />\n                    <TextField\n                      name=\"prezime\"\n                      label=\"Prezime\"\n                      className={classes.textField}\n                      variant=\"outlined\"\n                      InputLabelProps={{\n                        classes: {\n                          root: classes.cssLabel,\n                          focused: classes.cssFocused\n                        }\n                      }}\n                      InputProps={{\n                        classes: {\n                          root: classes.cssOutlinedInput,\n                          focused: classes.cssFocused,\n                          notchedOutline: classes.notchedOutline,\n                          input: classes.input\n                        }\n                      }}\n                    />{\" \"}\n                    <br />\n                    <TextField\n                      name=\"email\"\n                      label=\"Email\"\n                      type=\"email\"\n                      className={classes.textField}\n                      variant=\"outlined\"\n                      InputLabelProps={{\n                        classes: {\n                          root: classes.cssLabel,\n                          focused: classes.cssFocused\n                        }\n                      }}\n                      InputProps={{\n                        classes: {\n                          root: classes.cssOutlinedInput,\n                          focused: classes.cssFocused,\n                          notchedOutline: classes.notchedOutline,\n                          input: classes.input\n                        }\n                      }}\n                    />{\" \"}\n                    <br />\n                    <TextField\n                      id=\"outlined-password-input\"\n                      label=\"Lozinka\"\n                      type=\"password\"\n                      className={classes.textField}\n                      autoComplete=\"current-password\"\n                      variant=\"outlined\"\n                      InputLabelProps={{\n                        classes: {\n                          root: classes.cssLabel,\n                          focused: classes.cssFocused\n                        }\n                      }}\n                      InputProps={{\n                        classes: {\n                          root: classes.cssOutlinedInput,\n                          focused: classes.cssFocused,\n                          notchedOutline: classes.notchedOutline,\n                          input: classes.input\n                        }\n                      }}\n                    />{\" \"}\n                    <br />\n                    <Button className={classes.login}>Registracija</Button>\n                  </div>\n                </Modal>\n              </form>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nSignIn.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(SignIn);\n*/\n"]},"metadata":{},"sourceType":"module"}