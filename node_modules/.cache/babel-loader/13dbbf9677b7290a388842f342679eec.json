{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _objectSpread from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\src\\\\Quiz\\\\QuizHome.jsx\";\nimport React, { Component } from \"react\";\nimport { getPosts, savePost, deletePost } from \"../Actions/PostActions\";\nimport { Field, reduxForm, reset } from \"redux-form\";\nimport compose from \"recompose/compose\";\nimport { getUser, logout } from \"../Actions/UserActions\";\nimport { connect } from \"react-redux\";\nimport quizQuestions from \"./quizQuestions\";\nimport Quiz from \"./Quiz\";\nimport Result from \"./Result\";\nimport Navbar from \"../Layout/Navbar\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Button from \"@material-ui/core/Button\";\nimport \"../Layout/Navbar.css\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Profesionalac from \"./Profesionalac\";\nimport Amater from \"./Amater\";\nimport Pocetnik from \"./Pocetnik\";\nimport Kompaktni from \"./Kompaktni\";\nimport { Redirect } from \"react-router-dom\";\n\nvar styles = function styles(theme) {\n  return {\n    root: _objectSpread({}, theme.mixins.gutters(), {\n      paddingTop: theme.spacing.unit * 2,\n      paddingBottom: theme.spacing.unit * 2,\n      width: \"65%\",\n      marginLeft: \"10%\",\n      marginTop: \"1%\",\n      backgroundColor: \"#f8f6f7\",\n      borderRadius: \"5px\",\n      display: \" inline-block\"\n    }),\n    ima1: {\n      width: \"50%\",\n      height: \"50%\",\n      marginLeft: \"20%\"\n    },\n    header: {\n      fontSize: \"25px\",\n      color: \"rgb(115, 70, 124)\",\n      alignItems: \"center\",\n      fontFamily: \"'Montserrat', sans-serif\"\n    },\n    question: {\n      marginTop: \"5%\",\n      fontSize: 17,\n      alignItems: \"center\",\n      fontFamily: \"'Montserrat', sans-serif\"\n    },\n    menu: {\n      backgroundColor: \" rgb(115, 70, 124)\",\n      cursor: \"pointer\"\n    },\n    fab: {\n      backgroundColor: \" rgb(115, 70, 124)\",\n      fontSize: 20,\n      color: \"white\",\n      alignItems: \"center\"\n    },\n    part: {\n      padding: \"3%\",\n      border: \"1px solid rgb(115, 70, 124)\"\n    },\n    tag: {\n      fontSize: \"12px\",\n      marginLeft: \"50%\"\n    }\n  };\n};\n\nvar QuizHome =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(QuizHome, _Component);\n\n  function QuizHome(props) {\n    var _this;\n\n    _classCallCheck(this, QuizHome);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(QuizHome).call(this, props));\n\n    _this.handleClick = function (event) {\n      _this.setState({\n        anchorEl: event.currentTarget\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        anchorEl: null\n      });\n    };\n\n    _this.state = {\n      anchorEl: null,\n      counter: 0,\n      questionId: 1,\n      question: \"\",\n      answerOptions: [],\n      answer: \"\",\n      answersCount: {\n        Profesionalac: 0,\n        Amater: 0,\n        Početnik: 0,\n        Kompaktni: 0\n      },\n      result: \"\"\n    };\n    _this.handleAnswerSelected = _this.handleAnswerSelected.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(QuizHome, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      var shuffledAnswerOptions = quizQuestions.map(function (question) {\n        return _this2.shuffleArray(question.answers);\n      });\n      this.setState({\n        question: quizQuestions[0].question,\n        answerOptions: shuffledAnswerOptions[0]\n      });\n    }\n  }, {\n    key: \"shuffleArray\",\n    value: function shuffleArray(array) {\n      var currentIndex = array.length,\n          temporaryValue,\n          randomIndex; // While there remain elements to shuffle...\n\n      while (0 !== currentIndex) {\n        // Pick a remaining element...\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1; // And swap it with the current element.\n\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n      }\n\n      return array;\n    }\n  }, {\n    key: \"handleAnswerSelected\",\n    value: function handleAnswerSelected(event) {\n      var _this3 = this;\n\n      this.setUserAnswer(event.currentTarget.value);\n\n      if (this.state.questionId < quizQuestions.length) {\n        setTimeout(function () {\n          return _this3.setNextQuestion();\n        }, 300);\n      } else {\n        setTimeout(function () {\n          return _this3.setResults(_this3.getResults());\n        }, 300);\n      }\n    }\n  }, {\n    key: \"setUserAnswer\",\n    value: function setUserAnswer(answer) {\n      this.setState(function (state, props) {\n        return {\n          answersCount: _objectSpread({}, state.answersCount, _defineProperty({}, answer, state.answersCount[answer] + 1)),\n          answer: answer\n        };\n      });\n    }\n  }, {\n    key: \"setNextQuestion\",\n    value: function setNextQuestion() {\n      var counter = this.state.counter + 1;\n      var questionId = this.state.questionId + 1;\n      this.setState({\n        counter: counter,\n        questionId: questionId,\n        question: quizQuestions[counter].question,\n        answerOptions: quizQuestions[counter].answers,\n        answer: \"\"\n      });\n    }\n  }, {\n    key: \"getResults\",\n    value: function getResults() {\n      var answersCount = this.state.answersCount;\n      var answersCountKeys = Object.keys(answersCount);\n      var answersCountValues = answersCountKeys.map(function (key) {\n        return answersCount[key];\n      });\n      var maxAnswerCount = Math.max.apply(null, answersCountValues);\n      return answersCountKeys.filter(function (key) {\n        return answersCount[key] === maxAnswerCount;\n      });\n    }\n  }, {\n    key: \"setResults\",\n    value: function setResults(result) {\n      if (result.length === 1) {\n        console.log(this.state);\n        this.setState({\n          result: result[0]\n        });\n      } else {\n        this.setState({\n          result: \"Tebi odgovara bridge fotoaparat!\"\n        });\n      }\n    }\n  }, {\n    key: \"renderQuiz\",\n    value: function renderQuiz() {\n      console.log(this.state.answersCount);\n      return React.createElement(Quiz, {\n        answer: this.state.answer,\n        answerOptions: this.state.answerOptions,\n        questionId: this.state.questionId,\n        question: this.state.question,\n        questionTotal: quizQuestions.length,\n        onAnswerSelected: this.handleAnswerSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"renderResult\",\n    value: function renderResult() {\n      console.log(this.state);\n\n      if (this.state.result === \"Profesionalac\") {\n        console.log(\"true profesionalac\");\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }, \" \", React.createElement(Profesionalac, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }));\n      } else if (this.state.result === \"Amater\") {\n        console.log(\"true amater\");\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }, React.createElement(Amater, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }));\n      } else if (this.state.result === \"Početnik\") {\n        console.log(\"true početnik\");\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        }, React.createElement(Pocetnik, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        }));\n      } else if (this.state.result === \"Kompaktni\") {\n        console.log(\"true kompaktni\");\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        }, React.createElement(Kompaktni, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }));\n      } else {\n        console.log(\"sth else\");\n      }\n\n      return React.createElement(Result, {\n        quizResult: this.state.result,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var user = this.props.user;\n      if (!user.uid) return React.createElement(Redirect, {\n        to: \"/Login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      });\n      var classes = this.props.classes;\n      var anchorEl = this.state.anchorEl;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: classes.root,\n        elevation: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h5\",\n        component: \"h3\",\n        className: classes.header,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \"Koja vrsta fotoaparata je za tebe?\"), React.createElement(Typography, {\n        component: \"p\",\n        className: classes.question,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \" \", this.state.result ? this.renderResult() : this.renderQuiz())));\n    }\n  }]);\n\n  return QuizHome;\n}(Component);\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    user: state.user\n  };\n}\n\nQuizHome.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default connect(mapStateToProps, {\n  logout: logout,\n  getUser: getUser\n})(withStyles(styles)(QuizHome));","map":{"version":3,"sources":["C:\\Users\\kanto\\OneDrive\\Desktop\\blog\\src\\Quiz\\QuizHome.jsx"],"names":["React","Component","getPosts","savePost","deletePost","Field","reduxForm","reset","compose","getUser","logout","connect","quizQuestions","Quiz","Result","Navbar","NavLink","Link","Fab","Button","PropTypes","withStyles","Paper","Typography","Profesionalac","Amater","Pocetnik","Kompaktni","Redirect","styles","theme","root","mixins","gutters","paddingTop","spacing","unit","paddingBottom","width","marginLeft","marginTop","backgroundColor","borderRadius","display","ima1","height","header","fontSize","color","alignItems","fontFamily","question","menu","cursor","fab","part","padding","border","tag","QuizHome","props","handleClick","event","setState","anchorEl","currentTarget","handleClose","state","counter","questionId","answerOptions","answer","answersCount","Početnik","result","handleAnswerSelected","bind","shuffledAnswerOptions","map","shuffleArray","answers","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","setUserAnswer","value","setTimeout","setNextQuestion","setResults","getResults","answersCountKeys","Object","keys","answersCountValues","key","maxAnswerCount","max","apply","filter","console","log","user","uid","classes","renderResult","renderQuiz","mapStateToProps","ownProps","propTypes","object","isRequired"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,UAA7B,QAA+C,wBAA/C;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,KAA3B,QAAwC,YAAxC;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,wBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,OAAT,EAAkBC,IAAlB,QAA8B,kBAA9B;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAO,sBAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AACA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACvBC,IAAAA,IAAI,oBACCD,KAAK,CAACE,MAAN,CAAaC,OAAb,EADD;AAEFC,MAAAA,UAAU,EAAEJ,KAAK,CAACK,OAAN,CAAcC,IAAd,GAAqB,CAF/B;AAGFC,MAAAA,aAAa,EAAEP,KAAK,CAACK,OAAN,CAAcC,IAAd,GAAqB,CAHlC;AAIFE,MAAAA,KAAK,EAAE,KAJL;AAKFC,MAAAA,UAAU,EAAE,KALV;AAMFC,MAAAA,SAAS,EAAE,IANT;AAOFC,MAAAA,eAAe,EAAE,SAPf;AAQFC,MAAAA,YAAY,EAAE,KARZ;AASFC,MAAAA,OAAO,EAAE;AATP,MADmB;AAYvBC,IAAAA,IAAI,EAAE;AACJN,MAAAA,KAAK,EAAE,KADH;AAEJO,MAAAA,MAAM,EAAE,KAFJ;AAGJN,MAAAA,UAAU,EAAE;AAHR,KAZiB;AAiBvBO,IAAAA,MAAM,EAAE;AACNC,MAAAA,QAAQ,EAAE,MADJ;AAENC,MAAAA,KAAK,EAAE,mBAFD;AAGNC,MAAAA,UAAU,EAAE,QAHN;AAINC,MAAAA,UAAU,EAAE;AAJN,KAjBe;AAuBvBC,IAAAA,QAAQ,EAAE;AACRX,MAAAA,SAAS,EAAE,IADH;AAERO,MAAAA,QAAQ,EAAE,EAFF;AAGRE,MAAAA,UAAU,EAAE,QAHJ;AAIRC,MAAAA,UAAU,EAAE;AAJJ,KAvBa;AA6BvBE,IAAAA,IAAI,EAAE;AACJX,MAAAA,eAAe,EAAE,oBADb;AAEJY,MAAAA,MAAM,EAAE;AAFJ,KA7BiB;AAiCvBC,IAAAA,GAAG,EAAE;AACHb,MAAAA,eAAe,EAAE,oBADd;AAEHM,MAAAA,QAAQ,EAAE,EAFP;AAGHC,MAAAA,KAAK,EAAE,OAHJ;AAIHC,MAAAA,UAAU,EAAE;AAJT,KAjCkB;AAuCvBM,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAE,IADL;AAEJC,MAAAA,MAAM,EAAE;AAFJ,KAvCiB;AA2CvBC,IAAAA,GAAG,EAAE;AACHX,MAAAA,QAAQ,EAAE,MADP;AAEHR,MAAAA,UAAU,EAAE;AAFT;AA3CkB,GAAL;AAAA,CAApB;;IAgDMoB,Q;;;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;;AADiB,UAyJnBC,WAzJmB,GAyJL,UAAAC,KAAK,EAAI;AACrB,YAAKC,QAAL,CAAc;AAAEC,QAAAA,QAAQ,EAAEF,KAAK,CAACG;AAAlB,OAAd;AACD,KA3JkB;;AAAA,UA6JnBC,WA7JmB,GA6JL,YAAM;AAClB,YAAKH,QAAL,CAAc;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACD,KA/JkB;;AAGjB,UAAKG,KAAL,GAAa;AACXH,MAAAA,QAAQ,EAAE,IADC;AAEXI,MAAAA,OAAO,EAAE,CAFE;AAGXC,MAAAA,UAAU,EAAE,CAHD;AAIXlB,MAAAA,QAAQ,EAAE,EAJC;AAKXmB,MAAAA,aAAa,EAAE,EALJ;AAMXC,MAAAA,MAAM,EAAE,EANG;AAOXC,MAAAA,YAAY,EAAE;AACZhD,QAAAA,aAAa,EAAE,CADH;AAEZC,QAAAA,MAAM,EAAE,CAFI;AAGZgD,QAAAA,QAAQ,EAAE,CAHE;AAIZ9C,QAAAA,SAAS,EAAE;AAJC,OAPH;AAaX+C,MAAAA,MAAM,EAAE;AAbG,KAAb;AAgBA,UAAKC,oBAAL,GAA4B,MAAKA,oBAAL,CAA0BC,IAA1B,+BAA5B;AAnBiB;AAoBlB;;;;yCAEoB;AAAA;;AACnB,UAAMC,qBAAqB,GAAGjE,aAAa,CAACkE,GAAd,CAAkB,UAAA3B,QAAQ;AAAA,eACtD,MAAI,CAAC4B,YAAL,CAAkB5B,QAAQ,CAAC6B,OAA3B,CADsD;AAAA,OAA1B,CAA9B;AAGA,WAAKjB,QAAL,CAAc;AACZZ,QAAAA,QAAQ,EAAEvC,aAAa,CAAC,CAAD,CAAb,CAAiBuC,QADf;AAEZmB,QAAAA,aAAa,EAAEO,qBAAqB,CAAC,CAAD;AAFxB,OAAd;AAID;;;iCAEYI,K,EAAO;AAClB,UAAIC,YAAY,GAAGD,KAAK,CAACE,MAAzB;AAAA,UACEC,cADF;AAAA,UAEEC,WAFF,CADkB,CAKlB;;AACA,aAAO,MAAMH,YAAb,EAA2B;AACzB;AACAG,QAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,YAA3B,CAAd;AACAA,QAAAA,YAAY,IAAI,CAAhB,CAHyB,CAKzB;;AACAE,QAAAA,cAAc,GAAGH,KAAK,CAACC,YAAD,CAAtB;AACAD,QAAAA,KAAK,CAACC,YAAD,CAAL,GAAsBD,KAAK,CAACI,WAAD,CAA3B;AACAJ,QAAAA,KAAK,CAACI,WAAD,CAAL,GAAqBD,cAArB;AACD;;AAED,aAAOH,KAAP;AACD;;;yCAEoBnB,K,EAAO;AAAA;;AAC1B,WAAK2B,aAAL,CAAmB3B,KAAK,CAACG,aAAN,CAAoByB,KAAvC;;AAEA,UAAI,KAAKvB,KAAL,CAAWE,UAAX,GAAwBzD,aAAa,CAACuE,MAA1C,EAAkD;AAChDQ,QAAAA,UAAU,CAAC;AAAA,iBAAM,MAAI,CAACC,eAAL,EAAN;AAAA,SAAD,EAA+B,GAA/B,CAAV;AACD,OAFD,MAEO;AACLD,QAAAA,UAAU,CAAC;AAAA,iBAAM,MAAI,CAACE,UAAL,CAAgB,MAAI,CAACC,UAAL,EAAhB,CAAN;AAAA,SAAD,EAA2C,GAA3C,CAAV;AACD;AACF;;;kCAEavB,M,EAAQ;AACpB,WAAKR,QAAL,CAAc,UAACI,KAAD,EAAQP,KAAR;AAAA,eAAmB;AAC/BY,UAAAA,YAAY,oBACPL,KAAK,CAACK,YADC,sBAETD,MAFS,EAEAJ,KAAK,CAACK,YAAN,CAAmBD,MAAnB,IAA6B,CAF7B,EADmB;AAK/BA,UAAAA,MAAM,EAAEA;AALuB,SAAnB;AAAA,OAAd;AAOD;;;sCAEiB;AAChB,UAAMH,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAAX,GAAqB,CAArC;AACA,UAAMC,UAAU,GAAG,KAAKF,KAAL,CAAWE,UAAX,GAAwB,CAA3C;AAEA,WAAKN,QAAL,CAAc;AACZK,QAAAA,OAAO,EAAEA,OADG;AAEZC,QAAAA,UAAU,EAAEA,UAFA;AAGZlB,QAAAA,QAAQ,EAAEvC,aAAa,CAACwD,OAAD,CAAb,CAAuBjB,QAHrB;AAIZmB,QAAAA,aAAa,EAAE1D,aAAa,CAACwD,OAAD,CAAb,CAAuBY,OAJ1B;AAKZT,QAAAA,MAAM,EAAE;AALI,OAAd;AAOD;;;iCAEY;AACX,UAAMC,YAAY,GAAG,KAAKL,KAAL,CAAWK,YAAhC;AACA,UAAMuB,gBAAgB,GAAGC,MAAM,CAACC,IAAP,CAAYzB,YAAZ,CAAzB;AACA,UAAM0B,kBAAkB,GAAGH,gBAAgB,CAACjB,GAAjB,CAAqB,UAAAqB,GAAG;AAAA,eAAI3B,YAAY,CAAC2B,GAAD,CAAhB;AAAA,OAAxB,CAA3B;AACA,UAAMC,cAAc,GAAGd,IAAI,CAACe,GAAL,CAASC,KAAT,CAAe,IAAf,EAAqBJ,kBAArB,CAAvB;AAEA,aAAOH,gBAAgB,CAACQ,MAAjB,CAAwB,UAAAJ,GAAG;AAAA,eAAI3B,YAAY,CAAC2B,GAAD,CAAZ,KAAsBC,cAA1B;AAAA,OAA3B,CAAP;AACD;;;+BAEU1B,M,EAAQ;AACjB,UAAIA,MAAM,CAACS,MAAP,KAAkB,CAAtB,EAAyB;AACvBqB,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKtC,KAAjB;AACA,aAAKJ,QAAL,CAAc;AAAEW,UAAAA,MAAM,EAAEA,MAAM,CAAC,CAAD;AAAhB,SAAd;AACD,OAHD,MAGO;AACL,aAAKX,QAAL,CAAc;AAAEW,UAAAA,MAAM,EAAE;AAAV,SAAd;AACD;AACF;;;iCAEY;AACX8B,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKtC,KAAL,CAAWK,YAAvB;AACA,aACE,oBAAC,IAAD;AACE,QAAA,MAAM,EAAE,KAAKL,KAAL,CAAWI,MADrB;AAEE,QAAA,aAAa,EAAE,KAAKJ,KAAL,CAAWG,aAF5B;AAGE,QAAA,UAAU,EAAE,KAAKH,KAAL,CAAWE,UAHzB;AAIE,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWhB,QAJvB;AAKE,QAAA,aAAa,EAAEvC,aAAa,CAACuE,MAL/B;AAME,QAAA,gBAAgB,EAAE,KAAKR,oBANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAUD;;;mCACc;AACb6B,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKtC,KAAjB;;AACA,UAAI,KAAKA,KAAL,CAAWO,MAAX,KAAsB,eAA1B,EAA2C;AACzC8B,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,GADH,EAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,CADF;AAMD,OARD,MAQO,IAAI,KAAKtC,KAAL,CAAWO,MAAX,KAAsB,QAA1B,EAAoC;AACzC8B,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAKD,OAPM,MAOA,IAAI,KAAKtC,KAAL,CAAWO,MAAX,KAAsB,UAA1B,EAAsC;AAC3C8B,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAKD,OAPM,MAOA,IAAI,KAAKtC,KAAL,CAAWO,MAAX,KAAsB,WAA1B,EAAuC;AAC5C8B,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAKD,OAPM,MAOA;AACLD,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD;;AACD,aAAO,oBAAC,MAAD;AAAQ,QAAA,UAAU,EAAE,KAAKtC,KAAL,CAAWO,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;6BASQ;AAAA,UACCgC,IADD,GACU,KAAK9C,KADf,CACC8C,IADD;AAEP,UAAI,CAACA,IAAI,CAACC,GAAV,EAAe,OAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAFR,UAGCC,OAHD,GAGa,KAAKhD,KAHlB,CAGCgD,OAHD;AAAA,UAIC5C,QAJD,GAIc,KAAKG,KAJnB,CAICH,QAJD;AAKP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAE4C,OAAO,CAAC7E,IAA1B;AAAgC,QAAA,SAAS,EAAE,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,SAAS,EAAC,IAAnC;AAAwC,QAAA,SAAS,EAAE6E,OAAO,CAAC9D,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CADF,EAKE,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,GAAtB;AAA0B,QAAA,SAAS,EAAE8D,OAAO,CAACzD,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,GADH,EAEG,KAAKgB,KAAL,CAAWO,MAAX,GAAoB,KAAKmC,YAAL,EAApB,GAA0C,KAAKC,UAAL,EAF7C,CALF,CADF,CADF;AAcD;;;;EApLoB7G,S;;AAuLvB,SAAS8G,eAAT,CAAyB5C,KAAzB,EAAgC6C,QAAhC,EAA0C;AACxC,SAAO;AAAEN,IAAAA,IAAI,EAAEvC,KAAK,CAACuC;AAAd,GAAP;AACD;;AACD/C,QAAQ,CAACsD,SAAT,GAAqB;AACnBL,EAAAA,OAAO,EAAExF,SAAS,CAAC8F,MAAV,CAAiBC;AADP,CAArB;AAGA,eAAexG,OAAO,CACpBoG,eADoB,EAEpB;AAAErG,EAAAA,MAAM,EAANA,MAAF;AAAUD,EAAAA,OAAO,EAAPA;AAAV,CAFoB,CAAP,CAGbY,UAAU,CAACQ,MAAD,CAAV,CAAmB8B,QAAnB,CAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { getPosts, savePost, deletePost } from \"../Actions/PostActions\";\r\nimport { Field, reduxForm, reset } from \"redux-form\";\r\nimport compose from \"recompose/compose\";\r\nimport { getUser, logout } from \"../Actions/UserActions\";\r\nimport { connect } from \"react-redux\";\r\nimport quizQuestions from \"./quizQuestions\";\r\nimport Quiz from \"./Quiz\";\r\nimport Result from \"./Result\";\r\nimport Navbar from \"../Layout/Navbar\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"../Layout/Navbar.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Profesionalac from \"./Profesionalac\";\r\nimport Amater from \"./Amater\";\r\nimport Pocetnik from \"./Pocetnik\";\r\nimport Kompaktni from \"./Kompaktni\";\r\nimport { Redirect } from \"react-router-dom\";\r\nconst styles = theme => ({\r\n  root: {\r\n    ...theme.mixins.gutters(),\r\n    paddingTop: theme.spacing.unit * 2,\r\n    paddingBottom: theme.spacing.unit * 2,\r\n    width: \"65%\",\r\n    marginLeft: \"10%\",\r\n    marginTop: \"1%\",\r\n    backgroundColor: \"#f8f6f7\",\r\n    borderRadius: \"5px\",\r\n    display: \" inline-block\"\r\n  },\r\n  ima1: {\r\n    width: \"50%\",\r\n    height: \"50%\",\r\n    marginLeft: \"20%\"\r\n  },\r\n  header: {\r\n    fontSize: \"25px\",\r\n    color: \"rgb(115, 70, 124)\",\r\n    alignItems: \"center\",\r\n    fontFamily: \"'Montserrat', sans-serif\"\r\n  },\r\n  question: {\r\n    marginTop: \"5%\",\r\n    fontSize: 17,\r\n    alignItems: \"center\",\r\n    fontFamily: \"'Montserrat', sans-serif\"\r\n  },\r\n  menu: {\r\n    backgroundColor: \" rgb(115, 70, 124)\",\r\n    cursor: \"pointer\"\r\n  },\r\n  fab: {\r\n    backgroundColor: \" rgb(115, 70, 124)\",\r\n    fontSize: 20,\r\n    color: \"white\",\r\n    alignItems: \"center\"\r\n  },\r\n  part: {\r\n    padding: \"3%\",\r\n    border: \"1px solid rgb(115, 70, 124)\"\r\n  },\r\n  tag: {\r\n    fontSize: \"12px\",\r\n    marginLeft: \"50%\"\r\n  }\r\n});\r\nclass QuizHome extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      anchorEl: null,\r\n      counter: 0,\r\n      questionId: 1,\r\n      question: \"\",\r\n      answerOptions: [],\r\n      answer: \"\",\r\n      answersCount: {\r\n        Profesionalac: 0,\r\n        Amater: 0,\r\n        Početnik: 0,\r\n        Kompaktni: 0\r\n      },\r\n      result: \"\"\r\n    };\r\n\r\n    this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    const shuffledAnswerOptions = quizQuestions.map(question =>\r\n      this.shuffleArray(question.answers)\r\n    );\r\n    this.setState({\r\n      question: quizQuestions[0].question,\r\n      answerOptions: shuffledAnswerOptions[0]\r\n    });\r\n  }\r\n\r\n  shuffleArray(array) {\r\n    var currentIndex = array.length,\r\n      temporaryValue,\r\n      randomIndex;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n      // Pick a remaining element...\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n\r\n      // And swap it with the current element.\r\n      temporaryValue = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = temporaryValue;\r\n    }\r\n\r\n    return array;\r\n  }\r\n\r\n  handleAnswerSelected(event) {\r\n    this.setUserAnswer(event.currentTarget.value);\r\n\r\n    if (this.state.questionId < quizQuestions.length) {\r\n      setTimeout(() => this.setNextQuestion(), 300);\r\n    } else {\r\n      setTimeout(() => this.setResults(this.getResults()), 300);\r\n    }\r\n  }\r\n\r\n  setUserAnswer(answer) {\r\n    this.setState((state, props) => ({\r\n      answersCount: {\r\n        ...state.answersCount,\r\n        [answer]: state.answersCount[answer] + 1\r\n      },\r\n      answer: answer\r\n    }));\r\n  }\r\n\r\n  setNextQuestion() {\r\n    const counter = this.state.counter + 1;\r\n    const questionId = this.state.questionId + 1;\r\n\r\n    this.setState({\r\n      counter: counter,\r\n      questionId: questionId,\r\n      question: quizQuestions[counter].question,\r\n      answerOptions: quizQuestions[counter].answers,\r\n      answer: \"\"\r\n    });\r\n  }\r\n\r\n  getResults() {\r\n    const answersCount = this.state.answersCount;\r\n    const answersCountKeys = Object.keys(answersCount);\r\n    const answersCountValues = answersCountKeys.map(key => answersCount[key]);\r\n    const maxAnswerCount = Math.max.apply(null, answersCountValues);\r\n\r\n    return answersCountKeys.filter(key => answersCount[key] === maxAnswerCount);\r\n  }\r\n\r\n  setResults(result) {\r\n    if (result.length === 1) {\r\n      console.log(this.state);\r\n      this.setState({ result: result[0] });\r\n    } else {\r\n      this.setState({ result: \"Tebi odgovara bridge fotoaparat!\" });\r\n    }\r\n  }\r\n\r\n  renderQuiz() {\r\n    console.log(this.state.answersCount);\r\n    return (\r\n      <Quiz\r\n        answer={this.state.answer}\r\n        answerOptions={this.state.answerOptions}\r\n        questionId={this.state.questionId}\r\n        question={this.state.question}\r\n        questionTotal={quizQuestions.length}\r\n        onAnswerSelected={this.handleAnswerSelected}\r\n      />\r\n    );\r\n  }\r\n  renderResult() {\r\n    console.log(this.state);\r\n    if (this.state.result === \"Profesionalac\") {\r\n      console.log(\"true profesionalac\");\r\n      return (\r\n        <div>\r\n          {\" \"}\r\n          <Profesionalac />\r\n        </div>\r\n      );\r\n    } else if (this.state.result === \"Amater\") {\r\n      console.log(\"true amater\");\r\n      return (\r\n        <div>\r\n          <Amater />\r\n        </div>\r\n      );\r\n    } else if (this.state.result === \"Početnik\") {\r\n      console.log(\"true početnik\");\r\n      return (\r\n        <div>\r\n          <Pocetnik />\r\n        </div>\r\n      );\r\n    } else if (this.state.result === \"Kompaktni\") {\r\n      console.log(\"true kompaktni\");\r\n      return (\r\n        <div>\r\n          <Kompaktni />\r\n        </div>\r\n      );\r\n    } else {\r\n      console.log(\"sth else\");\r\n    }\r\n    return <Result quizResult={this.state.result} />;\r\n  }\r\n\r\n  handleClick = event => {\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ anchorEl: null });\r\n  };\r\n  render() {\r\n    const { user } = this.props;\r\n    if (!user.uid) return <Redirect to=\"/Login\" />;\r\n    const { classes } = this.props;\r\n    const { anchorEl } = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        <Paper className={classes.root} elevation={1}>\r\n          <Typography variant=\"h5\" component=\"h3\" className={classes.header}>\r\n            Koja vrsta fotoaparata je za tebe?\r\n          </Typography>\r\n\r\n          <Typography component=\"p\" className={classes.question}>\r\n            {\" \"}\r\n            {this.state.result ? this.renderResult() : this.renderQuiz()}\r\n          </Typography>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  return { user: state.user };\r\n}\r\nQuizHome.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logout, getUser }\r\n)(withStyles(styles)(QuizHome));\r\n"]},"metadata":{},"sourceType":"module"}