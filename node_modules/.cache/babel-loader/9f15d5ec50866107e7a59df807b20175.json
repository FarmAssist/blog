{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bindTrigger = bindTrigger;\nexports.bindToggle = bindToggle;\nexports.bindHover = bindHover;\nexports.bindPopover = bindPopover;\nexports.bindPopper = bindPopper;\nexports.default = exports.bindMenu = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n/**\n * Creates props for a component that opens the popup when clicked.\n *\n * @param {object} popupState the argument passed to the child function of\n * `PopupState`\n */\n\n\nfunction bindTrigger(_ref) {\n  var _ref2;\n\n  var isOpen = _ref.isOpen,\n      open = _ref.open,\n      popupId = _ref.popupId,\n      variant = _ref.variant;\n  return _ref2 = {}, (0, _defineProperty2.default)(_ref2, variant === 'popover' ? 'aria-owns' : 'aria-describedby', isOpen ? popupId : null), (0, _defineProperty2.default)(_ref2, 'aria-haspopup', true), (0, _defineProperty2.default)(_ref2, \"onClick\", open), _ref2;\n}\n/**\n * Creates props for a component that toggles the popup when clicked.\n *\n * @param {object} popupState the argument passed to the child function of\n * `PopupState`\n */\n\n\nfunction bindToggle(_ref3) {\n  var _ref4;\n\n  var isOpen = _ref3.isOpen,\n      toggle = _ref3.toggle,\n      popupId = _ref3.popupId,\n      variant = _ref3.variant;\n  return _ref4 = {}, (0, _defineProperty2.default)(_ref4, variant === 'popover' ? 'aria-owns' : 'aria-describedby', isOpen ? popupId : null), (0, _defineProperty2.default)(_ref4, 'aria-haspopup', true), (0, _defineProperty2.default)(_ref4, \"onClick\", toggle), _ref4;\n}\n/**\n * Creates props for a component that opens the popup while hovered.\n *\n * @param {object} popupState the argument passed to the child function of\n * `PopupState`\n */\n\n\nfunction bindHover(_ref5) {\n  var _ref6;\n\n  var isOpen = _ref5.isOpen,\n      open = _ref5.open,\n      onMouseLeave = _ref5.onMouseLeave,\n      popupId = _ref5.popupId,\n      variant = _ref5.variant;\n  return _ref6 = {}, (0, _defineProperty2.default)(_ref6, variant === 'popover' ? 'aria-owns' : 'aria-describedby', isOpen ? popupId : null), (0, _defineProperty2.default)(_ref6, 'aria-haspopup', true), (0, _defineProperty2.default)(_ref6, \"onMouseEnter\", open), (0, _defineProperty2.default)(_ref6, \"onMouseLeave\", onMouseLeave), _ref6;\n}\n/**\n * Creates props for a `Popover` component.\n *\n * @param {object} popupState the argument passed to the child function of\n * `PopupState`\n */\n\n\nfunction bindPopover(_ref7) {\n  var isOpen = _ref7.isOpen,\n      anchorEl = _ref7.anchorEl,\n      close = _ref7.close,\n      onMouseLeave = _ref7.onMouseLeave,\n      popupId = _ref7.popupId;\n  return {\n    id: popupId,\n    anchorEl: anchorEl,\n    open: isOpen,\n    onClose: close,\n    onMouseLeave: onMouseLeave\n  };\n}\n/**\n * Creates props for a `Menu` component.\n *\n * @param {object} popupState the argument passed to the child function of\n * `PopupState`\n */\n\n\nvar bindMenu = bindPopover;\n/**\n * Creates props for a `Popper` component.\n *\n * @param {object} popupState the argument passed to the child function of\n * `PopupState`\n */\n\nexports.bindMenu = bindMenu;\n\nfunction bindPopper(_ref8) {\n  var isOpen = _ref8.isOpen,\n      anchorEl = _ref8.anchorEl,\n      popupId = _ref8.popupId,\n      onMouseLeave = _ref8.onMouseLeave;\n  return {\n    id: popupId,\n    anchorEl: anchorEl,\n    open: isOpen,\n    onMouseLeave: onMouseLeave\n  };\n}\n\nvar eventOrAnchorElWarned = false;\n\nvar PopupState =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2.default)(PopupState, _React$Component);\n\n  function PopupState() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2.default)(this, PopupState);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(PopupState)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"state\", {\n      anchorEl: null,\n      hovered: false\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"handleToggle\", function (eventOrAnchorEl) {\n      if (_this.state.anchorEl) _this.handleClose();else _this.handleOpen(eventOrAnchorEl);\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"handleOpen\", function (eventOrAnchorEl) {\n      if (!eventOrAnchorElWarned && !eventOrAnchorEl) {\n        eventOrAnchorElWarned = true;\n        console.error('eventOrAnchorEl should be defined'); // eslint-disable-line no-console\n      }\n\n      _this.setState({\n        anchorEl: eventOrAnchorEl && eventOrAnchorEl.currentTarget ? eventOrAnchorEl.currentTarget : eventOrAnchorEl,\n        hovered: eventOrAnchorEl.type === 'mouseenter'\n      });\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"handleClose\", function () {\n      return _this.setState({\n        anchorEl: null,\n        hovered: false\n      });\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"handleMouseLeave\", function (event) {\n      var popupId = _this.props.popupId;\n      var _this$state = _this.state,\n          hovered = _this$state.hovered,\n          anchorEl = _this$state.anchorEl;\n      var popup = popupId && typeof document !== 'undefined' ? document.getElementById(popupId) // eslint-disable-line no-undef\n      : null;\n      var _ref9 = event,\n          relatedTarget = _ref9.relatedTarget;\n\n      if (hovered && !isAncestor(popup, relatedTarget) && !isAncestor(anchorEl, relatedTarget)) {\n        _this.handleClose();\n      }\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"handleSetOpen\", function (open, eventOrAnchorEl) {\n      if (open) _this.handleOpen(eventOrAnchorEl);else _this.handleClose();\n    });\n    return _this;\n  }\n\n  (0, _createClass2.default)(PopupState, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          popupId = _this$props.popupId,\n          variant = _this$props.variant;\n      var anchorEl = this.state.anchorEl;\n      var isOpen = Boolean(anchorEl);\n      var result = children({\n        open: this.handleOpen,\n        close: this.handleClose,\n        onMouseLeave: this.handleMouseLeave,\n        toggle: this.handleToggle,\n        setOpen: this.handleSetOpen,\n        isOpen: isOpen,\n        anchorEl: anchorEl,\n        popupId: popupId,\n        variant: variant\n      });\n      if (result == null) return null;\n      return result;\n    }\n  }]);\n  return PopupState;\n}(React.Component);\n\nexports.default = PopupState;\n(0, _defineProperty2.default)(PopupState, \"propTypes\", {\n  /**\n   * The render function.\n   *\n   * @param {object} props the properties injected by `PopupState`:\n   * <ul>\n   *   <li>`open(eventOrAnchorEl)`: opens the popup</li>\n   *   <li>`close()`: closes the popup</li>\n   *   <li>`toggle(eventOrAnchorEl)`: opens the popup if it is closed, or\n   *     closes the popup if it is open.\n   *   </li>\n   *   <li>`setOpen(open, [eventOrAnchorEl])`: sets whether the popup is open.\n   *     `eventOrAnchorEl` is required if `open` is truthy.\n   *   </li>\n   *   <li>`isOpen`: `true`/`false` if the popup is open/closed</li>\n   *   <li>`anchorEl`: the current anchor element (`null` the popup is closed)</li>\n   *   <li>`popupId`: the `popupId` prop you passed</li>\n   * </ul>\n   *\n   * @returns {React.Node} the content to display\n   */\n  children: _propTypes.default.func.isRequired,\n\n  /**\n   * The `id` property to use for the popup.  Will be passed to the render\n   * function as `bindPopup.id`, and also used for the `aria-owns` property\n   * passed to the trigger component via `bindTrigger`.\n   */\n  popupId: _propTypes.default.string,\n\n  /**\n   * Which type of popup you are controlling.  Use `'popover'` for `Popover`\n   * and `Menu`; use `'popper'` for `Popper`s.  Right now this only affects\n   * whether `aria-owns` or `aria-describedby` is used on the trigger\n   * component.\n   */\n  variant: _propTypes.default.oneOf(['popover', 'popper']).isRequired\n});\n\nfunction isAncestor(parent, child) {\n  if (!parent) return false;\n\n  while (child) {\n    if (child === parent) return true;\n    child = child.parentElement;\n  }\n\n  return false;\n}","map":null,"metadata":{},"sourceType":"script"}