{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\src\\\\Dashboard\\\\Dashboard.jsx\";\nimport React, { Component } from \"react\";\nimport ListPosts from \"../Container/ListPosts\";\nimport Login from \"../auth/Login\";\nimport { connect } from \"react-redux\";\nimport { getPosts, savePost, deletePost } from \"../Actions/PostActions\";\nimport { Field, reduxForm, reset } from \"redux-form\";\nimport _ from \"lodash\";\nimport PostCard from \"../Components/PostCard\";\nimport { getUser, logout } from \"../Actions/UserActions\";\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard() {\n    _classCallCheck(this, Dashboard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).apply(this, arguments));\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.getPosts();\n      this.props.getUser();\n\n      if (this.props.user.loading === false && this.props.user.email === undefined) {\n        this.props.history.replace(\"/Login\");\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.user.loading === false && nextProps.user.email === undefined) {\n        this.props.history.replace(\"/Login\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col s12 m6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(ListPosts, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Login, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nDashboard = connect(function (state, ownProps) {\n  return {\n    posts: state.posts\n  };\n}, {\n  savePost: savePost,\n  getPosts: getPosts,\n  deletePost: deletePost\n})(Dashboard);\nexport default Dashboard;","map":{"version":3,"sources":["C:\\Users\\kanto\\OneDrive\\Desktop\\blog\\src\\Dashboard\\Dashboard.jsx"],"names":["React","Component","ListPosts","Login","connect","getPosts","savePost","deletePost","Field","reduxForm","reset","_","PostCard","getUser","logout","Dashboard","props","user","loading","email","undefined","history","replace","nextProps","state","ownProps","posts"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,UAA7B,QAA+C,wBAA/C;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,KAA3B,QAAwC,YAAxC;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,wBAAhC;;IAEMC,S;;;;;;;;;;;;;yCACiB;AACnB,WAAKC,KAAL,CAAWX,QAAX;AACA,WAAKW,KAAL,CAAWH,OAAX;;AACA,UACE,KAAKG,KAAL,CAAWC,IAAX,CAAgBC,OAAhB,KAA4B,KAA5B,IACA,KAAKF,KAAL,CAAWC,IAAX,CAAgBE,KAAhB,KAA0BC,SAF5B,EAGE;AACA,aAAKJ,KAAL,CAAWK,OAAX,CAAmBC,OAAnB,CAA2B,QAA3B;AACD;AACF;;;8CAEyBC,S,EAAW;AACnC,UACEA,SAAS,CAACN,IAAV,CAAeC,OAAf,KAA2B,KAA3B,IACAK,SAAS,CAACN,IAAV,CAAeE,KAAf,KAAyBC,SAF3B,EAGE;AACA,aAAKJ,KAAL,CAAWK,OAAX,CAAmBC,OAAnB,CAA2B,QAA3B;AACD;AACF;;;6BACQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CALF,CADF,CADF;AAaD;;;;EAlCqBrB,S;;AAqCxBc,SAAS,GAAGX,OAAO,CACjB,UAACoB,KAAD,EAAQC,QAAR;AAAA,SAAsB;AACpBC,IAAAA,KAAK,EAAEF,KAAK,CAACE;AADO,GAAtB;AAAA,CADiB,EAIjB;AAAEpB,EAAAA,QAAQ,EAARA,QAAF;AAAYD,EAAAA,QAAQ,EAARA,QAAZ;AAAsBE,EAAAA,UAAU,EAAVA;AAAtB,CAJiB,CAAP,CAKVQ,SALU,CAAZ;AAOA,eAAeA,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport ListPosts from \"../Container/ListPosts\";\nimport Login from \"../auth/Login\";\nimport { connect } from \"react-redux\";\nimport { getPosts, savePost, deletePost } from \"../Actions/PostActions\";\nimport { Field, reduxForm, reset } from \"redux-form\";\nimport _ from \"lodash\";\nimport PostCard from \"../Components/PostCard\";\nimport { getUser, logout } from \"../Actions/UserActions\";\n\nclass Dashboard extends Component {\n  componentWillMount() {\n    this.props.getPosts();\n    this.props.getUser();\n    if (\n      this.props.user.loading === false &&\n      this.props.user.email === undefined\n    ) {\n      this.props.history.replace(\"/Login\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      nextProps.user.loading === false &&\n      nextProps.user.email === undefined\n    ) {\n      this.props.history.replace(\"/Login\");\n    }\n  }\n  render() {\n    return (\n      <div>\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <ListPosts />\n          </div>\n\n          <div>\n            <Login />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard = connect(\n  (state, ownProps) => ({\n    posts: state.posts\n  }),\n  { savePost, getPosts, deletePost }\n)(Dashboard);\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}