{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\src\\\\auth\\\\Login.jsx\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport SimpleBox from \"../Components/SimpleBox\";\nimport InputField from \"../Components/InputField\";\nimport FooterFormButton from \"../Components/FooterFormButton\";\nimport { login, getUser } from \"../Actions/UserActions\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\nimport PostCard from \"../Components/PostCard\";\nimport ErrorAlert from \"../Components/ErrorAlert\";\nimport \"../Layout/Navbar.css\";\nimport Home from \"../Container/Home\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Modal from \"@material-ui/core/Modal\";\n\nvar styles = function styles(theme) {\n  return {\n    card: {\n      width: 490,\n      height: 320,\n      marginLeft: 600,\n      marginTop: \"-45%\"\n    },\n    tit: {\n      textDecoration: \"none\"\n    },\n    title: {\n      fontSize: 20,\n      fontFamily: \"'Montserrat', sans-serif\"\n    },\n    textField: {\n      marginLeft: 30,\n      width: 240,\n      padding: 5\n    },\n    pos: {\n      marginBottom: 12\n    },\n    reg: {\n      marginLeft: 35\n    },\n    login: {\n      fontSize: 20,\n      fontFamily: \"'Montserrat', sans-serif\",\n      marginLeft: 30,\n      color: \" ##003300\"\n    },\n    cssLabel: {\n      \"&$cssFocused\": {\n        color: \" ##003300\",\n        fontSize: 20\n      }\n    },\n    cssFocused: {},\n    cssUnderline: {\n      \"&:after\": {\n        borderBottomColor: \" ##003300\"\n      }\n    },\n    cssOutlinedInput: {\n      \"&$cssFocused $notchedOutline\": {\n        borderColor: \" ##003300\"\n      }\n    },\n    notchedOutline: {},\n    bootstrapRoot: {\n      \"label + &\": {\n        marginTop: theme.spacing.unit * 3\n      }\n    },\n    bootstrapInput: {\n      borderRadius: 6,\n      backgroundColor: \" ##003300\",\n      border: \"1px solid  ##003300\",\n      fontSize: 16,\n      width: \"600px\",\n      padding: \"10px 12px\",\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n      // Use the system font instead of the default Roboto font.\n      fontFamily: [\"-apple-system\", \"BlinkMacSystemFont\", '\"Segoe UI\"', \"Roboto\", '\"Helvetica Neue\"', \"Arial\", \"sans-serif\", '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(\",\"),\n      \"&:focus\": {\n        borderRadius: 6,\n        borderColor: \" ##003300\",\n        boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\"\n      }\n    },\n    bootstrapFormLabel: {\n      fontSize: 20\n    },\n    dense: {\n      marginTop: 25\n    },\n    input: {\n      marginLeft: 5,\n      fontSize: 20\n    },\n    paper: {\n      position: \"absolute\",\n      width: theme.spacing.unit * 50,\n      backgroundColor: \"#c0bfcc\",\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing.unit * 4,\n      outline: \"none\"\n    },\n    register: {\n      fontSize: 15,\n      fontFamily: \"'Montserrat', sans-serif\",\n      color: \" ##003300\"\n    }\n  };\n};\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n    _this.state = {\n      email: \"\",\n      password: \"\",\n      error: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.getUser();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.user.email !== undefined) {\n        this.props.history.push(\"/\");\n      }\n    }\n  }, {\n    key: \"submitLogin\",\n    value: function submitLogin(event) {\n      var _this2 = this;\n\n      event.preventDefault();\n      this.props.login(this.state.email, this.state.password).catch(function (err) {\n        _this2.setState({\n          error: err\n        });\n      });\n    }\n  }, {\n    key: \"renderBody\",\n    value: function renderBody() {\n      var _this3 = this;\n\n      var errStyle = {\n        borderColor: \"red\"\n      };\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        className: \"bg-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: function onSubmit(event) {\n          _this3.submitLogin(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: classes.title,\n        color: \"textSecondary\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"Prijavi se ovdje!\"), React.createElement(TextField, {\n        name: \"email\",\n        id: \"email\",\n        type: \"text \",\n        autoComplete: \"email\",\n        label: \"Email\",\n        inputAction: function inputAction(event) {\n          return _this3.setState({\n            email: event.target.value\n          });\n        },\n        style: this.state.error ? errStyle : null,\n        className: classes.textField,\n        variant: \"outlined\",\n        InputLabelProps: {\n          classes: {\n            root: classes.cssLabel,\n            focused: classes.cssFocused\n          }\n        },\n        InputProps: {\n          classes: {\n            root: classes.cssOutlinedInput,\n            focused: classes.cssFocused,\n            notchedOutline: classes.notchedOutline,\n            input: classes.input\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"password\",\n        label: \"Lozinka\",\n        type: \"password\",\n        inputAction: function inputAction(event) {\n          return _this3.setState({\n            password: event.target.value\n          });\n        },\n        style: this.state.error ? errStyle : null,\n        className: classes.textField,\n        autoComplete: \"current-password\",\n        variant: \"outlined\",\n        InputLabelProps: {\n          classes: {\n            root: classes.cssLabel,\n            focused: classes.cssFocused\n          }\n        },\n        InputProps: {\n          classes: {\n            root: classes.cssOutlinedInput,\n            focused: classes.cssFocused,\n            notchedOutline: classes.notchedOutline,\n            input: classes.input\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }), this.state.error && React.createElement(ErrorAlert, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"Your username/password is incorrect\"), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }), \" \", React.createElement(Button, Object.assign({\n        className: classes.login\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }), \"Ulogiraj se\"), React.createElement(FooterFormButton, Object.assign({\n        className: classes.login,\n        submitLabel: \"Sign in\",\n        otherLabel: \"Create Account\",\n        goToLink: \"/CreateAccount\"\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }), \" \")));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(Home, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }), React.createElement(SimpleBox, {\n        body: this.renderBody(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nLogin.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default connect(mapStateToProps, {\n  login: login,\n  getUser: getUser\n})(withStyles(styles)(Login));\n/*import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Modal from \"@material-ui/core/Modal\";\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\nconst styles = theme => ({\n  card: {\n    width: 490,\n    height: 320,\n    marginLeft: 140,\n    backgroundColor: \"#f7f7f7\"\n  },\n  tit: {\n    textDecoration: \"none\"\n  },\n  title: {\n    fontSize: 20,\n    fontFamily: \"'Montserrat', sans-serif\"\n  },\n  textField: {\n    marginLeft: 30,\n    width: 240,\n    padding: 5\n  },\n  pos: {\n    marginBottom: 12\n  },\n  reg: {\n    marginLeft: 35\n  },\n  login: {\n    fontSize: 20,\n    fontFamily: \"'Montserrat', sans-serif\",\n    marginLeft: 30,\n    color: \"#6a3499\"\n  },\n  cssLabel: {\n    \"&$cssFocused\": {\n      color: \"#6a3499\",\n      fontSize: 20\n    }\n  },\n  cssFocused: {},\n  cssUnderline: {\n    \"&:after\": {\n      borderBottomColor: \"#6a3499\"\n    }\n  },\n  cssOutlinedInput: {\n    \"&$cssFocused $notchedOutline\": {\n      borderColor: \"#6a3499\"\n    }\n  },\n  notchedOutline: {},\n  bootstrapRoot: {\n    \"label + &\": {\n      marginTop: theme.spacing.unit * 3\n    }\n  },\n  bootstrapInput: {\n    borderRadius: 6,\n    backgroundColor: \"#6a3499\",\n    border: \"1px solid #6a3499\",\n    fontSize: 16,\n    width: \"600px\",\n    padding: \"10px 12px\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"'\n    ].join(\",\"),\n    \"&:focus\": {\n      borderRadius: 6,\n      borderColor: \"#6a3499\",\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\"\n    }\n  },\n  bootstrapFormLabel: {\n    fontSize: 20\n  },\n  dense: {\n    marginTop: 25\n  },\n  input: {\n    marginLeft: 5,\n    fontSize: 20\n  },\n  paper: {\n    position: \"absolute\",\n    width: theme.spacing.unit * 50,\n    backgroundColor: \"#c0bfcc\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing.unit * 4,\n    outline: \"none\"\n  },\n  register: {\n    fontSize: 15,\n    fontFamily: \"'Montserrat', sans-serif\",\n    color: \"#6a3499\"\n  }\n});\n\nclass SignIn extends React.Component {\n  state = {\n    open: false,\n    email: \"\",\n    password: \"\"\n  };\n\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleChange = e => {\n    console.log(this.state);\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    console.log(this.state);\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div>\n        <div className=\"sticky-anchor\" />\n        <div className=\"sticky\">\n          <Card className={classes.card}>\n            <CardContent className={classes.content}>\n              <Typography color=\"textSecondary\" gutterBottom>\n                Imaš li ideju za dijeljenje svojih tips'n'tricks?\n              </Typography>\n              <Typography\n                className={classes.title}\n                color=\"textSecondary\"\n                gutterBottom\n              >\n                Prijavi se ovdje!\n              </Typography>\n              <form onSubmit={this.handleSubmit}>\n                <TextField\n                  name=\"email\"\n                  id=\"email\"\n                  type=\"email\"\n                  autoComplete=\"email\"\n                  label=\"Email\"\n                  className={classes.textField}\n                  onChange={this.handleChange}\n                  variant=\"outlined\"\n                  InputLabelProps={{\n                    classes: {\n                      root: classes.cssLabel,\n                      focused: classes.cssFocused\n                    }\n                  }}\n                  InputProps={{\n                    classes: {\n                      root: classes.cssOutlinedInput,\n                      focused: classes.cssFocused,\n                      notchedOutline: classes.notchedOutline,\n                      input: classes.input\n                    }\n                  }}\n                />{\" \"}\n                <br />\n                <TextField\n                  id=\"password\"\n                  label=\"Lozinka\"\n                  type=\"password\"\n                  className={classes.textField}\n                  autoComplete=\"current-password\"\n                  variant=\"outlined\"\n                  onChange={this.handleChange}\n                  InputLabelProps={{\n                    classes: {\n                      root: classes.cssLabel,\n                      focused: classes.cssFocused\n                    }\n                  }}\n                  InputProps={{\n                    classes: {\n                      root: classes.cssOutlinedInput,\n                      focused: classes.cssFocused,\n                      notchedOutline: classes.notchedOutline,\n                      input: classes.input\n                    }\n                  }}\n                />{\" \"}\n                <br />\n                <Button className={classes.login}>Ulogiraj se</Button>\n              </form>\n              <form>\n                <Typography\n                  className={classes.reg}\n                  color=\"textSecondary\"\n                  gutterBottom\n                >\n                  Nemaš korisnički račun? registraj se{\" \"}\n                  <Button\n                    onClick={this.handleOpen}\n                    className={classes.register}\n                  >\n                    ovdje\n                  </Button>\n                </Typography>\n\n                <Modal\n                  aria-labelledby=\"simple-modal-title\"\n                  aria-describedby=\"simple-modal-description\"\n                  open={this.state.open}\n                  onClose={this.handleClose}\n                >\n                  <div style={getModalStyle()} className={classes.paper}>\n                    <Typography\n                      className={classes.title}\n                      color=\"textSecondary\"\n                      gutterBottom\n                    >\n                      Registriraj se ovdje!\n                    </Typography>\n                    <TextField\n                      name=\"ime\"\n                      label=\"Ime\"\n                      className={classes.textField}\n                      variant=\"outlined\"\n                      InputLabelProps={{\n                        classes: {\n                          root: classes.cssLabel,\n                          focused: classes.cssFocused\n                        }\n                      }}\n                      InputProps={{\n                        classes: {\n                          root: classes.cssOutlinedInput,\n                          focused: classes.cssFocused,\n                          notchedOutline: classes.notchedOutline,\n                          input: classes.input\n                        }\n                      }}\n                    />{\" \"}\n                    <br />\n                    <TextField\n                      name=\"prezime\"\n                      label=\"Prezime\"\n                      className={classes.textField}\n                      variant=\"outlined\"\n                      InputLabelProps={{\n                        classes: {\n                          root: classes.cssLabel,\n                          focused: classes.cssFocused\n                        }\n                      }}\n                      InputProps={{\n                        classes: {\n                          root: classes.cssOutlinedInput,\n                          focused: classes.cssFocused,\n                          notchedOutline: classes.notchedOutline,\n                          input: classes.input\n                        }\n                      }}\n                    />{\" \"}\n                    <br />\n                    <TextField\n                      name=\"email\"\n                      label=\"Email\"\n                      type=\"email\"\n                      className={classes.textField}\n                      variant=\"outlined\"\n                      InputLabelProps={{\n                        classes: {\n                          root: classes.cssLabel,\n                          focused: classes.cssFocused\n                        }\n                      }}\n                      InputProps={{\n                        classes: {\n                          root: classes.cssOutlinedInput,\n                          focused: classes.cssFocused,\n                          notchedOutline: classes.notchedOutline,\n                          input: classes.input\n                        }\n                      }}\n                    />{\" \"}\n                    <br />\n                    <TextField\n                      id=\"outlined-password-input\"\n                      label=\"Lozinka\"\n                      type=\"password\"\n                      className={classes.textField}\n                      autoComplete=\"current-password\"\n                      variant=\"outlined\"\n                      InputLabelProps={{\n                        classes: {\n                          root: classes.cssLabel,\n                          focused: classes.cssFocused\n                        }\n                      }}\n                      InputProps={{\n                        classes: {\n                          root: classes.cssOutlinedInput,\n                          focused: classes.cssFocused,\n                          notchedOutline: classes.notchedOutline,\n                          input: classes.input\n                        }\n                      }}\n                    />{\" \"}\n                    <br />\n                    <Button className={classes.login}>Registracija</Button>\n                  </div>\n                </Modal>\n              </form>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nSignIn.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(SignIn);\n*/","map":{"version":3,"sources":["C:\\Users\\kanto\\OneDrive\\Desktop\\blog\\src\\auth\\Login.jsx"],"names":["React","Component","PropTypes","withStyles","SimpleBox","InputField","FooterFormButton","login","getUser","connect","_","PostCard","ErrorAlert","Home","Card","CardContent","Button","Typography","TextField","Modal","styles","theme","card","width","height","marginLeft","marginTop","tit","textDecoration","title","fontSize","fontFamily","textField","padding","pos","marginBottom","reg","color","cssLabel","cssFocused","cssUnderline","borderBottomColor","cssOutlinedInput","borderColor","notchedOutline","bootstrapRoot","spacing","unit","bootstrapInput","borderRadius","backgroundColor","border","transition","transitions","create","join","boxShadow","bootstrapFormLabel","dense","input","paper","position","shadows","outline","register","Login","props","state","email","password","error","nextProps","user","undefined","history","push","event","preventDefault","catch","err","setState","errStyle","classes","submitLogin","target","value","root","focused","renderBody","mapStateToProps","propTypes","object","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,SAASC,KAAT,EAAgBC,OAAhB,QAA+B,wBAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAO,sBAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;;AACA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACvBC,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAE,GADH;AAEJC,MAAAA,MAAM,EAAE,GAFJ;AAGJC,MAAAA,UAAU,EAAE,GAHR;AAIJC,MAAAA,SAAS,EAAE;AAJP,KADiB;AAQvBC,IAAAA,GAAG,EAAE;AACHC,MAAAA,cAAc,EAAE;AADb,KARkB;AAWvBC,IAAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAE,EADL;AAELC,MAAAA,UAAU,EAAE;AAFP,KAXgB;AAevBC,IAAAA,SAAS,EAAE;AACTP,MAAAA,UAAU,EAAE,EADH;AAETF,MAAAA,KAAK,EAAE,GAFE;AAGTU,MAAAA,OAAO,EAAE;AAHA,KAfY;AAoBvBC,IAAAA,GAAG,EAAE;AACHC,MAAAA,YAAY,EAAE;AADX,KApBkB;AAuBvBC,IAAAA,GAAG,EAAE;AACHX,MAAAA,UAAU,EAAE;AADT,KAvBkB;AA0BvBlB,IAAAA,KAAK,EAAE;AACLuB,MAAAA,QAAQ,EAAE,EADL;AAELC,MAAAA,UAAU,EAAE,0BAFP;AAGLN,MAAAA,UAAU,EAAE,EAHP;AAILY,MAAAA,KAAK,EAAE;AAJF,KA1BgB;AAgCvBC,IAAAA,QAAQ,EAAE;AACR,sBAAgB;AACdD,QAAAA,KAAK,EAAE,WADO;AAEdP,QAAAA,QAAQ,EAAE;AAFI;AADR,KAhCa;AAsCvBS,IAAAA,UAAU,EAAE,EAtCW;AAuCvBC,IAAAA,YAAY,EAAE;AACZ,iBAAW;AACTC,QAAAA,iBAAiB,EAAE;AADV;AADC,KAvCS;AA4CvBC,IAAAA,gBAAgB,EAAE;AAChB,sCAAgC;AAC9BC,QAAAA,WAAW,EAAE;AADiB;AADhB,KA5CK;AAiDvBC,IAAAA,cAAc,EAAE,EAjDO;AAkDvBC,IAAAA,aAAa,EAAE;AACb,mBAAa;AACXnB,QAAAA,SAAS,EAAEL,KAAK,CAACyB,OAAN,CAAcC,IAAd,GAAqB;AADrB;AADA,KAlDQ;AAuDvBC,IAAAA,cAAc,EAAE;AACdC,MAAAA,YAAY,EAAE,CADA;AAEdC,MAAAA,eAAe,EAAE,WAFH;AAGdC,MAAAA,MAAM,EAAE,qBAHM;AAIdrB,MAAAA,QAAQ,EAAE,EAJI;AAKdP,MAAAA,KAAK,EAAE,OALO;AAMdU,MAAAA,OAAO,EAAE,WANK;AAOdmB,MAAAA,UAAU,EAAE/B,KAAK,CAACgC,WAAN,CAAkBC,MAAlB,CAAyB,CAAC,cAAD,EAAiB,YAAjB,CAAzB,CAPE;AAQd;AACAvB,MAAAA,UAAU,EAAE,CACV,eADU,EAEV,oBAFU,EAGV,YAHU,EAIV,QAJU,EAKV,kBALU,EAMV,OANU,EAOV,YAPU,EAQV,qBARU,EASV,kBATU,EAUV,mBAVU,EAWVwB,IAXU,CAWL,GAXK,CATE;AAqBd,iBAAW;AACTN,QAAAA,YAAY,EAAE,CADL;AAETN,QAAAA,WAAW,EAAE,WAFJ;AAGTa,QAAAA,SAAS,EAAE;AAHF;AArBG,KAvDO;AAkFvBC,IAAAA,kBAAkB,EAAE;AAClB3B,MAAAA,QAAQ,EAAE;AADQ,KAlFG;AAqFvB4B,IAAAA,KAAK,EAAE;AACLhC,MAAAA,SAAS,EAAE;AADN,KArFgB;AAwFvBiC,IAAAA,KAAK,EAAE;AACLlC,MAAAA,UAAU,EAAE,CADP;AAELK,MAAAA,QAAQ,EAAE;AAFL,KAxFgB;AA4FvB8B,IAAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAE,UADL;AAELtC,MAAAA,KAAK,EAAEF,KAAK,CAACyB,OAAN,CAAcC,IAAd,GAAqB,EAFvB;AAGLG,MAAAA,eAAe,EAAE,SAHZ;AAILM,MAAAA,SAAS,EAAEnC,KAAK,CAACyC,OAAN,CAAc,CAAd,CAJN;AAKL7B,MAAAA,OAAO,EAAEZ,KAAK,CAACyB,OAAN,CAAcC,IAAd,GAAqB,CALzB;AAMLgB,MAAAA,OAAO,EAAE;AANJ,KA5FgB;AAoGvBC,IAAAA,QAAQ,EAAE;AACRlC,MAAAA,QAAQ,EAAE,EADF;AAERC,MAAAA,UAAU,EAAE,0BAFJ;AAGRM,MAAAA,KAAK,EAAE;AAHC;AApGa,GAAL;AAAA,CAApB;;IA0GM4B,K;;;;;AACJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAFiB;AAOlB;;;;yCAEoB;AACnB,WAAKJ,KAAL,CAAW1D,OAAX;AACD;;;8CAEyB+D,S,EAAW;AACnC,UAAIA,SAAS,CAACC,IAAV,CAAeJ,KAAf,KAAyBK,SAA7B,EAAwC;AACtC,aAAKP,KAAL,CAAWQ,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD;AACF;;;gCAEWC,K,EAAO;AAAA;;AACjBA,MAAAA,KAAK,CAACC,cAAN;AACA,WAAKX,KAAL,CAAW3D,KAAX,CAAiB,KAAK4D,KAAL,CAAWC,KAA5B,EAAmC,KAAKD,KAAL,CAAWE,QAA9C,EAAwDS,KAAxD,CAA8D,UAAAC,GAAG,EAAI;AACnE,QAAA,MAAI,CAACC,QAAL,CAAc;AACZV,UAAAA,KAAK,EAAES;AADK,SAAd;AAGD,OAJD;AAKD;;;iCAEY;AAAA;;AACX,UAAME,QAAQ,GAAG;AACftC,QAAAA,WAAW,EAAE;AADE,OAAjB;AADW,UAIHuC,OAJG,GAIS,KAAKhB,KAJd,CAIHgB,OAJG;AAKX,aACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,QAAQ,EAAE,kBAAAN,KAAK,EAAI;AACjB,UAAA,MAAI,CAACO,WAAL,CAAiBP,KAAjB;AACD,SAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,UAAD;AACE,QAAA,SAAS,EAAEM,OAAO,CAACrD,KADrB;AAEE,QAAA,KAAK,EAAC,eAFR;AAGE,QAAA,YAAY,MAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BALF,EAYE,oBAAC,SAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,EAAE,EAAC,OAFL;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,YAAY,EAAC,OAJf;AAKE,QAAA,KAAK,EAAC,OALR;AAME,QAAA,WAAW,EAAE,qBAAA+C,KAAK;AAAA,iBAAI,MAAI,CAACI,QAAL,CAAc;AAAEZ,YAAAA,KAAK,EAAEQ,KAAK,CAACQ,MAAN,CAAaC;AAAtB,WAAd,CAAJ;AAAA,SANpB;AAOE,QAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWG,KAAX,GAAmBW,QAAnB,GAA8B,IAPvC;AAQE,QAAA,SAAS,EAAEC,OAAO,CAAClD,SARrB;AASE,QAAA,OAAO,EAAC,UATV;AAUE,QAAA,eAAe,EAAE;AACfkD,UAAAA,OAAO,EAAE;AACPI,YAAAA,IAAI,EAAEJ,OAAO,CAAC5C,QADP;AAEPiD,YAAAA,OAAO,EAAEL,OAAO,CAAC3C;AAFV;AADM,SAVnB;AAgBE,QAAA,UAAU,EAAE;AACV2C,UAAAA,OAAO,EAAE;AACPI,YAAAA,IAAI,EAAEJ,OAAO,CAACxC,gBADP;AAEP6C,YAAAA,OAAO,EAAEL,OAAO,CAAC3C,UAFV;AAGPK,YAAAA,cAAc,EAAEsC,OAAO,CAACtC,cAHjB;AAIPe,YAAAA,KAAK,EAAEuB,OAAO,CAACvB;AAJR;AADC,SAhBd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZF,EAoCK,GApCL,EAqCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QArCF,EAsCE,oBAAC,SAAD;AACE,QAAA,EAAE,EAAC,UADL;AAEE,QAAA,KAAK,EAAC,SAFR;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,WAAW,EAAE,qBAAAiB,KAAK;AAAA,iBAChB,MAAI,CAACI,QAAL,CAAc;AAAEX,YAAAA,QAAQ,EAAEO,KAAK,CAACQ,MAAN,CAAaC;AAAzB,WAAd,CADgB;AAAA,SAJpB;AAOE,QAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWG,KAAX,GAAmBW,QAAnB,GAA8B,IAPvC;AAQE,QAAA,SAAS,EAAEC,OAAO,CAAClD,SARrB;AASE,QAAA,YAAY,EAAC,kBATf;AAUE,QAAA,OAAO,EAAC,UAVV;AAWE,QAAA,eAAe,EAAE;AACfkD,UAAAA,OAAO,EAAE;AACPI,YAAAA,IAAI,EAAEJ,OAAO,CAAC5C,QADP;AAEPiD,YAAAA,OAAO,EAAEL,OAAO,CAAC3C;AAFV;AADM,SAXnB;AAiBE,QAAA,UAAU,EAAE;AACV2C,UAAAA,OAAO,EAAE;AACPI,YAAAA,IAAI,EAAEJ,OAAO,CAACxC,gBADP;AAEP6C,YAAAA,OAAO,EAAEL,OAAO,CAAC3C,UAFV;AAGPK,YAAAA,cAAc,EAAEsC,OAAO,CAACtC,cAHjB;AAIPe,YAAAA,KAAK,EAAEuB,OAAO,CAACvB;AAJR;AADC,SAjBd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAtCF,EA+DK,GA/DL,EAgEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhEF,EAiEG,KAAKQ,KAAL,CAAWG,KAAX,IACC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAlEJ,EAmEK,GAnEL,EAoEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QApEF,EAoES,GApET,EAqEE,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAEY,OAAO,CAAC3E;AAA3B,SAAsC,KAAK2D,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBArEF,EAwEE,oBAAC,gBAAD;AACE,QAAA,SAAS,EAAEgB,OAAO,CAAC3E,KADrB;AAEE,QAAA,WAAW,EAAC,SAFd;AAGE,QAAA,UAAU,EAAC,gBAHb;AAIE,QAAA,QAAQ,EAAC;AAJX,SAKM,KAAK2D,KALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAOG,GAPH,CAxEF,CADF,CADF;AAsFD;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAE,KAAKsB,UAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;;;EAjIiBvF,S;;AAoIpB,SAASwF,eAAT,CAAyBtB,KAAzB,EAAgC;AAC9B,SAAO;AAAEK,IAAAA,IAAI,EAAEL,KAAK,CAACK;AAAd,GAAP;AACD;;AACDP,KAAK,CAACyB,SAAN,GAAkB;AAChBR,EAAAA,OAAO,EAAEhF,SAAS,CAACyF,MAAV,CAAiBC;AADV,CAAlB;AAGA,eAAenF,OAAO,CACpBgF,eADoB,EAEpB;AAAElF,EAAAA,KAAK,EAALA,KAAF;AAASC,EAAAA,OAAO,EAAPA;AAAT,CAFoB,CAAP,CAGbL,UAAU,CAACiB,MAAD,CAAV,CAAmB6C,KAAnB,CAHa,CAAf;AAKA","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport SimpleBox from \"../Components/SimpleBox\";\nimport InputField from \"../Components/InputField\";\nimport FooterFormButton from \"../Components/FooterFormButton\";\nimport { login, getUser } from \"../Actions/UserActions\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\nimport PostCard from \"../Components/PostCard\";\nimport ErrorAlert from \"../Components/ErrorAlert\";\nimport \"../Layout/Navbar.css\";\nimport Home from \"../Container/Home\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Modal from \"@material-ui/core/Modal\";\nconst styles = theme => ({\n  card: {\n    width: 490,\n    height: 320,\n    marginLeft: 600,\n    marginTop: \"-45%\"\n  },\n\n  tit: {\n    textDecoration: \"none\"\n  },\n  title: {\n    fontSize: 20,\n    fontFamily: \"'Montserrat', sans-serif\"\n  },\n  textField: {\n    marginLeft: 30,\n    width: 240,\n    padding: 5\n  },\n  pos: {\n    marginBottom: 12\n  },\n  reg: {\n    marginLeft: 35\n  },\n  login: {\n    fontSize: 20,\n    fontFamily: \"'Montserrat', sans-serif\",\n    marginLeft: 30,\n    color: \" ##003300\"\n  },\n  cssLabel: {\n    \"&$cssFocused\": {\n      color: \" ##003300\",\n      fontSize: 20\n    }\n  },\n  cssFocused: {},\n  cssUnderline: {\n    \"&:after\": {\n      borderBottomColor: \" ##003300\"\n    }\n  },\n  cssOutlinedInput: {\n    \"&$cssFocused $notchedOutline\": {\n      borderColor: \" ##003300\"\n    }\n  },\n  notchedOutline: {},\n  bootstrapRoot: {\n    \"label + &\": {\n      marginTop: theme.spacing.unit * 3\n    }\n  },\n  bootstrapInput: {\n    borderRadius: 6,\n    backgroundColor: \" ##003300\",\n    border: \"1px solid  ##003300\",\n    fontSize: 16,\n    width: \"600px\",\n    padding: \"10px 12px\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"'\n    ].join(\",\"),\n    \"&:focus\": {\n      borderRadius: 6,\n      borderColor: \" ##003300\",\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\"\n    }\n  },\n  bootstrapFormLabel: {\n    fontSize: 20\n  },\n  dense: {\n    marginTop: 25\n  },\n  input: {\n    marginLeft: 5,\n    fontSize: 20\n  },\n  paper: {\n    position: \"absolute\",\n    width: theme.spacing.unit * 50,\n    backgroundColor: \"#c0bfcc\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing.unit * 4,\n    outline: \"none\"\n  },\n  register: {\n    fontSize: 15,\n    fontFamily: \"'Montserrat', sans-serif\",\n    color: \" ##003300\"\n  }\n});\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      error: \"\"\n    };\n  }\n\n  componentWillMount() {\n    this.props.getUser();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.user.email !== undefined) {\n      this.props.history.push(\"/\");\n    }\n  }\n\n  submitLogin(event) {\n    event.preventDefault();\n    this.props.login(this.state.email, this.state.password).catch(err => {\n      this.setState({\n        error: err\n      });\n    });\n  }\n\n  renderBody() {\n    const errStyle = {\n      borderColor: \"red\"\n    };\n    const { classes } = this.props;\n    return (\n      <div className=\"bg-text\">\n        <form\n          onSubmit={event => {\n            this.submitLogin(event);\n          }}\n        >\n          <Typography\n            className={classes.title}\n            color=\"textSecondary\"\n            gutterBottom\n          >\n            Prijavi se ovdje!\n          </Typography>\n          <TextField\n            name=\"email\"\n            id=\"email\"\n            type=\"text \"\n            autoComplete=\"email\"\n            label=\"Email\"\n            inputAction={event => this.setState({ email: event.target.value })}\n            style={this.state.error ? errStyle : null}\n            className={classes.textField}\n            variant=\"outlined\"\n            InputLabelProps={{\n              classes: {\n                root: classes.cssLabel,\n                focused: classes.cssFocused\n              }\n            }}\n            InputProps={{\n              classes: {\n                root: classes.cssOutlinedInput,\n                focused: classes.cssFocused,\n                notchedOutline: classes.notchedOutline,\n                input: classes.input\n              }\n            }}\n          />{\" \"}\n          <br />\n          <TextField\n            id=\"password\"\n            label=\"Lozinka\"\n            type=\"password\"\n            inputAction={event =>\n              this.setState({ password: event.target.value })\n            }\n            style={this.state.error ? errStyle : null}\n            className={classes.textField}\n            autoComplete=\"current-password\"\n            variant=\"outlined\"\n            InputLabelProps={{\n              classes: {\n                root: classes.cssLabel,\n                focused: classes.cssFocused\n              }\n            }}\n            InputProps={{\n              classes: {\n                root: classes.cssOutlinedInput,\n                focused: classes.cssFocused,\n                notchedOutline: classes.notchedOutline,\n                input: classes.input\n              }\n            }}\n          />{\" \"}\n          <br />\n          {this.state.error && (\n            <ErrorAlert>Your username/password is incorrect</ErrorAlert>\n          )}{\" \"}\n          <br />{\" \"}\n          <Button className={classes.login} {...this.props}>\n            Ulogiraj se\n          </Button>\n          <FooterFormButton\n            className={classes.login}\n            submitLabel=\"Sign in\"\n            otherLabel=\"Create Account\"\n            goToLink=\"/CreateAccount\"\n            {...this.props}\n          >\n            {\" \"}\n          </FooterFormButton>\n        </form>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <Home />\n        <SimpleBox body={this.renderBody()} />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return { user: state.user };\n}\nLogin.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default connect(\n  mapStateToProps,\n  { login, getUser }\n)(withStyles(styles)(Login));\n\n/*import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Modal from \"@material-ui/core/Modal\";\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\nconst styles = theme => ({\n  card: {\n    width: 490,\n    height: 320,\n    marginLeft: 140,\n    backgroundColor: \"#f7f7f7\"\n  },\n  tit: {\n    textDecoration: \"none\"\n  },\n  title: {\n    fontSize: 20,\n    fontFamily: \"'Montserrat', sans-serif\"\n  },\n  textField: {\n    marginLeft: 30,\n    width: 240,\n    padding: 5\n  },\n  pos: {\n    marginBottom: 12\n  },\n  reg: {\n    marginLeft: 35\n  },\n  login: {\n    fontSize: 20,\n    fontFamily: \"'Montserrat', sans-serif\",\n    marginLeft: 30,\n    color: \"#6a3499\"\n  },\n  cssLabel: {\n    \"&$cssFocused\": {\n      color: \"#6a3499\",\n      fontSize: 20\n    }\n  },\n  cssFocused: {},\n  cssUnderline: {\n    \"&:after\": {\n      borderBottomColor: \"#6a3499\"\n    }\n  },\n  cssOutlinedInput: {\n    \"&$cssFocused $notchedOutline\": {\n      borderColor: \"#6a3499\"\n    }\n  },\n  notchedOutline: {},\n  bootstrapRoot: {\n    \"label + &\": {\n      marginTop: theme.spacing.unit * 3\n    }\n  },\n  bootstrapInput: {\n    borderRadius: 6,\n    backgroundColor: \"#6a3499\",\n    border: \"1px solid #6a3499\",\n    fontSize: 16,\n    width: \"600px\",\n    padding: \"10px 12px\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"'\n    ].join(\",\"),\n    \"&:focus\": {\n      borderRadius: 6,\n      borderColor: \"#6a3499\",\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\"\n    }\n  },\n  bootstrapFormLabel: {\n    fontSize: 20\n  },\n  dense: {\n    marginTop: 25\n  },\n  input: {\n    marginLeft: 5,\n    fontSize: 20\n  },\n  paper: {\n    position: \"absolute\",\n    width: theme.spacing.unit * 50,\n    backgroundColor: \"#c0bfcc\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing.unit * 4,\n    outline: \"none\"\n  },\n  register: {\n    fontSize: 15,\n    fontFamily: \"'Montserrat', sans-serif\",\n    color: \"#6a3499\"\n  }\n});\n\nclass SignIn extends React.Component {\n  state = {\n    open: false,\n    email: \"\",\n    password: \"\"\n  };\n\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleChange = e => {\n    console.log(this.state);\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    console.log(this.state);\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div>\n        <div className=\"sticky-anchor\" />\n        <div className=\"sticky\">\n          <Card className={classes.card}>\n            <CardContent className={classes.content}>\n              <Typography color=\"textSecondary\" gutterBottom>\n                Imaš li ideju za dijeljenje svojih tips'n'tricks?\n              </Typography>\n              <Typography\n                className={classes.title}\n                color=\"textSecondary\"\n                gutterBottom\n              >\n                Prijavi se ovdje!\n              </Typography>\n              <form onSubmit={this.handleSubmit}>\n                <TextField\n                  name=\"email\"\n                  id=\"email\"\n                  type=\"email\"\n                  autoComplete=\"email\"\n                  label=\"Email\"\n                  className={classes.textField}\n                  onChange={this.handleChange}\n                  variant=\"outlined\"\n                  InputLabelProps={{\n                    classes: {\n                      root: classes.cssLabel,\n                      focused: classes.cssFocused\n                    }\n                  }}\n                  InputProps={{\n                    classes: {\n                      root: classes.cssOutlinedInput,\n                      focused: classes.cssFocused,\n                      notchedOutline: classes.notchedOutline,\n                      input: classes.input\n                    }\n                  }}\n                />{\" \"}\n                <br />\n                <TextField\n                  id=\"password\"\n                  label=\"Lozinka\"\n                  type=\"password\"\n                  className={classes.textField}\n                  autoComplete=\"current-password\"\n                  variant=\"outlined\"\n                  onChange={this.handleChange}\n                  InputLabelProps={{\n                    classes: {\n                      root: classes.cssLabel,\n                      focused: classes.cssFocused\n                    }\n                  }}\n                  InputProps={{\n                    classes: {\n                      root: classes.cssOutlinedInput,\n                      focused: classes.cssFocused,\n                      notchedOutline: classes.notchedOutline,\n                      input: classes.input\n                    }\n                  }}\n                />{\" \"}\n                <br />\n                <Button className={classes.login}>Ulogiraj se</Button>\n              </form>\n              <form>\n                <Typography\n                  className={classes.reg}\n                  color=\"textSecondary\"\n                  gutterBottom\n                >\n                  Nemaš korisnički račun? registraj se{\" \"}\n                  <Button\n                    onClick={this.handleOpen}\n                    className={classes.register}\n                  >\n                    ovdje\n                  </Button>\n                </Typography>\n\n                <Modal\n                  aria-labelledby=\"simple-modal-title\"\n                  aria-describedby=\"simple-modal-description\"\n                  open={this.state.open}\n                  onClose={this.handleClose}\n                >\n                  <div style={getModalStyle()} className={classes.paper}>\n                    <Typography\n                      className={classes.title}\n                      color=\"textSecondary\"\n                      gutterBottom\n                    >\n                      Registriraj se ovdje!\n                    </Typography>\n                    <TextField\n                      name=\"ime\"\n                      label=\"Ime\"\n                      className={classes.textField}\n                      variant=\"outlined\"\n                      InputLabelProps={{\n                        classes: {\n                          root: classes.cssLabel,\n                          focused: classes.cssFocused\n                        }\n                      }}\n                      InputProps={{\n                        classes: {\n                          root: classes.cssOutlinedInput,\n                          focused: classes.cssFocused,\n                          notchedOutline: classes.notchedOutline,\n                          input: classes.input\n                        }\n                      }}\n                    />{\" \"}\n                    <br />\n                    <TextField\n                      name=\"prezime\"\n                      label=\"Prezime\"\n                      className={classes.textField}\n                      variant=\"outlined\"\n                      InputLabelProps={{\n                        classes: {\n                          root: classes.cssLabel,\n                          focused: classes.cssFocused\n                        }\n                      }}\n                      InputProps={{\n                        classes: {\n                          root: classes.cssOutlinedInput,\n                          focused: classes.cssFocused,\n                          notchedOutline: classes.notchedOutline,\n                          input: classes.input\n                        }\n                      }}\n                    />{\" \"}\n                    <br />\n                    <TextField\n                      name=\"email\"\n                      label=\"Email\"\n                      type=\"email\"\n                      className={classes.textField}\n                      variant=\"outlined\"\n                      InputLabelProps={{\n                        classes: {\n                          root: classes.cssLabel,\n                          focused: classes.cssFocused\n                        }\n                      }}\n                      InputProps={{\n                        classes: {\n                          root: classes.cssOutlinedInput,\n                          focused: classes.cssFocused,\n                          notchedOutline: classes.notchedOutline,\n                          input: classes.input\n                        }\n                      }}\n                    />{\" \"}\n                    <br />\n                    <TextField\n                      id=\"outlined-password-input\"\n                      label=\"Lozinka\"\n                      type=\"password\"\n                      className={classes.textField}\n                      autoComplete=\"current-password\"\n                      variant=\"outlined\"\n                      InputLabelProps={{\n                        classes: {\n                          root: classes.cssLabel,\n                          focused: classes.cssFocused\n                        }\n                      }}\n                      InputProps={{\n                        classes: {\n                          root: classes.cssOutlinedInput,\n                          focused: classes.cssFocused,\n                          notchedOutline: classes.notchedOutline,\n                          input: classes.input\n                        }\n                      }}\n                    />{\" \"}\n                    <br />\n                    <Button className={classes.login}>Registracija</Button>\n                  </div>\n                </Modal>\n              </form>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nSignIn.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(SignIn);\n*/\n"]},"metadata":{},"sourceType":"module"}