{"ast":null,"code":"import { auth, database, googleProvider, storage } from \"../Firebase\";\nexport var GET_USER = \"get_user\";\nexport var GET_DB_USERS = \"get_db_users\";\nexport var USER_STATUS = \"user_status\";\nexport var USER_DB_STATUS = \"user_db_status\";\nexport function getUser() {\n  return function (dispatch) {\n    dispatch({\n      type: USER_STATUS,\n      payload: true\n    });\n    auth.onAuthStateChanged(function (user) {\n      dispatch({\n        type: GET_USER,\n        payload: user\n      });\n      dispatch({\n        type: USER_STATUS,\n        payload: false\n      });\n    });\n  };\n}\n/*export function getDbUsers() {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: USER_DB_STATUS,\r\n      payload: true\r\n    });\r\n    database.ref(\"users\").on(\"value\", db => {\r\n      dispatch({\r\n        type: GET_DB_USERS,\r\n        payload: db.val()\r\n      });\r\n      dispatch({\r\n        type: USER_DB_STATUS,\r\n        payload: false\r\n      });\r\n    });\r\n  };\r\n}*/\n\nexport function login(email, password) {\n  return function (dispatch) {\n    return auth.signInWithEmailAndPassword(email, password);\n  };\n}\nexport function logout() {\n  return function (dispatch) {\n    return auth.signOut();\n  };\n}\nexport function createAccount(data) {\n  var fname = data.fname,\n      lname = data.lname,\n      email = data.email,\n      password = data.password;\n  return function (dispatch) {\n    return auth.createUserWithEmailAndPassword(fname, lname, email, password);\n  };\n}\nexport function googleLogin() {\n  return function (dispatch) {\n    return auth.signInWithPopup(googleProvider);\n  };\n}","map":{"version":3,"sources":["C:\\Users\\kanto\\OneDrive\\Desktop\\blog\\src\\Actions\\UserActions.jsx"],"names":["auth","database","googleProvider","storage","GET_USER","GET_DB_USERS","USER_STATUS","USER_DB_STATUS","getUser","dispatch","type","payload","onAuthStateChanged","user","login","email","password","signInWithEmailAndPassword","logout","signOut","createAccount","data","fname","lname","createUserWithEmailAndPassword","googleLogin","signInWithPopup"],"mappings":"AAAA,SAASA,IAAT,EAAeC,QAAf,EAAyBC,cAAzB,EAAyCC,OAAzC,QAAwD,aAAxD;AAEA,OAAO,IAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,IAAMC,YAAY,GAAG,cAArB;AACP,OAAO,IAAMC,WAAW,GAAG,aAApB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,SAASC,OAAT,GAAmB;AACxB,SAAO,UAAAC,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,WADC;AAEPK,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAIAX,IAAAA,IAAI,CAACY,kBAAL,CAAwB,UAAAC,IAAI,EAAI;AAC9BJ,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEN,QADC;AAEPO,QAAAA,OAAO,EAAEE;AAFF,OAAD,CAAR;AAIAJ,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEJ,WADC;AAEPK,QAAAA,OAAO,EAAE;AAFF,OAAD,CAAR;AAID,KATD;AAUD,GAfD;AAgBD;AACD;;;;;;;;;;;;;;;;;;;AAmBA,OAAO,SAASG,KAAT,CAAeC,KAAf,EAAsBC,QAAtB,EAAgC;AACrC,SAAO,UAAAP,QAAQ;AAAA,WAAIT,IAAI,CAACiB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAJ;AAAA,GAAf;AACD;AAED,OAAO,SAASE,MAAT,GAAkB;AACvB,SAAO,UAAAT,QAAQ;AAAA,WAAIT,IAAI,CAACmB,OAAL,EAAJ;AAAA,GAAf;AACD;AAED,OAAO,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAAA,MAC1BC,KAD0B,GACQD,IADR,CAC1BC,KAD0B;AAAA,MACnBC,KADmB,GACQF,IADR,CACnBE,KADmB;AAAA,MACZR,KADY,GACQM,IADR,CACZN,KADY;AAAA,MACLC,QADK,GACQK,IADR,CACLL,QADK;AAElC,SAAO,UAAAP,QAAQ;AAAA,WACbT,IAAI,CAACwB,8BAAL,CAAoCF,KAApC,EAA2CC,KAA3C,EAAkDR,KAAlD,EAAyDC,QAAzD,CADa;AAAA,GAAf;AAED;AAED,OAAO,SAASS,WAAT,GAAuB;AAC5B,SAAO,UAAAhB,QAAQ;AAAA,WAAIT,IAAI,CAAC0B,eAAL,CAAqBxB,cAArB,CAAJ;AAAA,GAAf;AACD","sourcesContent":["import { auth, database, googleProvider, storage } from \"../Firebase\";\r\n\r\nexport const GET_USER = \"get_user\";\r\nexport const GET_DB_USERS = \"get_db_users\";\r\nexport const USER_STATUS = \"user_status\";\r\nexport const USER_DB_STATUS = \"user_db_status\";\r\nexport function getUser() {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: USER_STATUS,\r\n      payload: true\r\n    });\r\n    auth.onAuthStateChanged(user => {\r\n      dispatch({\r\n        type: GET_USER,\r\n        payload: user\r\n      });\r\n      dispatch({\r\n        type: USER_STATUS,\r\n        payload: false\r\n      });\r\n    });\r\n  };\r\n}\r\n/*export function getDbUsers() {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: USER_DB_STATUS,\r\n      payload: true\r\n    });\r\n    database.ref(\"users\").on(\"value\", db => {\r\n      dispatch({\r\n        type: GET_DB_USERS,\r\n        payload: db.val()\r\n      });\r\n      dispatch({\r\n        type: USER_DB_STATUS,\r\n        payload: false\r\n      });\r\n    });\r\n  };\r\n}*/\r\n\r\nexport function login(email, password) {\r\n  return dispatch => auth.signInWithEmailAndPassword(email, password);\r\n}\r\n\r\nexport function logout() {\r\n  return dispatch => auth.signOut();\r\n}\r\n\r\nexport function createAccount(data) {\r\n  const { fname, lname, email, password } = data;\r\n  return dispatch =>\r\n    auth.createUserWithEmailAndPassword(fname, lname, email, password);\r\n}\r\n\r\nexport function googleLogin() {\r\n  return dispatch => auth.signInWithPopup(googleProvider);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}