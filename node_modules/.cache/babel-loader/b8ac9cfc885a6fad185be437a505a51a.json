{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\src\\\\Container\\\\AddComment.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm, reset } from \"redux-form\";\nimport { saveComment } from \"../Actions/PostActions\";\nimport { required } from \"../Helpers/ReduxFormValidation\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport _ from \"lodash\";\nimport \"../Layout/Navbar.css\";\nimport TextField from \"@material-ui/core/TextField\";\n\nvar styles = function styles(theme) {\n  return {\n    card: {\n      width: 490,\n      height: 320,\n      marginLeft: 600,\n      marginTop: \"-45%\"\n    },\n    tit: {\n      textDecoration: \"none\"\n    },\n    title: {\n      fontSize: 20,\n      fontFamily: \"'Montserrat', sans-serif\"\n    },\n    textField: {\n      marginLeft: 30,\n      width: 240,\n      padding: 5\n    },\n    pos: {\n      marginBottom: 12\n    },\n    reg: {\n      marginLeft: 35\n    },\n    login: {\n      fontSize: 20,\n      fontFamily: \"'Montserrat', sans-serif\",\n      marginLeft: 30,\n      color: \" #003300\"\n    },\n    cssLabel: {\n      \"&$cssFocused\": {\n        color: \" #003300\",\n        fontSize: 20\n      }\n    },\n    cssFocused: {},\n    cssUnderline: {\n      \"&:after\": {\n        borderBottomColor: \" #003300\"\n      }\n    },\n    cssOutlinedInput: {\n      \"&$cssFocused $notchedOutline\": {\n        borderColor: \" #003300\"\n      }\n    },\n    notchedOutline: {},\n    bootstrapRoot: {\n      \"label + &\": {\n        marginTop: theme.spacing.unit * 3\n      }\n    },\n    bootstrapInput: {\n      borderRadius: 6,\n      backgroundColor: \" #003300\",\n      border: \"1px solid  #003300\",\n      fontSize: 16,\n      width: \"600px\",\n      padding: \"10px 12px\",\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n      // Use the system font instead of the default Roboto font.\n      fontFamily: [\"-apple-system\", \"BlinkMacSystemFont\", '\"Segoe UI\"', \"Roboto\", '\"Helvetica Neue\"', \"Arial\", \"sans-serif\", '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(\",\"),\n      \"&:focus\": {\n        borderRadius: 6,\n        borderColor: \" #003300\",\n        boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\"\n      }\n    },\n    bootstrapFormLabel: {\n      fontSize: 20\n    },\n    dense: {\n      marginTop: 25\n    },\n    input: {\n      marginLeft: 5,\n      fontSize: 20\n    },\n    paper: {\n      position: \"absolute\",\n      width: theme.spacing.unit * 50,\n      backgroundColor: \"#757e75e1 !important\",\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing.unit * 4,\n      outline: \"none\"\n    },\n    register: {\n      fontSize: 15,\n      fontFamily: \"'Montserrat', sans-serif\",\n      color: \" #003300\"\n    }\n  };\n};\n\nvar AddComment =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddComment, _Component);\n\n  function AddComment() {\n    _classCallCheck(this, AddComment);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AddComment).apply(this, arguments));\n  }\n\n  _createClass(AddComment, [{\n    key: \"onSubmit\",\n    value: function onSubmit(values) {\n      var _this = this;\n\n      this.props.saveComment(values, this.props.id, this.props.uid).then(function () {\n        _this.props.dispatch(reset(\"CreateCommentForm\"));\n      });\n    }\n  }, {\n    key: \"renderComment\",\n    value: function renderComment(field) {\n      var _field$meta = field.meta,\n          touched = _field$meta.touched,\n          error = _field$meta.error;\n      var errStyle = {\n        borderColor: \"red\"\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"textarea\", Object.assign({\n        className: \"form-control\",\n        style: touched && error ? errStyle : null\n      }, field.input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _React$createElement;\n\n      var _this$props = this.props,\n          handleSubmit = _this$props.handleSubmit,\n          classes = _this$props.classes;\n      return React.createElement(\"form\", {\n        onSubmit: handleSubmit(this.onSubmit.bind(this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(TextField, (_React$createElement = {\n        className: classes.textField,\n        autoComplete: \"current-password\",\n        variant: \"outlined\",\n        InputLabelProps: {\n          classes: {\n            root: classes.cssLabel,\n            focused: classes.cssFocused\n          }\n        },\n        InputProps: {\n          classes: {\n            root: classes.cssOutlinedInput,\n            focused: classes.cssFocused,\n            notchedOutline: classes.notchedOutline,\n            input: classes.input\n          }\n        }\n      }, _defineProperty(_React$createElement, \"className\", \"form-control\"), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement)), React.createElement(Field, {\n        name: \"content\",\n        label: \"Upi\\u0161i svoj komentar...\",\n        component: this.renderComment,\n        validate: required,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"name\",\n        label: \"Ime/username \",\n        component: this.renderComment,\n        validate: required,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"d-flex justify-content-end mt-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"Save\")));\n    }\n  }]);\n\n  return AddComment;\n}(Component);\n\nAddComment.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default reduxForm({\n  form: \"CreateCommentForm\"\n})(connect(function (state, ownProps) {\n  return {\n    uid: state.user.uid\n  };\n}, {\n  saveComment: saveComment\n})(withStyles(styles))(AddComment));","map":{"version":3,"sources":["C:\\Users\\kanto\\OneDrive\\Desktop\\blog\\src\\Container\\AddComment.jsx"],"names":["React","Component","connect","Field","reduxForm","reset","saveComment","required","PropTypes","withStyles","_","TextField","styles","theme","card","width","height","marginLeft","marginTop","tit","textDecoration","title","fontSize","fontFamily","textField","padding","pos","marginBottom","reg","login","color","cssLabel","cssFocused","cssUnderline","borderBottomColor","cssOutlinedInput","borderColor","notchedOutline","bootstrapRoot","spacing","unit","bootstrapInput","borderRadius","backgroundColor","border","transition","transitions","create","join","boxShadow","bootstrapFormLabel","dense","input","paper","position","shadows","outline","register","AddComment","values","props","id","uid","then","dispatch","field","meta","touched","error","errStyle","handleSubmit","classes","onSubmit","bind","root","focused","renderComment","propTypes","object","isRequired","form","state","ownProps","user"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm, reset } from \"redux-form\";\r\nimport { saveComment } from \"../Actions/PostActions\";\r\nimport { required } from \"../Helpers/ReduxFormValidation\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport _ from \"lodash\";\r\nimport \"../Layout/Navbar.css\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst styles = theme => ({\r\n  card: {\r\n    width: 490,\r\n    height: 320,\r\n    marginLeft: 600,\r\n    marginTop: \"-45%\"\r\n  },\r\n\r\n  tit: {\r\n    textDecoration: \"none\"\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontFamily: \"'Montserrat', sans-serif\"\r\n  },\r\n  textField: {\r\n    marginLeft: 30,\r\n    width: 240,\r\n    padding: 5\r\n  },\r\n  pos: {\r\n    marginBottom: 12\r\n  },\r\n  reg: {\r\n    marginLeft: 35\r\n  },\r\n  login: {\r\n    fontSize: 20,\r\n    fontFamily: \"'Montserrat', sans-serif\",\r\n    marginLeft: 30,\r\n    color: \" #003300\"\r\n  },\r\n  cssLabel: {\r\n    \"&$cssFocused\": {\r\n      color: \" #003300\",\r\n      fontSize: 20\r\n    }\r\n  },\r\n  cssFocused: {},\r\n  cssUnderline: {\r\n    \"&:after\": {\r\n      borderBottomColor: \" #003300\"\r\n    }\r\n  },\r\n  cssOutlinedInput: {\r\n    \"&$cssFocused $notchedOutline\": {\r\n      borderColor: \" #003300\"\r\n    }\r\n  },\r\n  notchedOutline: {},\r\n  bootstrapRoot: {\r\n    \"label + &\": {\r\n      marginTop: theme.spacing.unit * 3\r\n    }\r\n  },\r\n  bootstrapInput: {\r\n    borderRadius: 6,\r\n    backgroundColor: \" #003300\",\r\n    border: \"1px solid  #003300\",\r\n    fontSize: 16,\r\n    width: \"600px\",\r\n    padding: \"10px 12px\",\r\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"'\r\n    ].join(\",\"),\r\n    \"&:focus\": {\r\n      borderRadius: 6,\r\n      borderColor: \" #003300\",\r\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\"\r\n    }\r\n  },\r\n  bootstrapFormLabel: {\r\n    fontSize: 20\r\n  },\r\n  dense: {\r\n    marginTop: 25\r\n  },\r\n  input: {\r\n    marginLeft: 5,\r\n    fontSize: 20\r\n  },\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: theme.spacing.unit * 50,\r\n    backgroundColor: \"#757e75e1 !important\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing.unit * 4,\r\n    outline: \"none\"\r\n  },\r\n  register: {\r\n    fontSize: 15,\r\n    fontFamily: \"'Montserrat', sans-serif\",\r\n    color: \" #003300\"\r\n  }\r\n});\r\n\r\nclass AddComment extends Component {\r\n  onSubmit(values) {\r\n    this.props.saveComment(values, this.props.id, this.props.uid).then(() => {\r\n      this.props.dispatch(reset(\"CreateCommentForm\"));\r\n    });\r\n  }\r\n\r\n  renderComment(field) {\r\n    const {\r\n      meta: { touched, error }\r\n    } = field;\r\n    const errStyle = {\r\n      borderColor: \"red\"\r\n    };\r\n    return (\r\n      <div>\r\n        <textarea\r\n          className=\"form-control\"\r\n          style={touched && error ? errStyle : null}\r\n          {...field.input}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { handleSubmit, classes } = this.props;\r\n    return (\r\n      <form onSubmit={handleSubmit(this.onSubmit.bind(this))}>\r\n        <TextField\r\n          className={classes.textField}\r\n          autoComplete=\"current-password\"\r\n          variant=\"outlined\"\r\n          InputLabelProps={{\r\n            classes: {\r\n              root: classes.cssLabel,\r\n              focused: classes.cssFocused\r\n            }\r\n          }}\r\n          InputProps={{\r\n            classes: {\r\n              root: classes.cssOutlinedInput,\r\n              focused: classes.cssFocused,\r\n              notchedOutline: classes.notchedOutline,\r\n              input: classes.input\r\n            }\r\n          }}\r\n          className=\"form-control\"\r\n        />\r\n        <Field\r\n          name=\"content\"\r\n          label=\"Upiši svoj komentar...\"\r\n          component={this.renderComment}\r\n          validate={required}\r\n        />\r\n        <Field\r\n          name=\"name\"\r\n          label=\"Ime/username \"\r\n          component={this.renderComment}\r\n          validate={required}\r\n        />\r\n        <div className=\"d-flex justify-content-end mt-1\">\r\n          <button type=\"submit\" className=\"btn btn-success btn-sm\">\r\n            Save\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nAddComment.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\nexport default reduxForm({\r\n  form: \"CreateCommentForm\"\r\n})(\r\n  connect(\r\n    (state, ownProps) => ({ uid: state.user.uid }),\r\n    { saveComment }\r\n  )(withStyles(styles))(AddComment)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}