{"ast":null,"code":"import { auth, googleProvider } from \"../Firebase\";\nimport { useCookies } from \"react-cookie\";\nexport var GET_USER = \"get_user\";\nexport var USER_STATUS = \"user_status\";\nimport firebase from \"../Firebase\";\nexport function getUser() {\n  return function (dispatch) {\n    dispatch({\n      type: USER_STATUS,\n      payload: true\n    });\n    auth.onAuthStateChanged(function (user) {\n      dispatch({\n        type: GET_USER,\n        payload: user\n      });\n      dispatch({\n        type: USER_STATUS,\n        payload: false\n      });\n    });\n  };\n}\nexport function login(email, password) {\n  console.log(email); // Cookies.set(\"username\", username, \"/\");\n  // useCookies(\"username\", username, { path: \"/\" });\n\n  return function (dispatch) {\n    auth.signInWithEmailAndPassword(email, password);\n  };\n}\nexport function logout() {\n  return function (dispatch) {\n    return auth.signOut();\n  };\n}\n/*export function createAccount(email, password, username) {\r\n  return dispatch => {\r\n    auth.createUserWithEmailAndPassword(email, password).then(function(user) {\r\n      dispatch({ type: \"success\" });\r\n      auth.ref(`users/${user.uid}`).set({ name: username });\r\n      console.log(\"uid:\", user.uid);\r\n    });\r\n  };\r\n}*/\n\nexport function createAccount(_ref) {\n  var email = _ref.email,\n      password = _ref.password,\n      username = _ref.username;\n  var db = firebase.database();\n  return function (dispatch) {\n    auth.createUserWithEmailAndPassword(email, password) // here we get user id if creating is successful.\n    .then(function (user) {\n      dispatch({\n        type: \"succes\"\n      }); // I dispatched some message.\n\n      db.ref(\"users/\".concat(user.uid)).set({\n        name: username\n      }); // I added user\n\n      console.log(\"uid:\", user.uid);\n    });\n  };\n}","map":{"version":3,"sources":["C:\\Users\\kanto\\OneDrive\\Desktop\\blog\\src\\Actions\\UserActions.jsx"],"names":["auth","googleProvider","useCookies","GET_USER","USER_STATUS","firebase","getUser","dispatch","type","payload","onAuthStateChanged","user","login","email","password","console","log","signInWithEmailAndPassword","logout","signOut","createAccount","username","db","database","createUserWithEmailAndPassword","then","ref","uid","set","name"],"mappings":"AAAA,SAASA,IAAT,EAAeC,cAAf,QAAqC,aAArC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAO,IAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,IAAMC,WAAW,GAAG,aAApB;AACP,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAO,SAASC,OAAT,GAAmB;AACxB,SAAO,UAAAC,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,WADC;AAEPK,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAIAT,IAAAA,IAAI,CAACU,kBAAL,CAAwB,UAAAC,IAAI,EAAI;AAC9BJ,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEL,QADC;AAEPM,QAAAA,OAAO,EAAEE;AAFF,OAAD,CAAR;AAIAJ,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEJ,WADC;AAEPK,QAAAA,OAAO,EAAE;AAFF,OAAD,CAAR;AAID,KATD;AAUD,GAfD;AAgBD;AAED,OAAO,SAASG,KAAT,CAAeC,KAAf,EAAsBC,QAAtB,EAAgC;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EADqC,CAErC;AACA;;AACA,SAAO,UAAAN,QAAQ,EAAI;AACjBP,IAAAA,IAAI,CAACiB,0BAAL,CAAgCJ,KAAhC,EAAuCC,QAAvC;AACD,GAFD;AAGD;AAED,OAAO,SAASI,MAAT,GAAkB;AACvB,SAAO,UAAAX,QAAQ;AAAA,WAAIP,IAAI,CAACmB,OAAL,EAAJ;AAAA,GAAf;AACD;AAED;;;;;;;;;;AAUA,OAAO,SAASC,aAAT,OAAsD;AAAA,MAA7BP,KAA6B,QAA7BA,KAA6B;AAAA,MAAtBC,QAAsB,QAAtBA,QAAsB;AAAA,MAAZO,QAAY,QAAZA,QAAY;AAC3D,MAAMC,EAAE,GAAGjB,QAAQ,CAACkB,QAAT,EAAX;AACA,SAAO,UAAShB,QAAT,EAAmB;AACxBP,IAAAA,IAAI,CACDwB,8BADH,CACkCX,KADlC,EACyCC,QADzC,EAEE;AAFF,KAGGW,IAHH,CAGQ,UAASd,IAAT,EAAe;AACnBJ,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR,CADmB,CACW;;AAC9Bc,MAAAA,EAAE,CAACI,GAAH,iBAAgBf,IAAI,CAACgB,GAArB,GAA4BC,GAA5B,CAAgC;AAAEC,QAAAA,IAAI,EAAER;AAAR,OAAhC,EAFmB,CAEkC;;AACrDN,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBL,IAAI,CAACgB,GAAzB;AACD,KAPH;AAQD,GATD;AAUD","sourcesContent":["import { auth, googleProvider } from \"../Firebase\";\r\nimport { useCookies } from \"react-cookie\";\r\nexport const GET_USER = \"get_user\";\r\nexport const USER_STATUS = \"user_status\";\r\nimport firebase from \"../Firebase\";\r\nexport function getUser() {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: USER_STATUS,\r\n      payload: true\r\n    });\r\n    auth.onAuthStateChanged(user => {\r\n      dispatch({\r\n        type: GET_USER,\r\n        payload: user\r\n      });\r\n      dispatch({\r\n        type: USER_STATUS,\r\n        payload: false\r\n      });\r\n    });\r\n  };\r\n}\r\n\r\nexport function login(email, password) {\r\n  console.log(email);\r\n  // Cookies.set(\"username\", username, \"/\");\r\n  // useCookies(\"username\", username, { path: \"/\" });\r\n  return dispatch => {\r\n    auth.signInWithEmailAndPassword(email, password);\r\n  };\r\n}\r\n\r\nexport function logout() {\r\n  return dispatch => auth.signOut();\r\n}\r\n\r\n/*export function createAccount(email, password, username) {\r\n  return dispatch => {\r\n    auth.createUserWithEmailAndPassword(email, password).then(function(user) {\r\n      dispatch({ type: \"success\" });\r\n      auth.ref(`users/${user.uid}`).set({ name: username });\r\n      console.log(\"uid:\", user.uid);\r\n    });\r\n  };\r\n}*/\r\n\r\nexport function createAccount({ email, password, username }) {\r\n  const db = firebase.database();\r\n  return function(dispatch) {\r\n    auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      // here we get user id if creating is successful.\r\n      .then(function(user) {\r\n        dispatch({ type: \"succes\" }); // I dispatched some message.\r\n        db.ref(`users/${user.uid}`).set({ name: username }); // I added user\r\n        console.log(\"uid:\", user.uid);\r\n      });\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}