{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\src\\\\Container\\\\CreateProject.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getPosts, savePost, deletePost } from \"../Actions/PostActions\";\nimport { getUser, logout } from \"../Actions/UserActions\";\nimport { database } from \"../Firebase\";\nimport PostCard from \"../Components/PostCard\";\nimport ReactQuill from \"react-quill\";\nimport PropTypes from \"prop-types\";\nimport { Field, reduxForm, reset } from \"redux-form\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport \"../Layout/Navbar.css\";\nimport TextField from \"@material-ui/core/TextField\";\nimport compose from \"recompose/compose\";\nimport Navbar from \"../Layout/Navbar\";\nimport MenuBar from \"../Layout/MenuBar\";\nimport { required } from \"../Helpers/ReduxFormValidation\";\n\nvar styles = function styles(theme) {\n  return {\n    container: {\n      paddingTop: 50,\n      marginLeft: 5,\n      paddingLeft: 20\n    },\n    root: {\n      marginLeft: 5\n    },\n    head: {\n      fontSize: 30,\n      fontFamily: \"sans-serif\",\n      textAlign: \"center\",\n      textTransform: \"uppercase\",\n      letterSpacing: 0.5,\n      position: \"absolute\",\n      color: \"rgb(115, 70, 124)\",\n      fontWeight: 900,\n      marginLeft: 50,\n      whiteSpace: \"nowrap\",\n      marginTop: 10\n    },\n    link: {\n      textDecoration: \"none\"\n    },\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n      marginTop: theme.spacing.unit,\n      paddingBottom: 20\n    },\n    cssLabel: {\n      \"&$cssFocused\": {\n        color: \"black\",\n        fontSize: 20\n      }\n    },\n    cssFocused: {},\n    cssUnderline: {\n      \"&:after\": {\n        borderBottomColor: \"black\"\n      }\n    },\n    cssOutlinedInput: {\n      \"&$cssFocused $notchedOutline\": {\n        borderColor: \"black\"\n      }\n    },\n    notchedOutline: {},\n    bootstrapRoot: {\n      \"label + &\": {\n        marginTop: theme.spacing.unit * 3\n      }\n    },\n    bootstrapInput: {\n      borderRadius: 6,\n      backgroundColor: \"black\",\n      border: \"1px solid black\",\n      fontSize: 16,\n      width: \"600px\",\n      padding: \"10px 12px\",\n      transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n      // Use the system font instead of the default Roboto font.\n      fontFamily: [\"-apple-system\", \"BlinkMacSystemFont\", '\"Segoe UI\"', \"Roboto\", '\"Helvetica Neue\"', \"Arial\", \"sans-serif\", '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(\",\"),\n      \"&:focus\": {\n        borderRadius: 6,\n        borderColor: \"black\",\n        boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\"\n      }\n    },\n    bootstrapFormLabel: {\n      fontSize: 20\n    },\n    dense: {\n      marginTop: 25\n    },\n    input: {\n      marginLeft: 5,\n      fontSize: 20\n    },\n    buttonPost: {\n      margin: theme.spacing.unit,\n      fontFamily: \"sans-serif\",\n      textAlign: \"center\",\n      textTransform: \"uppercase\",\n      letterSpacing: 0.5,\n      borderColor: \"rgb(115, 70, 124)\",\n      color: \"#EEEEEE\",\n      backgroundColor: \"rgb(115, 70, 124)\",\n      fontSize: 20,\n      width: 120,\n      height: 50,\n      marginLeft: 5\n    },\n    file: {\n      margin: theme.spacing.unit,\n      fontFamily: \"sans-serif\",\n      textAlign: \"center\",\n      textTransform: \"uppercase\",\n      letterSpacing: 0.5,\n      borderColor: \"#D76000\",\n      color: \"#EEEEEE\",\n      backgroundColor: \"#D76000\",\n      fontSize: 12,\n      width: 200,\n      height: 50,\n      marginBottom: 10\n    }\n  };\n};\n\nvar CreateProject =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateProject, _Component);\n\n  function CreateProject() {\n    _classCallCheck(this, CreateProject);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CreateProject).apply(this, arguments));\n  }\n\n  _createClass(CreateProject, [{\n    key: \"renderField\",\n\n    /*constructor(props) {\n      super(props);\n      this.state = {\n        title: \"\",\n        quill: \"\",\n        naslovna: \"\",\n        sazetak: \"\",\n        signature: \"\",\n        loading: false,\n        posts: {}\n      };\n      this.handleChange = this.handleChange.bind(this);\n      this.handleChangeNaslovna = this.handleChangeNaslovna.bind(this);\n      this.handleChangeSazetak = this.handleChangeSazetak.bind(this);\n      this.onHandleSubmit = this.onHandleSubmit.bind(this);\n    }*/\n\n    /* componentWillMount() {\n      this.props.getPosts();\n    }\n     componentWillReceiveProps(nextProps) {\n      if (\n        nextProps.user.loading === false &&\n        nextProps.user.email === undefined\n      ) {\n        this.props.history.replace(\"/Login\");\n      }\n    }\n    componentDidMount() {\n      database.on(\"value\", snapshot => {\n        this.setState({\n          posts: snapshot.val(),\n          loading: false\n        });\n      });\n    }*/\n\n    /* handleChange(values) {\n      console.log(this.state);\n      this.setState({ quill: values });\n    }\n    handleChangeNaslovna(values) {\n      console.log(this.state);\n      this.setState({ naslovna: values });\n    }\n    handleChangeSazetak(values) {\n      console.log(this.state);\n      this.setState({ sazetak: values });\n    }*/\n    value: function renderField(field) {\n      var errStyle = {\n        borderColor: \"red\"\n      };\n      return React.createElement(\"input\", Object.assign({\n        type: \"text\",\n        placeholder: \"Enter a \".concat(field.label, \"...\")\n      }, field.input, {\n        className: field.class,\n        style: field.meta.touched && field.meta.error ? errStyle : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(values) {\n      this.props.savePost(values, this.props.user.uid).then(this.props.dispatch(reset(\"NewPost\")));\n    }\n    /*onHandleSubmit(values) {\n      console.log(this.state);\n      values.preventDefault();\n      const posts = {\n        title: this.state.title,\n        signature: this.state.signature,\n        naslovna: this.state.naslovna,\n        sazetak: this.state.sazetak,\n        quill: this.state.quill\n      };\n      database.push(posts);\n      this.setState({\n        title: \"\",\n        naslovna: \"\",\n        sazetak: \"\",\n        quill: \"\",\n        signature: \"\"\n      });\n    }*/\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          handleSubmit = _this$props.handleSubmit;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: classes.head,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"Novi post\"), React.createElement(PostCard, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: handleSubmit(this.onSubmit.bind(this)),\n        className: classes.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"title\",\n        component: this.renderField,\n        label: \"Title\",\n        class: \"footer-title\",\n        validate: required,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"signature\",\n        component: this.renderField,\n        label: \"signature\",\n        class: \"footer-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        className: classes.buttonPost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, \"Kreiraj\")))));\n    }\n  }]);\n\n  return CreateProject;\n}(Component);\n\nCreateProject.modules = {\n  toolbar: [[{\n    header: \"1\"\n  }, {\n    header: \"2\"\n  }], [{\n    size: []\n  }], [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"], [{\n    list: \"ordered\"\n  }, {\n    list: \"bullet\"\n  }, {\n    indent: \"-1\"\n  }, {\n    indent: \"+1\"\n  }], [\"link\", \"image\", \"video\"], [\"clean\"]],\n  clipboard: {\n    // toggle to add extra line breaks when pasting HTML:\n    matchVisual: false\n  }\n};\nCreateProject.formats = [\"header\", \"font\", \"size\", \"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\", \"list\", \"bullet\", \"indent\", \"link\", \"image\", \"video\"];\nCreateProject.modulesNaslovna = {\n  toolbar: [[\"image\"]],\n  clipboard: {\n    // toggle to add extra line breaks when pasting HTML:\n    matchVisual: false\n  }\n};\nvar form = reduxForm({\n  form: \"NewPost\"\n})(CreateProject);\nform.formatsNaslovna = [\"image\"];\nform.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nform = connect(function (state, ownProps) {\n  return {\n    posts: state.posts,\n    user: state.user\n  };\n}, {\n  savePost: savePost,\n  getPosts: getPosts,\n  deletePost: deletePost,\n  getUser: getUser,\n  logout: logout\n})(form);\nform.propTypes = {\n  classes: PropTypes.object.isRequired,\n  width: PropTypes.string.isRequired\n};\nexport default compose(withStyles(styles))(form);","map":{"version":3,"sources":["C:\\Users\\kanto\\OneDrive\\Desktop\\blog\\src\\Container\\CreateProject.jsx"],"names":["React","Component","connect","getPosts","savePost","deletePost","getUser","logout","database","PostCard","ReactQuill","PropTypes","Field","reduxForm","reset","withStyles","TextField","compose","Navbar","MenuBar","required","styles","theme","container","paddingTop","marginLeft","paddingLeft","root","head","fontSize","fontFamily","textAlign","textTransform","letterSpacing","position","color","fontWeight","whiteSpace","marginTop","link","textDecoration","textField","spacing","unit","marginRight","paddingBottom","cssLabel","cssFocused","cssUnderline","borderBottomColor","cssOutlinedInput","borderColor","notchedOutline","bootstrapRoot","bootstrapInput","borderRadius","backgroundColor","border","width","padding","transition","transitions","create","join","boxShadow","bootstrapFormLabel","dense","input","buttonPost","margin","height","file","marginBottom","CreateProject","field","errStyle","label","class","meta","touched","error","values","props","user","uid","then","dispatch","classes","handleSubmit","onSubmit","bind","renderField","modules","toolbar","header","size","list","indent","clipboard","matchVisual","formats","modulesNaslovna","form","formatsNaslovna","propTypes","object","isRequired","state","ownProps","posts","string"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getPosts, savePost, deletePost } from \"../Actions/PostActions\";\nimport { getUser, logout } from \"../Actions/UserActions\";\nimport { database } from \"../Firebase\";\nimport PostCard from \"../Components/PostCard\";\nimport ReactQuill from \"react-quill\";\nimport PropTypes from \"prop-types\";\nimport { Field, reduxForm, reset } from \"redux-form\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport \"../Layout/Navbar.css\";\nimport TextField from \"@material-ui/core/TextField\";\nimport compose from \"recompose/compose\";\nimport Navbar from \"../Layout/Navbar\";\nimport MenuBar from \"../Layout/MenuBar\";\nimport { required } from \"../Helpers/ReduxFormValidation\";\nconst styles = theme => ({\n  container: {\n    paddingTop: 50,\n    marginLeft: 5,\n    paddingLeft: 20\n  },\n  root: {\n    marginLeft: 5\n  },\n  head: {\n    fontSize: 30,\n    fontFamily: \"sans-serif\",\n    textAlign: \"center\",\n    textTransform: \"uppercase\",\n    letterSpacing: 0.5,\n    position: \"absolute\",\n    color: \"rgb(115, 70, 124)\",\n    fontWeight: 900,\n    marginLeft: 50,\n    whiteSpace: \"nowrap\",\n    marginTop: 10\n  },\n  link: {\n    textDecoration: \"none\"\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    marginTop: theme.spacing.unit,\n    paddingBottom: 20\n  },\n\n  cssLabel: {\n    \"&$cssFocused\": {\n      color: \"black\",\n      fontSize: 20\n    }\n  },\n  cssFocused: {},\n  cssUnderline: {\n    \"&:after\": {\n      borderBottomColor: \"black\"\n    }\n  },\n  cssOutlinedInput: {\n    \"&$cssFocused $notchedOutline\": {\n      borderColor: \"black\"\n    }\n  },\n  notchedOutline: {},\n  bootstrapRoot: {\n    \"label + &\": {\n      marginTop: theme.spacing.unit * 3\n    }\n  },\n  bootstrapInput: {\n    borderRadius: 6,\n    backgroundColor: \"black\",\n    border: \"1px solid black\",\n    fontSize: 16,\n    width: \"600px\",\n    padding: \"10px 12px\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"'\n    ].join(\",\"),\n    \"&:focus\": {\n      borderRadius: 6,\n      borderColor: \"black\",\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.25)\"\n    }\n  },\n  bootstrapFormLabel: {\n    fontSize: 20\n  },\n  dense: {\n    marginTop: 25\n  },\n  input: {\n    marginLeft: 5,\n    fontSize: 20\n  },\n  buttonPost: {\n    margin: theme.spacing.unit,\n    fontFamily: \"sans-serif\",\n    textAlign: \"center\",\n    textTransform: \"uppercase\",\n    letterSpacing: 0.5,\n    borderColor: \"rgb(115, 70, 124)\",\n    color: \"#EEEEEE\",\n    backgroundColor: \"rgb(115, 70, 124)\",\n    fontSize: 20,\n    width: 120,\n    height: 50,\n    marginLeft: 5\n  },\n  file: {\n    margin: theme.spacing.unit,\n    fontFamily: \"sans-serif\",\n    textAlign: \"center\",\n    textTransform: \"uppercase\",\n    letterSpacing: 0.5,\n    borderColor: \"#D76000\",\n    color: \"#EEEEEE\",\n    backgroundColor: \"#D76000\",\n    fontSize: 12,\n    width: 200,\n    height: 50,\n    marginBottom: 10\n  }\n});\n\nclass CreateProject extends Component {\n  /*constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      quill: \"\",\n      naslovna: \"\",\n      sazetak: \"\",\n      signature: \"\",\n      loading: false,\n      posts: {}\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeNaslovna = this.handleChangeNaslovna.bind(this);\n    this.handleChangeSazetak = this.handleChangeSazetak.bind(this);\n    this.onHandleSubmit = this.onHandleSubmit.bind(this);\n  }*/\n  /* componentWillMount() {\n    this.props.getPosts();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      nextProps.user.loading === false &&\n      nextProps.user.email === undefined\n    ) {\n      this.props.history.replace(\"/Login\");\n    }\n  }\n  componentDidMount() {\n    database.on(\"value\", snapshot => {\n      this.setState({\n        posts: snapshot.val(),\n        loading: false\n      });\n    });\n  }*/\n  /* handleChange(values) {\n    console.log(this.state);\n    this.setState({ quill: values });\n  }\n  handleChangeNaslovna(values) {\n    console.log(this.state);\n    this.setState({ naslovna: values });\n  }\n  handleChangeSazetak(values) {\n    console.log(this.state);\n    this.setState({ sazetak: values });\n  }*/\n  renderField(field) {\n    const errStyle = {\n      borderColor: \"red\"\n    };\n    return (\n      <input\n        type=\"text\"\n        placeholder={`Enter a ${field.label}...`}\n        {...field.input}\n        className={field.class}\n        style={field.meta.touched && field.meta.error ? errStyle : null}\n      />\n    );\n  }\n  onSubmit(values) {\n    this.props\n      .savePost(values, this.props.user.uid)\n      .then(this.props.dispatch(reset(\"NewPost\")));\n  }\n  /*onHandleSubmit(values) {\n    console.log(this.state);\n    values.preventDefault();\n    const posts = {\n      title: this.state.title,\n      signature: this.state.signature,\n      naslovna: this.state.naslovna,\n      sazetak: this.state.sazetak,\n      quill: this.state.quill\n    };\n    database.push(posts);\n    this.setState({\n      title: \"\",\n      naslovna: \"\",\n      sazetak: \"\",\n      quill: \"\",\n      signature: \"\"\n    });\n  }*/\n  render() {\n    const { classes, handleSubmit } = this.props;\n    return (\n      <div>\n        <div>\n          <h4 className={classes.head}>Novi post</h4>\n\n          <PostCard>\n            <form\n              onSubmit={handleSubmit(this.onSubmit.bind(this))}\n              className={classes.container}\n            >\n              <Field\n                name=\"title\"\n                component={this.renderField}\n                label=\"Title\"\n                class=\"footer-title\"\n                validate={required}\n              />\n              <br />\n              <Field\n                name=\"signature\"\n                component={this.renderField}\n                label=\"signature\"\n                class=\"footer-body\"\n              />\n              <button type=\"submit\" className={classes.buttonPost}>\n                Kreiraj\n              </button>\n            </form>\n          </PostCard>\n        </div>\n      </div>\n    );\n  }\n}\nCreateProject.modules = {\n  toolbar: [\n    [{ header: \"1\" }, { header: \"2\" }],\n    [{ size: [] }],\n    [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\n    [\n      { list: \"ordered\" },\n      { list: \"bullet\" },\n      { indent: \"-1\" },\n      { indent: \"+1\" }\n    ],\n    [\"link\", \"image\", \"video\"],\n    [\"clean\"]\n  ],\n  clipboard: {\n    // toggle to add extra line breaks when pasting HTML:\n    matchVisual: false\n  }\n};\n\nCreateProject.formats = [\n  \"header\",\n  \"font\",\n  \"size\",\n  \"bold\",\n  \"italic\",\n  \"underline\",\n  \"strike\",\n  \"blockquote\",\n  \"list\",\n  \"bullet\",\n  \"indent\",\n  \"link\",\n  \"image\",\n  \"video\"\n];\nCreateProject.modulesNaslovna = {\n  toolbar: [[\"image\"]],\n  clipboard: {\n    // toggle to add extra line breaks when pasting HTML:\n    matchVisual: false\n  }\n};\nlet form = reduxForm({ form: \"NewPost\" })(CreateProject);\nform.formatsNaslovna = [\"image\"];\n\nform.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nform = connect(\n  (state, ownProps) => ({\n    posts: state.posts,\n    user: state.user\n  }),\n  { savePost, getPosts, deletePost, getUser, logout }\n)(form);\nform.propTypes = {\n  classes: PropTypes.object.isRequired,\n  width: PropTypes.string.isRequired\n};\nexport default compose(withStyles(styles))(form);\n"]},"metadata":{},"sourceType":"module"}