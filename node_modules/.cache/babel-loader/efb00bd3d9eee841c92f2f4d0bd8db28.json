{"ast":null,"code":"import { auth, googleProvider, twitterProvider } from \"../Firebase\";\nexport var GET_USER = \"get_user\";\nexport var USER_STATUS = \"user_status\";\nexport function getUser() {\n  return function (dispatch) {\n    dispatch({\n      type: USER_STATUS,\n      payload: true\n    });\n    auth.onAuthStateChanged(function (user) {\n      dispatch({\n        type: GET_USER,\n        payload: user\n      });\n      dispatch({\n        type: USER_STATUS,\n        payload: false\n      });\n    });\n  };\n}\nexport function getDbUsers() {\n  return function (dispatch) {\n    dispatch({\n      type: USER_DB_STATUS,\n      payload: true\n    });\n    database.ref(\"users\").on(\"value\", function (db) {\n      dispatch({\n        type: GET_DB_USERS,\n        payload: db.val()\n      });\n      dispatch({\n        type: USER_DB_STATUS,\n        payload: false\n      });\n    });\n  };\n}\nexport function login(email, password) {\n  return function (dispatch) {\n    return auth.signInWithEmailAndPassword(email, password);\n  };\n}\nexport function logout() {\n  return function (dispatch) {\n    return auth.signOut();\n  };\n}\nexport function createAccount(data) {\n  var fname = data.fname,\n      lname = data.lname,\n      email = data.email,\n      password = data.password;\n  return function (dispatch) {\n    return auth.createUserWithEmailAndPassword(fname, lname, email, password);\n  };\n}\nexport function googleLogin() {\n  return function (dispatch) {\n    return auth.signInWithPopup(googleProvider);\n  };\n}","map":{"version":3,"sources":["C:\\Users\\kanto\\OneDrive\\Desktop\\blog\\src\\Actions\\UserActions.jsx"],"names":["auth","googleProvider","twitterProvider","GET_USER","USER_STATUS","getUser","dispatch","type","payload","onAuthStateChanged","user","getDbUsers","USER_DB_STATUS","database","ref","on","db","GET_DB_USERS","val","login","email","password","signInWithEmailAndPassword","logout","signOut","createAccount","data","fname","lname","createUserWithEmailAndPassword","googleLogin","signInWithPopup"],"mappings":"AAAA,SAASA,IAAT,EAAeC,cAAf,EAA+BC,eAA/B,QAAsD,aAAtD;AAEA,OAAO,IAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,IAAMC,WAAW,GAAG,aAApB;AACP,OAAO,SAASC,OAAT,GAAmB;AACxB,SAAO,UAAAC,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEH,WADC;AAEPI,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAIAR,IAAAA,IAAI,CAACS,kBAAL,CAAwB,UAAAC,IAAI,EAAI;AAC9BJ,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEJ,QADC;AAEPK,QAAAA,OAAO,EAAEE;AAFF,OAAD,CAAR;AAIAJ,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEH,WADC;AAEPI,QAAAA,OAAO,EAAE;AAFF,OAAD,CAAR;AAID,KATD;AAUD,GAfD;AAgBD;AACD,OAAO,SAASG,UAAT,GAAsB;AAC3B,SAAO,UAAAL,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEK,cADC;AAEPJ,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAIAK,IAAAA,QAAQ,CAACC,GAAT,CAAa,OAAb,EAAsBC,EAAtB,CAAyB,OAAzB,EAAkC,UAAAC,EAAE,EAAI;AACtCV,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEU,YADC;AAEPT,QAAAA,OAAO,EAAEQ,EAAE,CAACE,GAAH;AAFF,OAAD,CAAR;AAIAZ,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEK,cADC;AAEPJ,QAAAA,OAAO,EAAE;AAFF,OAAD,CAAR;AAID,KATD;AAUD,GAfD;AAgBD;AAED,OAAO,SAASW,KAAT,CAAeC,KAAf,EAAsBC,QAAtB,EAAgC;AACrC,SAAO,UAAAf,QAAQ;AAAA,WAAIN,IAAI,CAACsB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAJ;AAAA,GAAf;AACD;AAED,OAAO,SAASE,MAAT,GAAkB;AACvB,SAAO,UAAAjB,QAAQ;AAAA,WAAIN,IAAI,CAACwB,OAAL,EAAJ;AAAA,GAAf;AACD;AAED,OAAO,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAAA,MAC1BC,KAD0B,GACQD,IADR,CAC1BC,KAD0B;AAAA,MACnBC,KADmB,GACQF,IADR,CACnBE,KADmB;AAAA,MACZR,KADY,GACQM,IADR,CACZN,KADY;AAAA,MACLC,QADK,GACQK,IADR,CACLL,QADK;AAElC,SAAO,UAAAf,QAAQ;AAAA,WACbN,IAAI,CAAC6B,8BAAL,CAAoCF,KAApC,EAA2CC,KAA3C,EAAkDR,KAAlD,EAAyDC,QAAzD,CADa;AAAA,GAAf;AAED;AAED,OAAO,SAASS,WAAT,GAAuB;AAC5B,SAAO,UAAAxB,QAAQ;AAAA,WAAIN,IAAI,CAAC+B,eAAL,CAAqB9B,cAArB,CAAJ;AAAA,GAAf;AACD","sourcesContent":["import { auth, googleProvider, twitterProvider } from \"../Firebase\";\r\n\r\nexport const GET_USER = \"get_user\";\r\nexport const USER_STATUS = \"user_status\";\r\nexport function getUser() {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: USER_STATUS,\r\n      payload: true\r\n    });\r\n    auth.onAuthStateChanged(user => {\r\n      dispatch({\r\n        type: GET_USER,\r\n        payload: user\r\n      });\r\n      dispatch({\r\n        type: USER_STATUS,\r\n        payload: false\r\n      });\r\n    });\r\n  };\r\n}\r\nexport function getDbUsers() {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: USER_DB_STATUS,\r\n      payload: true\r\n    });\r\n    database.ref(\"users\").on(\"value\", db => {\r\n      dispatch({\r\n        type: GET_DB_USERS,\r\n        payload: db.val()\r\n      });\r\n      dispatch({\r\n        type: USER_DB_STATUS,\r\n        payload: false\r\n      });\r\n    });\r\n  };\r\n}\r\n\r\nexport function login(email, password) {\r\n  return dispatch => auth.signInWithEmailAndPassword(email, password);\r\n}\r\n\r\nexport function logout() {\r\n  return dispatch => auth.signOut();\r\n}\r\n\r\nexport function createAccount(data) {\r\n  const { fname, lname, email, password } = data;\r\n  return dispatch =>\r\n    auth.createUserWithEmailAndPassword(fname, lname, email, password);\r\n}\r\n\r\nexport function googleLogin() {\r\n  return dispatch => auth.signInWithPopup(googleProvider);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}