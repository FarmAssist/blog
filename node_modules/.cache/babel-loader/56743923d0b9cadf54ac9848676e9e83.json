{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\kanto\\\\OneDrive\\\\Desktop\\\\blog\\\\src\\\\Container\\\\Fake.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getPosts, savePost, deletePost } from \"../Actions/PostActions\";\nimport { Field, reduxForm, reset } from \"redux-form\";\nimport _ from \"lodash\";\nimport PostCard from \"../Components/PostCard\";\nimport { getUser, logout } from \"../Actions/UserActions\";\nimport { Link } from \"react-router-dom\";\nimport { required } from \"../Helpers/ReduxFormValidation\";\nimport { Redirect } from \"react-router-dom\";\n\nvar Fake =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Fake, _Component);\n\n  function Fake() {\n    _classCallCheck(this, Fake);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Fake).apply(this, arguments));\n  }\n\n  _createClass(Fake, [{\n    key: \"renderPosts\",\n    value: function renderPosts() {\n      var _this = this;\n\n      console.log(this.props.user.uid);\n      console.log(this.props.user.email);\n      return _.map(this.props.posts, function (post, key) {\n        return React.createElement(PostCard, {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/\".concat(key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, post.title)), React.createElement(\"p\", {\n          className: \"card-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, post.body), post.uid === _this.props.user.uid && React.createElement(\"button\", {\n          className: \"btn btn-danger float-right\",\n          onClick: function onClick() {\n            return _this.props.deletePost(key);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, \"Delete\"));\n      });\n    }\n  }, {\n    key: \"getUsername\",\n    value: function getUsername() {\n      console.log(this.props.user.uid);\n      console.log(this.props.user.email);\n      var username = this.props.user.email;\n      return username;\n    }\n  }, {\n    key: \"renderField\",\n    value: function renderField(field) {\n      var errStyle = {\n        borderColor: \"red\"\n      };\n      return React.createElement(\"input\", Object.assign({\n        type: \"text\",\n        placeholder: \"Enter a \".concat(field.label, \"...\")\n      }, field.input, {\n        className: field.class,\n        style: field.meta.touched && field.meta.error ? errStyle : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(values) {\n      this.props.savePost(values, this.props.user.uid).then(this.props.dispatch(reset(\"NewPost\")));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var handleSubmit = this.props.handleSubmit;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"navbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-danger\",\n        onClick: function onClick() {\n          _this2.props.logout();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Sign out\")), this.getUsername(), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"navbar fixed-bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: handleSubmit(this.onSubmit.bind(this)),\n        className: \"footerForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"title\",\n        component: this.renderField,\n        label: \"Title\",\n        class: \"footer-title\",\n        validate: required,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"body\",\n        component: this.renderField,\n        label: \"Body\",\n        class: \"footer-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn footer-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Post\")))));\n    }\n  }]);\n\n  return Fake;\n}(Component);\n\nvar form = reduxForm({\n  form: \"NewPost\"\n})(Fake);\nform = connect(function (state, ownProps) {\n  return {\n    posts: state.posts,\n    user: state.user\n  };\n}, {\n  savePost: savePost,\n  getPosts: getPosts,\n  deletePost: deletePost,\n  getUser: getUser,\n  logout: logout\n})(form);\nexport default form;","map":{"version":3,"sources":["C:\\Users\\kanto\\OneDrive\\Desktop\\blog\\src\\Container\\Fake.js"],"names":["React","Component","connect","getPosts","savePost","deletePost","Field","reduxForm","reset","_","PostCard","getUser","logout","Link","required","Redirect","Fake","console","log","props","user","uid","email","map","posts","post","key","title","body","username","field","errStyle","borderColor","label","input","class","meta","touched","error","values","then","dispatch","handleSubmit","getUsername","onSubmit","bind","renderField","form","state","ownProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getPosts, savePost, deletePost } from \"../Actions/PostActions\";\r\nimport { Field, reduxForm, reset } from \"redux-form\";\r\nimport _ from \"lodash\";\r\nimport PostCard from \"../Components/PostCard\";\r\nimport { getUser, logout } from \"../Actions/UserActions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { required } from \"../Helpers/ReduxFormValidation\";\r\n\r\nimport { Redirect } from \"react-router-dom\";\r\nclass Fake extends Component {\r\n  renderPosts() {\r\n    console.log(this.props.user.uid);\r\n    console.log(this.props.user.email);\r\n    return _.map(this.props.posts, (post, key) => {\r\n      return (\r\n        <PostCard key={key}>\r\n          <Link to={`/${key}`}>\r\n            <h3>{post.title}</h3>\r\n          </Link>\r\n          <p className=\"card-text\">{post.body}</p>\r\n          {post.uid === this.props.user.uid && (\r\n            <button\r\n              className=\"btn btn-danger float-right\"\r\n              onClick={() => this.props.deletePost(key)}\r\n            >\r\n              Delete\r\n            </button>\r\n          )}\r\n        </PostCard>\r\n      );\r\n    });\r\n  }\r\n  getUsername() {\r\n    console.log(this.props.user.uid);\r\n    console.log(this.props.user.email);\r\n    let username = this.props.user.email;\r\n    return username;\r\n  }\r\n  renderField(field) {\r\n    const errStyle = {\r\n      borderColor: \"red\"\r\n    };\r\n    return (\r\n      <input\r\n        type=\"text\"\r\n        placeholder={`Enter a ${field.label}...`}\r\n        {...field.input}\r\n        className={field.class}\r\n        style={field.meta.touched && field.meta.error ? errStyle : null}\r\n      />\r\n    );\r\n  }\r\n\r\n  onSubmit(values) {\r\n    this.props\r\n      .savePost(values, this.props.user.uid)\r\n      .then(this.props.dispatch(reset(\"NewPost\")));\r\n  }\r\n\r\n  render() {\r\n    const { handleSubmit } = this.props;\r\n    return (\r\n      <div>\r\n        <div className=\"navbar\">\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            onClick={() => {\r\n              this.props.logout();\r\n            }}\r\n          >\r\n            Sign out\r\n          </button>\r\n        </div>\r\n        {this.getUsername()}\r\n        <div className=\"container\">\r\n          <div className=\"navbar fixed-bottom\">\r\n            <form\r\n              onSubmit={handleSubmit(this.onSubmit.bind(this))}\r\n              className=\"footerForm\"\r\n            >\r\n              <Field\r\n                name=\"title\"\r\n                component={this.renderField}\r\n                label=\"Title\"\r\n                class=\"footer-title\"\r\n                validate={required}\r\n              />\r\n              <Field\r\n                name=\"body\"\r\n                component={this.renderField}\r\n                label=\"Body\"\r\n                class=\"footer-body\"\r\n              />\r\n              <button type=\"submit\" className=\"btn footer-button\">\r\n                Post\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nlet form = reduxForm({\r\n  form: \"NewPost\"\r\n})(Fake);\r\n\r\nform = connect(\r\n  (state, ownProps) => ({\r\n    posts: state.posts,\r\n    user: state.user\r\n  }),\r\n  { savePost, getPosts, deletePost, getUser, logout }\r\n)(form);\r\n\r\nexport default form;\r\n"]},"metadata":{},"sourceType":"module"}